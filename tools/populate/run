#!/bin/bash

# usage: run <rtroot> <app> [args]

# derive PPWD
PPWD=`dirname $0`

# convert '/cygdrive/X/' to 'X:/'. otherwise JVM wouldn't recognize the path
PPWD=`echo $PPWD | sed -e 's|/cygdrive/\([a-zA-Z]\)/|\1:/|'`


if [ x`uname -s | grep -i 'cygwin\|mingw'` != x ]; then
    S=';'
else
    EXEC=exec
    S=':'
fi

OS=`"$PPWD"/os`
if [ $OS == win ]; then
    JAVA="$PPWD/jre/bin/java"
elif [ $OS == osx ]; then
    JAVA="$PPWD/jre/bin/java"
    VMARGS="$VMARGS -XstartOnFirstThread"
    export DYLD_LIBRARY_PATH=$PPWD:$DYLD_LIBRARY_PATH
elif [ x`echo $OS | grep linux` != x ]; then
    # Architecture detection without dependencies beyond coreutils.
    # ELF files start out "\x7fELF", and the following byte is
    #   0x01 for 32-bit and
    #   0x02 for 64-bit.
    CURRENT_EXE_HEAD=$(head -c 5 /proc/self/exe )
    case "$CURRENT_EXE_HEAD" in
        "$(printf '\x7fELF\x01')")
            # 32-bit ELF
            JRE_LIB_ARCH=i386
            ;;
        "$(printf '\x7fELF\x02')")
            # 64-bit ELF
            JRE_LIB_ARCH=amd64
            ;;
        *)
            echo "I don't recognize your userspace executable format, so I can't launch."
            echo "Sorry about that."
            exit 1
    esac
    # We need to set the LD_LIBRARY_PATH to include the JRE directories so that
    # aerofsd will successfully launch
    JRE_BASE="$PPWD/jre"
    JAVA="$JRE_BASE/bin/java"
    JRE_LIB="$JRE_BASE/lib/$JRE_LIB_ARCH"
    export LD_LIBRARY_PATH=$PPWD:$JRE_LIB:$JRE_LIB/server:$LD_LIBRARY_PATH
fi

CP="$PPWD/bin$S$PPWD/lib/*"

VMARGS_DBG="$VMARGS -Xmx64m -XX:+UseConcMarkSweepGC -XX:+HeapDumpOnOutOfMemoryError -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"
VMARGS_PROD="$VMARGS -Xmx64m -XX:+UseConcMarkSweepGC -XX:+HeapDumpOnOutOfMemoryError"

# set DEBUG to "gdb --args" to run in debugger
$EXEC $DEBUG $JAVA $VMARGS_PROD -Djava.library.path="$PPWD" -ea -cp "$CP" com.aerofs.Main "$@"
