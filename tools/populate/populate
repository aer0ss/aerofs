#!/bin/bash

###############################################################################
#
# This script creates the approot directory and populates it
# with the files needed for a staging AeroFS
#
###############################################################################
set -ue

readonly ERRBADARGS=1
readonly ERRBADMODE=2
readonly ERRBADPRODUCT=3

function print_usage() {
    echo "usage: $0 [mode] [product] [os] [resource_root_dir] [output_dir]" >&2
    echo "    [mode]              Specifies which mode the properties are for" >&2
    echo "                        Can be PROD|CI|ENTERPRISE." >&2
    echo "    [product]           Specifies which product the properties are for" >&2
    echo "                        Can be TEAM_SERVER|CLIENT." >&2
    echo "    [os]                OS to populate for. Can be osx, win, linux32 or" >&2
    echo "                        linux64. If not set, we will use the output from the ./os script." >&2
    echo "    [resource_root_dir] Directory where all non-server-specific resources are stored" >&2
    echo "    [output_dir]        Directory to which all the resources should be copied" >&2
}

function setup_clean_approot() {
    if [[ -d "$APPROOT" ]]
    then
        local approot_contents=$( ls "$APPROOT" )
        approot_contents=${approot_contents/bin/} # remove bin from the list of approot contents
        for content in $approot_contents # hopefully our filenames don't have spaces
        do
            rm -rf "$APPROOT/$content"
        done
    else
        mkdir -p "$APPROOT"
    fi
}

function copy_os_specific_resources() {
    mkdir -p "$APPROOT/lib"

    # copy over all the common client resources (includes platform-independent icons/libs)
    # FIXME (AG): should I not copy over the test libraries?

    cp -R "$COMMON_RESOURCES_DIR/lib"*/*.jar "$APPROOT"/lib/
    cp -R "$CLIENT_RESOURCES_DIR/all/lib"*/*.jar "$APPROOT"/lib/ # lib directories

    for resource in $( ls "$CLIENT_RESOURCES_DIR/all/" ) # non-lib directories
    do
        if [[ $resource != lib* ]]
        then
            cp -R "$CLIENT_RESOURCES_DIR/all/$resource" "$APPROOT"/
        fi
    done

    # copy over the os-specific resources
    # IMPORTANT: must come _after_ the common copy above, so that os-specific resources
    # can overwrite the identically-named platform-independent ones
    # FIXME (AG): Yeah. I don't like it
    cp -R "$CLIENT_RESOURCES_DIR/$OS/"* "$APPROOT"/
}

# Create a version file with the specical development version 100.0.0
# This keeps aerofs from being updated
# This version number must be kept in sync with src/launcher/launcher.lib/liblauncher.cpp
function create_max_version_file() {
    if [[ "$MODE" == 'CI' || "$MODE" == 'ENTERPRISE' ]]
    then
        echo "100.0.0" > "$APPROOT"/version
    fi
}

function create_site_properties_file() {
    if [[ "$MODE" == 'ENTERPRISE' ]]
    then
        set +e
        wget -qO- --no-check-certificate https://persistent.syncfs.com/ | grep config.loader > "$APPROOT"/site-config.properties

        if [[ $? -ne 0 ]]
        then
            echo "ERROR: Local prod configuration service not available."
            exit 1
        fi

        set -e
    fi
}

function copy_run_scripts() {
    # os script is copied because it is used by the run script
    cp "$PPWD/os" "$PPWD/run" "$PPWD/rundebug" "$APPROOT"/
}

###############################################################################
#
# main script
#
###############################################################################

# usage
if [[ $# -ne 5 || x"$1" == x || x"$2" == x || x"$3" == x || x"$4" == x || x"$5" == x ]]
then
    print_usage
    exit $ERRBADARGS
fi

# constants
readonly PPWD="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
readonly MODE="$1"
readonly LABELING="$2"
readonly OS="$3"
readonly BASE_RESOURCES_DIR="$4"
readonly COMMON_RESOURCES_DIR="$BASE_RESOURCES_DIR/common"
readonly CLIENT_RESOURCES_DIR="$BASE_RESOURCES_DIR/client"
readonly APPROOT="$5"

# tasks
setup_clean_approot
"$PPWD/copy_mode_and_product_resources" "$MODE" "$LABELING" "$BASE_RESOURCES_DIR" "$APPROOT" "$APPROOT/bin"
copy_os_specific_resources
create_max_version_file
create_site_properties_file
copy_run_scripts
