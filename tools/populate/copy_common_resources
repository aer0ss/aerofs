#!/bin/bash -ue

###############################################################################
#
# This script copies the appropriate properties files for a MODE to a named
# output location
#
###############################################################################

readonly ERRBADARGS=1
readonly ERRBADMODE=2

function print_usage() {
    echo "usage: $0 [mode] [resource_root_dir] [output_dir] [properties_dir]" >&2
    echo "    [mode]              Specifies which mode the properties are for" >&2
    echo "                        Can be PUBLIC|PRIVATE|CI." >&2
    echo "    [resource_root_dir] Directory where all non-server-specific resources are stored" >&2
    echo "    [output_dir]        Destination directory for root resources (certs)" >&2
    echo "    [properties_dir]    Destination directory for classpath resources (.properties, .xml)" >&2
}

# Copy resource to final destination, determined by extension.
#
# N.B.:
#   Resources, roughtly those loaded by the classloader in a getResource call, are identified by
#   extension: *.properties *.xml
#   These resources will be copied to PROPERTIES_OUTPUT_DIR, which must correspond with the root of
#   a classpath element.
#
#   Any other files found in resource/common (notably certs) are loaded _explicitly_ from
#   approot. (This is a good thing, we shouldn't use getResource for a certificate.)
#   These artifacts will be copied to ROOT_OUTPUT_DIR, which should correspond with the
#   application root.
#
# PARAMS
#   $1 : source filename
#   $2 : destination filename if it differs from $1. Basename only, no path info.
#
function copy_resource_to_appropriate_target() {
    local srcfile=$1

    case "$srcfile" in
        *properties|*xml)
            cp "$srcfile" "$PROPERTIES_OUTPUT_DIR/"
            ;;
        *)
            cp "$srcfile" "$ROOT_OUTPUT_DIR/"
            ;;
    esac
}

# Copy resources from resource/common/* to the final destinations.
function copy_resources() {
    mkdir -p "$ROOT_OUTPUT_DIR"
    mkdir -p "$PROPERTIES_OUTPUT_DIR"

    # copy all the mode-specific resources over
    for file in "$MODE_RESOURCES_DIR/$LOWERCASE_MODE"/* ; do
        copy_resource_to_appropriate_target "$file"
    done
    # and the default logback configs (and maybe more in the future?)
    for file in "$OTHER_RESOURCES_DIR"/* ; do
        copy_resource_to_appropriate_target "$file"
    done
}

###############################################################################
#
# main script
#
###############################################################################

# all arguments specified
if [[ $# -ne 4 ]]
then
    print_usage
    exit $ERRBADARGS
fi

# mode
readonly MODE="$1"
readonly LOWERCASE_MODE=$( echo $MODE | tr '[:upper:]' '[:lower:]' )
if [[ "$MODE" != 'PUBLIC' && "$MODE" != 'PRIVATE' && "$MODE" != "CI" ]]
then
    print_usage
    exit $ERRBADMODE
fi

# directories
readonly RESOURCES_DIR="$2"
readonly MODE_RESOURCES_DIR="$2/common/mode"
readonly OTHER_RESOURCES_DIR="$2/common/other"
readonly ROOT_OUTPUT_DIR="$3"
readonly PROPERTIES_OUTPUT_DIR="$4"

copy_resources
