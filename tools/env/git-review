#!/bin/bash
##
# git-review checks whitespace and pushes the current branch to Gerrit for review
#
# usage: git-review [-n] [remote branch]
##

# Currently only operates on a fixed remote
REMOTE="origin"
CHECK=1

# Repo root is up two levels (tools/env) from here.
REPO_ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )"/../.. && pwd )"

case x"$1" in
    x-n)
        CHECK=0
        shift
    ;;
esac

REMOTE_BRANCH="$1"
if [ -z "$REMOTE_BRANCH" ]; then
    # No remote branch given
    # Extract the current fully qualified branch name (ex: refs/heads/master)
    # so that we can look up the remote tracking branch
    BRANCH=`git symbolic-ref HEAD 2> /dev/null`
    if [ "$?" != "0" ]; then
        echo "Not on a valid branch" 1>&2
        exit 2
    fi

    # Find the remote branch this branch is tracking
    REMOTE_BRANCH=`git for-each-ref --format='%(upstream:short)' $BRANCH | grep "^origin/" | cut -c 8-`
    if [ -z "$REMOTE_BRANCH" ]; then
        echo "Not tracking a remote branch" 1>&2
        exit 3
    fi
fi

if [ "$CHECK" -ne 0 ]; then

    # Check for whitespace errors. Compare against upstream commit
    git diff $REMOTE/$REMOTE_BRANCH HEAD --check
    if [ "$?" != "0" ]; then
        echo "Please fix whitespace errors before submitting patch set" 1>&2
        exit 1
    fi

    # Check for common formatting issues. (Missing or extra spaces around keywords, etc...)

    KEYWORDS="(if|for|while|catch|finally|synchronized)"
    FORMATTING_ISSUES=$(git diff $REMOTE/$REMOTE_BRANCH HEAD | grep -E "^\+.*("\
"($KEYWORDS\()"\
"|($KEYWORDS \( )"\
"|(\){)"\
"|( \) {)"\
"|(\".*[a-zA-Z]\.  [a-zA-Z].*\")"\
")")

    if [ -n "$FORMATTING_ISSUES" ]; then
        echo "Your commit contains formatting errors."
        echo "Please search your commit diff for the following lines and fix them:"
        echo "$FORMATTING_ISSUES"
        exit 1
    fi

    # Check that unit tests were run and a report generated.  This doesn't
    # guarantee that unit tests passed, but at least it'll remind people to run
    # them.
    REPORT_FILE="$REPO_ROOT/out.ant/reports/index.html"
    if [ ! -f "$REPORT_FILE" ] ; then
        echo "You don't appear to have run unit tests.  Please run them:"
        echo "cd \"$REPO_ROOT\" && ant test_unit"
        echo "(override possible with git review -n)"
        exit 1
    fi
fi

git push $REMOTE HEAD:refs/for/$REMOTE_BRANCH
