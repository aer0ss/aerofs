#!/bin/bash
# This script retrives defect log files and retrace them
set -eu

if [ $# -lt 3 ]; then
    echo "usage: $0 public|private [version] [defect # (multiple, space separated)]"
    echo
    echo "example: $0 public 0.2.37 6308 6310 6317"
    exit 1
fi

MODE="$1"
VER="$2"
shift 
shift
DEFECTS="$@"

BASE="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
MAP_FILE="$BASE"/"aerofs-$VER-$MODE.map"

retrace()
{
    FOLDER=$1
    PROGRAM=$2

    LANG=C sed -i '' 's/^  /   at /g' "$FOLDER/$PROGRAM.log"
    LANG=C sed -i '' 's/at at/at/g' "$FOLDER/$PROGRAM.log"

    mv "$FOLDER/$PROGRAM.log" "$FOLDER/obfuscated.$PROGRAM.log"
    ${BASE}/proguard/bin/retrace.sh "$MAP_FILE" "$FOLDER/obfuscated.$PROGRAM.log" > "$FOLDER/$PROGRAM.log"
}

main()
{
    $BASE/get-map $MODE $VER $BASE

    for DEFECT in $DEFECTS; do
        TARGET_FOLDER="defect-$DEFECT" # puts this into the pwd
        if [[ -e "$TARGET_FOLDER" ]]; then
            echo "$TARGET_FOLDER already exists"
            continue
        fi
        ZIP_FILE="log.defect-$DEFECT.zip"
        scp sv.aerofs.com:/var/svlogs_prod/defect/"$ZIP_FILE" .
        mkdir "$TARGET_FOLDER"
        unzip -o "$ZIP_FILE" -d "$TARGET_FOLDER"
        rm "$ZIP_FILE"

        echo "Retracing logs for $DEFECT"

        for i in daemon cli gui; do
            if [ -f "$TARGET_FOLDER/$i.log" ]; then
                retrace "$TARGET_FOLDER" $i
            fi
        done

        if [ ! -z "$(ls $TARGET_FOLDER/name*map 2>/dev/null)" ]
        then
            echo "Reverse crc logs for $DEFECT"

            for i in daemon cli gui; do
                if [ -f "$TARGET_FOLDER/$i.log" ]; then
                    mv "$TARGET_FOLDER/$i.log" "$TARGET_FOLDER/unmapped.$i.log"

                    cat "$TARGET_FOLDER/unmapped.$i.log" | \
                        ${BASE}/reverse-crc/reverse-crc.py -f $(ls "$TARGET_FOLDER/name"*"map") > \
                        "$TARGET_FOLDER/$i.log"
                fi
            done
        fi

        rm -f "$TARGET_FOLDER/obfuscated"*
        rm -f "$TARGET_FOLDER/unmapped"*
        rm -f "$TARGET_FOLDER/name"*"map"
    done

    echo "Done"
}

main
