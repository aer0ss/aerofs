#!/bin/bash
set -eu

###############################################################################
#
# usage and parameters
#
###############################################################################

function DieUsage {
    echo "usage: $0 <build_mode> <build_product> <sign_mode> [--no-obfuscate]" >&2
    echo "       [--build-linux-tgz] [--build-linux-update-tgzs] [--build-linux-deb]" >&2
    echo "       [--build-windows-exe] [--build-osx-packages] [--build-all]" >&2
    echo " " >&2
    echo "<build_mode>: PUBLIC|PRIVATE" >&2
    echo "<build_client>: CLIENT|TEAM_SERVER" >&2
    echo "<sign_mode>: SIGNED|UNSIGNED" >&2
    echo "[--no-obfuscate]: skip obfuscation of java code (default is to obfuscate)" >&2
    echo "[--build-linux-tgz]: build the Linux installer .tgz" >&2
    echo "[--build-linux-update-tgzs]: build the Linux updater .tgz" >&2
    echo "[--build-linux-deb]: build the Linux installer .deb " >&2
    echo "[--build-windows-exe]: build the Windows installer .exe " >&2
    echo "[--build-osx-packages]: build the OSX installer/updater packages " >&2
    echo "[--build-all]: build all of the above (the others do not need to be specified)" >&2
    echo " " >&2
    echo "example: $0 PRIVATE CLIENT UNSIGNED --build-all" >&2
    echo "example: $0 PUBLIC TEAM_SERVER UNSIGNED --no-obfuscate --build-linux-tgz" >&2
    exit $ERRBADARGS
}

##
# Parse positional args
##
case ${1:-} in
    PUBLIC|PRIVATE) BUILD_MODE=$1;;
    *) DieUsage;;
esac
case ${2:-} in
    CLIENT|TEAM_SERVER) BUILD_PRODUCT=$2;;
    *) DieUsage;;
esac
case ${3:-} in
    SIGNED|UNSIGNED) SIGN_MODE=$3;;
    *) DieUsage;;
esac
shift 3

##
# Parse long-opts
##
RELEASE_FLAGS=""
BUILD_FLAGS=""
while [ "${1:-}" != "" ]; do
    case "$1" in
        "--no-obfuscate")
            RELEASE_FLAGS="$1"
            ;;
        "--build-linux-tgz" | "--build-linux-update-tgzs" | "--build-linux-deb" | "--build-windows-exe" | "--build-osx-packages")
            BUILD_FLAGS="${BUILD_FLAGS} $1"
            ;;
        "--build-all")
            BUILD_FLAGS="$1"
            ;;
        *)
            echo "Unknown argument: $1" >&2
            DieUsage
            ;;
    esac
    shift
done

include include/common $BUILD_MODE $BUILD_PRODUCT

#******************************************************************************
#******************************************************************************
#**
#** Run all of the build steps
#**
#******************************************************************************
#******************************************************************************

compute_next_release_version
echo '+---------------------------------------'
echo '| ' $RELEASE_VERSION $PRODUCT $MODE $SIGN_MODE
echo '+---------------------------------------'

call make_release_resources $MODE $PRODUCT $RELEASE_VERSION $RELEASE_FLAGS
call make_client_installers $MODE $PRODUCT $RELEASE_VERSION $SIGN_MODE $BUILD_FLAGS
echo ">> successfully built $SIGN_MODE $MODE $PRODUCT release version $RELEASE_VERSION"
exit 0
