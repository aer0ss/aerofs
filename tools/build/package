#!/bin/bash
set -eu

###############################################################################
#
# usage and parameters
#
###############################################################################

function DieUsage {
    echo "usage: $0 <build_product> <version> <sign_mode>" >&2
    echo "       [--build-linux-tgz] [--build-linux-update-tgzs] [--build-linux-deb]" >&2
    echo "       [--build-windows-exe] [--build-windows-msi] [--build-osx-packages]" >&2
    echo "       [--build-all]" >&2
    echo " " >&2
    echo "<build_product>: CLIENT|TEAM_SERVER|STORAGE_AGENT" >&2
    echo "<version>: formatted <major>.<minor>.<build>" >&2
    echo "<sign_mode>: SIGNED|UNSIGNED" >&2
    echo "[--build-linux-tgz]: build the Linux installer .tgz" >&2
    echo "[--build-linux-update-tgzs]: build the Linux updater .tgz" >&2
    echo "[--build-linux-deb]: build the Linux installer .deb " >&2
    echo "[--build-windows-exe]: build the Windows installer .exe " >&2
    echo "[--build-windows-msi]: build the Windows MSI installer " >&2
    echo "[--build-osx-packages]: build the OSX installer/updater packages " >&2
    echo "[--build-all]: build all of the above (the others do not need to be specified)" >&2
    echo " " >&2
    echo "example: $0 CLIENT 0.1.0 UNSIGNED --build-all" >&2
    echo "example: $0 TEAM_SERVER 0.1.0 UNSIGNED --build-linux-tgz" >&2
    exit $ERRBADARGS
}

##
# Parse positional args
# #SADFACE positional args
##
case ${1:-} in
    CLIENT|TEAM_SERVER|STORAGE_AGENT) BUILD_PRODUCT=$1;;
    *) DieUsage;;
esac
RELEASE_VERSION=${2:-}
case ${3:-} in
    SIGNED|UNSIGNED) SIGN_MODE=$3;;
    *) DieUsage;;
esac
shift 3

##
# Parse long-opts
##
RELEASE_FLAGS=""
# If product is storage agent then build only tgz package.
if [ $BUILD_PRODUCT = "STORAGE_AGENT" ]
then
    BUILD_FLAGS="--build-linux-tgz"
else
    BUILD_FLAGS=""
    while [ "${1:-}" != "" ]; do
        case "$1" in
            "--build-linux-tgz" | "--build-linux-update-tgzs" | "--build-linux-deb" | "--build-windows-exe" | "--build-windows-msi" | "--build-osx-packages")
                BUILD_FLAGS="${BUILD_FLAGS} $1"
                ;;
            "--build-all")
                BUILD_FLAGS="$1"
                ;;
            *)
                echo "Unknown argument: $1" >&2
                DieUsage
                ;;
        esac
        shift
    done
fi

include common $BUILD_PRODUCT
check_version_format $RELEASE_VERSION

#******************************************************************************
#******************************************************************************
#**
#** Run all of the build steps
#**
#******************************************************************************
#******************************************************************************

echo '+---------------------------------------'
echo '| ' $RELEASE_VERSION $PRODUCT $SIGN_MODE
echo '+---------------------------------------'

call make_client_installers $PRODUCT $RELEASE_VERSION $SIGN_MODE $BUILD_FLAGS
echo >&2 -e "\033[32mok: \033[0m- package $PRODUCT-$RELEASE_VERSION ($SIGN_MODE)"
exit 0
