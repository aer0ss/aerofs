#!/bin/sh

set -e

if [ x"$1" == x ]; then
    echo usage '$0 [staging|prod]'
    exit
fi

SVR_PORT=22
SVR_LOGIN=release@www.aerofs.com

rm -rf current.ver

ROOT=$1
if [ "$ROOT" == "prod" ]
then
DOWNLOAD_BUCKET=s3://nocache.client.aerofs.com
wget --no-check-certificate --no-cache -q https://nocache.client.aerofs.com/current.ver
elif [ "$ROOT" == "staging" ]
then
DOWNLOAD_BUCKET=s3://nocache.client.staging.aerofs.com
wget --no-check-certificate --no-cache -q https://nocache.client.staging.aerofs.com/current.ver
fi

VER=`cat current.ver | sed -e 's/.*=//'`

NAME=aerofs-$VER-$1
ZIP=$NAME.zip

echo deploying
kscp -P $SVR_PORT AeroFSInstall-$VER.dmg $SVR_LOGIN:/data/$ROOT-downloads/
# echo generating update zip aerofs-osx-$VER.zip
rm -rf aerofs-osx-*.zip
zip -9rq aerofs-osx-$VER.zip Release/

# echo deploying aerofs-osx-$VER.zip on web
kscp -P $SVR_PORT aerofs-osx-$VER.zip $SVR_LOGIN:/data/$ROOT-downloads/aerofs-osx-temp.zip
kssh -p $SVR_PORT $SVR_LOGIN \
     "cd /data/$ROOT-downloads/; \
     cp AeroFSInstall-$VER.dmg AeroFSInstall.dmg; \
     mv aerofs-osx-temp.zip aerofs-osx-$VER.zip; \
     s3cmd -P --cf-invalidate sync /data/$ROOT-downloads/* $DOWNLOAD_BUCKET"

rm -rf Release
