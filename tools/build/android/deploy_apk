#!/bin/bash -e
# N.B. This script expects the Android app to have already been packaged.

function abs_dirname()
{
    cd "$(dirname $1)"
    echo "`pwd -P`"
}

if [ $# -ne 1 ]; then
    echo "usage: tools/build/bootstrap android/make_apk <mode>"
    exit 1
fi

MODE=$1
include include/common $MODE CLIENT

if [ $MODE != "ENTERPRISE" ]; then
    echo "error: Currently ENTERPRISE is the only supported mode for deployment."
    exit 1
fi

S3_BUCKET=s3://nocache.client.android.enterprise.aerofs.com
AEROFS_DIR=../..
ANDROID_DIR="$AEROFS_DIR/src/android"
RELEASE_DIR="$ANDROID_DIR/release-$MODE"
VERSION_FILE="$RELEASE_DIR/${RELEASE_SERVER_VERSION_FILE}"

version=$(cat "$VERSION_FILE")
apk_name=aerofs_android-ENTERPRISE-${version}-unsigned.apk
map_name=map-${version}
map_path="${RELEASE_DIR}/${map_name}.txt"

echo ">> Uploading Android ProGuard map to map servers"
set +e
scp "$map_path" $MAP_SERVER_LOGIN:"${ANDROID_MAP_FILES_DIR}/${map_name}.map"
scp "$map_path" $ROCKLOG_SERVER:"${ANDROID_MAP_FILES_DIR}/${map_name}.map"
set -e
echo ">> Uploaded!"

echo ">> Uploading Android app to release server..."
ssh $RELEASE_SERVER_LOGIN $RELEASE_SERVER_SHELL << ENDCMDS
    mkdir -p "${ANDROID_INSTALLERS_DOWNLOAD_DIR}/${version}/"
ENDCMDS
scp "$RELEASE_DIR/$apk_name" $RELEASE_SERVER_LOGIN:"${ANDROID_INSTALLERS_DOWNLOAD_DIR}/${version}/"
scp "$VERSION_FILE" $RELEASE_SERVER_LOGIN:"${ANDROID_INSTALLERS_DOWNLOAD_DIR}/${version}/"
echo ">> Uploaded!"

echo ">> Deploying Android app to S3 bucket..."
publish_android_to_s3 "$version" "$S3_BUCKET"
echo ">> Deployed!"

# vim: ft=sh tw=80 sw=4 ts=4 et:
