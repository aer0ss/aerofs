#!/bin/bash
set -eu

include common

function DieUsage {
    echo >&2 "usage: $0 <version> <sign_mode>"
    echo >&2 "       [--build-linux] [--build-windows] [--build-osx]"
    echo >&2 "       [--build-all]"
    echo >&2 " "
    echo >&2 "<version>: formatted <major>.<minor>.<build>"
    echo >&2 "<sign_mode>: SIGNED|UNSIGNED"
    echo >&2 "[--build-linux]: build the Linux installer .tgz"
    echo >&2 "[--build-windows]: build the Windows installer .exe "
    echo >&2 "[--build-osx]: build the OSX installer/updater packages "
    echo >&2 "[--build-all]: build all of the above (the others do not need to be specified)"
    echo >&2 " "
    echo >&2 "example: $0 0.1.0 UNSIGNED --build-all"
    echo >&2 "example: $0 0.1.0 UNSIGNED --build-linux"
    exit $ERRBADARGS
}

case ${1:-} in
    '') DieUsage ;;
    *) readonly RELEASE_VERSION=$1 ;;
esac
case ${2:-} in
    SIGNED|UNSIGNED) readonly SIGN_MODE=$2 ;;
    *) DieUsage ;;
esac
shift 2

BUILD_FLAGS=""
while [ "${1:-}" != "" ]; do
    case "$1" in
        "--build-linux" | "--build-windows" | "--build-osx") BUILD_FLAGS="${BUILD_FLAGS} $1" ;;
        "--build-all") BUILD_FLAGS="$1" ;;
        *) echo >&2 "Unknown argument: $1" ; DieUsage ;;
    esac
    shift
done

check_version_format $RELEASE_VERSION

call make_update_resources $RELEASE_VERSION
for PROD in CLIENT TEAM_SERVER ; do
    call make_update_manifests $PROD $RELEASE_VERSION $SIGN_MODE $BUILD_FLAGS
    echo >&2 -e "\033[32mok: \033[0m- updated $PROD-$RELEASE_VERSION ($SIGN_MODE)"
done

exit 0
