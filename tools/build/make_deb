#!/bin/bash
set -eu

#################################
# arguments

function DieUsage {
    set +x
    echo usage "$0 [version] [PRODUCT] [output deb filename]"
    echo "[version]: major.minor.release (e.g. 0.4.65)"
    echo "[PRODUCT]: CLIENT|TEAM_SERVER"
    echo "[output deb filename]: name of the deb file this script creates"
    echo
    echo "example: $0 0.4.65 aerofs ~/aerofs.release /data/public-downloads/aerofs-installer.deb"
    exit 1
}

[[ $# -eq 3 ]] || DieUsage

#################################
# set parameters

readonly OUTPUT_DEB_NAME="$3"
[[ ! -d "$OUTPUT_DEB_NAME" ]] || DieUsage

include common $2

compute_product_names

# debian control-file parameters
readonly PACKAGE_NAME=$(echo $OUTPUT_DEB_NAME | awk -F'/' '{print $NF}' | awk -F '.' '{print $1}')
readonly VERSION=$1
readonly SECTION='utility'
readonly PRIORITY='optional'

readonly DEPENDS='procps, coreutils'
readonly RECOMMENDS='libappindicator1, libgtk-3-0'
readonly MAINTAINER='AeroFS Team <support@aerofs.com>'
readonly DESCRIPTION='AeroFS: Private file sync and share.'

#################################
# create a working directory for package building

readonly DEB_BUILD_DIR="$( mktemp -d -t make_deb_XXXXXX )"
trap "rm -r $DEB_BUILD_DIR" EXIT

#################################
# start packaging
# all work done in $DEB_BUILD_DIR from now

echo ">> build ${PACKAGE_NAME} version = $VERSION"

pushd $DEB_BUILD_DIR >>/dev/null
trap "popd >>/dev/null || true" EXIT

HICOLOR_DIR=debian/usr/share/icons/hicolor
DEBIAN_CONTROL_DIR=debian/DEBIAN
mkdir -p $DEBIAN_CONTROL_DIR

#################################
# copy the files we need on the client system into the correct spots in the debian package

#used for linked aerofs executables
mkdir -p debian/usr/bin/

# Bump max inotify watches to something absurdly huge.
mkdir -p debian/etc/sysctl.d/
cat << EOF >> debian/etc/sysctl.d/30-$AEROFS_PRODUCT_UNIX-increase-inotify-limit.conf
# Increase the maximum number of inotify watches allowed per user from the
# default value of 8192.
# AeroFS needs to create a watch for every folder under your AeroFS folder.
# For some users, this can be a bunch of folders.  We picked a big number that
# will hopefully be more than sufficient for virtually all users.
fs.inotify.max_user_watches = 1048576
EOF

#used for menu items in GNOME
mkdir -p debian/usr/share/applications

#################################
# generate the .deb file

mkdir -p $HICOLOR_DIR/16x16/apps
mkdir -p $HICOLOR_DIR/32x32/apps
mkdir -p $HICOLOR_DIR/64x64/apps

# AeroFS code and assets
local ARCH=""
mkdir -p debian/usr/share/$AEROFS_PRODUCT_UNIX/
cp -a $BASE_RESOURCES_DIR/updater/linux/* $LABELING_FILE debian/usr/share/$AEROFS_PRODUCT_UNIX/
for ARCH in i386 amd64 ; do
    mv "debian/usr/share/$AEROFS_PRODUCT_UNIX/progressmonitor-${ARCH}" "debian/usr/share/$AEROFS_PRODUCT_UNIX/${AEROFS_PRODUCT_UNIX}progressmonitor-${ARCH}"
done
render_template "${CLIENT_LINUX_SHARED_TEMPLATES_DIR}/launcher" debian/usr/share/$AEROFS_PRODUCT_UNIX/launcher

# Freedesktop.org application file
render_template "${CLIENT_LINUX_SHARED_TEMPLATES_DIR}/product.desktop" debian/usr/share/applications/$AEROFS_PRODUCT_UNIX.desktop

# Icons for platform integration
cp $CLIENT_ALL_PLATFORMS_RESOURCES_DIR/icons/logo_16x16.png $HICOLOR_DIR/16x16/apps/$AEROFS_PRODUCT_UNIX.png
cp $CLIENT_ALL_PLATFORMS_RESOURCES_DIR/icons/logo_32x32.png $HICOLOR_DIR/32x32/apps/$AEROFS_PRODUCT_UNIX.png
cp $CLIENT_ALL_PLATFORMS_RESOURCES_DIR/icons/logo_64x64.png $HICOLOR_DIR/64x64/apps/$AEROFS_PRODUCT_UNIX.png

# Executables (links to updater, which will invoke launcher once set up)
# pushd/popd is used to ensure we make relative links
pushd debian/usr/bin >>/dev/null
ln -s ../share/$AEROFS_PRODUCT_UNIX/updater $AEROFS_PRODUCT_UNIX
for suffix in sh cli gui ; do
    ln -s $AEROFS_PRODUCT_UNIX $AEROFS_PRODUCT_UNIX-$suffix
done
popd >>/dev/null

#################################
# generate the control file

cat << EOF >> $DEBIAN_CONTROL_DIR/control
Package: $PACKAGE_NAME
Version: $VERSION
Section: $SECTION
Priority: $PRIORITY
Architecture: all
Depends: $DEPENDS
Recommends: $RECOMMENDS
Maintainer: $MAINTAINER
Description: $DESCRIPTION
Installed-Size: $(du -sk | awk '{print $1}')
EOF

#################################
# generate preinst, postinst and postrm

# We used to install to /usr/local/bin ; it's more correct for packages
# installed via the package manager to go in /usr/bin/.

# NOTE: we call procps start so that the sysctl values that
# were modified are loaded.  However, on some systems (like OpenVZ containers)
# certain sysctl variables cannot be set, so we ignore such failures.

# We pre-remove the files and links from both locations.
cat << EOF >> $DEBIAN_CONTROL_DIR/preinst
#!/bin/bash
rm -rf /usr{,/local}/bin/$AEROFS_PRODUCT_UNIX{,-sh,-cli,-gui}
EOF

cat << EOF >> $DEBIAN_CONTROL_DIR/postinst
#!/bin/bash
invoke-rc.d procps start || echo "Warning: couldn't set sysctl parameters; file changes may take some time to propagate"
EOF

# Remove symlinks on uninstallation.
cat << EOF >> $DEBIAN_CONTROL_DIR/postrm
#!/bin/bash
invoke-rc.d procps start || true
EOF

#################################
# finally build the .deb

find ./debian -type d | xargs chmod 755
chmod 755 $DEBIAN_CONTROL_DIR/{preinst,postinst,postrm}
# fakeroot allows regular users to build archives with files that, when
# extracted, will be owned by root.
# -Zgzip is required to avoid making xz-compressed packages that Ubuntu 10.04
# can't extract (its dpkg is too old).
fakeroot dpkg-deb -Zgzip --build debian
mv debian.deb $OUTPUT_DEB_NAME
