#!/bin/bash -e
# This script retrives defect log files and retrace them

source common #for abspath()

if [ $# -lt 2 ]; then
    echo "usage: $0 [prod version] [defect # (multiple, space separated)]"
    echo
    echo "example: $0 0.2.37 6308 6310 6317"
    exit 1
fi

VER="$1"
shift # remove the first argument
DEFECTS="$@"

BASE=`dirname $0`
BASE=`abspath "$BASE"`
MAP_FILE="$BASE"/"aerofs-$VER-prod.map"

retrace()
{
    FOLDER=$1
    PROGRAM=$2

    sed -i '' 's/^  /   at /g' "$FOLDER/$PROGRAM.log"
    sed -i '' 's/at at/at/g' "$FOLDER/$PROGRAM.log"
    mv "$FOLDER/$PROGRAM.log" "$FOLDER/obfuscated.$PROGRAM.log"
    ${BASE}/proguard/bin/retrace.sh "$MAP_FILE" "$FOLDER/obfuscated.$PROGRAM.log" > "$FOLDER/$PROGRAM.log"
}

main()
{
    $BASE/getmap $VER $BASE

    for DEFECT in $DEFECTS; do
        TARGET_FOLDER="defect-$DEFECT" # puts this into the pwd
        if [[ -e "$TARGET_FOLDER" ]]; then
            echo "$TARGET_FOLDER already exists"
            continue
        fi
        ZIP_FILE="log.defect-$DEFECT.zip"
        kscp sp.aerofs.com:/var/svlogs_prod/defect/"$ZIP_FILE" .
        mkdir "$TARGET_FOLDER"
        unzip -o "$ZIP_FILE" -d "$TARGET_FOLDER"
        rm "$ZIP_FILE"

        echo "Retracing logs for $DEFECT"

        for i in daemon cli gui; do
            if [ -f "$TARGET_FOLDER/$i.log" ]; then
                retrace "$TARGET_FOLDER" $i
            fi
        done
    done

    echo "Done"
}

main