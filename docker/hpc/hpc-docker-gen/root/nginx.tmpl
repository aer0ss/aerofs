{{/* Domain on which this reverse proxy will be running.
   *
   * This should always be 'aerofs.com' in prod.
   * You can use the 'setup-local-env' script to switch this to syncfs.com for local tests */}}
{{ $domain := "aerofs.com" }}


# Global nginx configuration
# Applies to all subdomains

# SSL stuff
ssl_certificate /etc/nginx/certs/{{ $domain }}.crt;
ssl_certificate_key /etc/nginx/certs/{{ $domain }}.key;
ssl_dhparam /etc/nginx/certs/dhparam.pem;
ssl_session_timeout 5m;
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
# Cipher list from https://wiki.mozilla.org/Security/Server_Side_TLS
ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128:AES256:AES:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK';

add_header X-Frame-Options SAMEORIGIN;

# Reverse-proxy params
proxy_set_header Verify $ssl_client_verify;
proxy_set_header Serial $ssl_client_serial;
proxy_set_header DName $ssl_client_s_dn;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

# Default server (catch-all)
server {
    listen       80  default_server;
    listen       443 default_server ssl;
    server_name  _;
    return       503;  # Service Unavailable
}


{{ range $container := $ }}
  {{ if (and (eq $container.Image.Registry "aerofs") (or (eq $container.Image.Repository "nginx") (eq $container.Image.Repository "maintenance-nginx"))) }}
    {{ $subdomain := first (split $container.Name (print "-hpc-" $container.Image.Repository)) }}
    {{ if gt (len $subdomain) 1 }}  {{/* sanity check */}}

### Config for subdomain "{{ $subdomain }}" - container name: "{{ $container.Name }}"

    server {
      listen 80;
      listen 443 ssl;

      server_name {{ $subdomain }}.{{ $domain }};

      location / {
        proxy_pass $scheme://{{ $container.IP }}:$server_port;
        proxy_set_header Host $host;
      }
    }

    {{ end }}
  {{ end }}
{{ end }}
