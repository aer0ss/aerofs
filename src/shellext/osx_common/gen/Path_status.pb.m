// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Path_status.pb.h"
// @@protoc_insertion_point(imports)

@implementation PathStatusRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PathStatusRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PBPathStatus ()
@property PBPathStatus_Sync sync;
@property int32_t flags;
@end

@implementation PBPathStatus

- (BOOL) hasSync {
  return !!hasSync_;
}
- (void) setHasSync:(BOOL) value_ {
  hasSync_ = !!value_;
}
@synthesize sync;
- (BOOL) hasFlags {
  return !!hasFlags_;
}
- (void) setHasFlags:(BOOL) value_ {
  hasFlags_ = !!value_;
}
@synthesize flags;
- (id) init {
  if ((self = [super init])) {
    self.sync = PBPathStatus_SyncUnknown;
    self.flags = 0;
  }
  return self;
}
static PBPathStatus* defaultPBPathStatusInstance = nil;
+ (void) initialize {
  if (self == [PBPathStatus class]) {
    defaultPBPathStatusInstance = [[PBPathStatus alloc] init];
  }
}
+ (PBPathStatus*) defaultInstance {
  return defaultPBPathStatusInstance;
}
- (PBPathStatus*) defaultInstance {
  return defaultPBPathStatusInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSync) {
    return NO;
  }
  if (!self.hasFlags) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSync) {
    [output writeEnum:1 value:self.sync];
  }
  if (self.hasFlags) {
    [output writeInt32:2 value:self.flags];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSync) {
    size_ += computeEnumSize(1, self.sync);
  }
  if (self.hasFlags) {
    size_ += computeInt32Size(2, self.flags);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBPathStatus*) parseFromData:(NSData*) data {
  return (PBPathStatus*)[[[PBPathStatus builder] mergeFromData:data] build];
}
+ (PBPathStatus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBPathStatus*)[[[PBPathStatus builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBPathStatus*) parseFromInputStream:(NSInputStream*) input {
  return (PBPathStatus*)[[[PBPathStatus builder] mergeFromInputStream:input] build];
}
+ (PBPathStatus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBPathStatus*)[[[PBPathStatus builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBPathStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBPathStatus*)[[[PBPathStatus builder] mergeFromCodedInputStream:input] build];
}
+ (PBPathStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBPathStatus*)[[[PBPathStatus builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBPathStatus_Builder*) builder {
  return [[PBPathStatus_Builder alloc] init];
}
+ (PBPathStatus_Builder*) builderWithPrototype:(PBPathStatus*) prototype {
  return [[PBPathStatus builder] mergeFrom:prototype];
}
- (PBPathStatus_Builder*) builder {
  return [PBPathStatus builder];
}
- (PBPathStatus_Builder*) toBuilder {
  return [PBPathStatus builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSync) {
    [output appendFormat:@"%@%@: %d\n", indent, @"sync", self.sync];
  }
  if (self.hasFlags) {
    [output appendFormat:@"%@%@: %@\n", indent, @"flags", [NSNumber numberWithInt:self.flags]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBPathStatus class]]) {
    return NO;
  }
  PBPathStatus *otherMessage = other;
  return
      self.hasSync == otherMessage.hasSync &&
      (!self.hasSync || self.sync == otherMessage.sync) &&
      self.hasFlags == otherMessage.hasFlags &&
      (!self.hasFlags || self.flags == otherMessage.flags) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasSync) {
    hashCode = hashCode * 31 + self.sync;
  }
  if (self.hasFlags) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.flags] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL PBPathStatus_SyncIsValidValue(PBPathStatus_Sync value) {
  switch (value) {
    case PBPathStatus_SyncUnknown:
    case PBPathStatus_SyncOutSync:
    case PBPathStatus_SyncPartialSync:
    case PBPathStatus_SyncInSync:
      return YES;
    default:
      return NO;
  }
}
BOOL PBPathStatus_FlagIsValidValue(PBPathStatus_Flag value) {
  switch (value) {
    case PBPathStatus_FlagDownloading:
    case PBPathStatus_FlagUploading:
    case PBPathStatus_FlagConflict:
      return YES;
    default:
      return NO;
  }
}
@interface PBPathStatus_Builder()
@property (retain) PBPathStatus* result;
@end

@implementation PBPathStatus_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBPathStatus alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBPathStatus_Builder*) clear {
  self.result = [[PBPathStatus alloc] init];
  return self;
}
- (PBPathStatus_Builder*) clone {
  return [PBPathStatus builderWithPrototype:result];
}
- (PBPathStatus*) defaultInstance {
  return [PBPathStatus defaultInstance];
}
- (PBPathStatus*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBPathStatus*) buildPartial {
  PBPathStatus* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBPathStatus_Builder*) mergeFrom:(PBPathStatus*) other {
  if (other == [PBPathStatus defaultInstance]) {
    return self;
  }
  if (other.hasSync) {
    [self setSync:other.sync];
  }
  if (other.hasFlags) {
    [self setFlags:other.flags];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBPathStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBPathStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (PBPathStatus_SyncIsValidValue(value)) {
          [self setSync:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        [self setFlags:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSync {
  return result.hasSync;
}
- (PBPathStatus_Sync) sync {
  return result.sync;
}
- (PBPathStatus_Builder*) setSync:(PBPathStatus_Sync) value {
  result.hasSync = YES;
  result.sync = value;
  return self;
}
- (PBPathStatus_Builder*) clearSync {
  result.hasSync = NO;
  result.sync = PBPathStatus_SyncUnknown;
  return self;
}
- (BOOL) hasFlags {
  return result.hasFlags;
}
- (int32_t) flags {
  return result.flags;
}
- (PBPathStatus_Builder*) setFlags:(int32_t) value {
  result.hasFlags = YES;
  result.flags = value;
  return self;
}
- (PBPathStatus_Builder*) clearFlags {
  result.hasFlags = NO;
  result.flags = 0;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
