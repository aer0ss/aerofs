// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Shellext.pb.h"
// @@protoc_insertion_point(imports)

@implementation ShellextRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ShellextRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [PathStatusRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface ShellextCall ()
@property ShellextCall_Type type;
@property (retain) GreetingCall* greeting;
@property (retain) ShareFolderCall* shareFolder;
@property (retain) SyncStatusCall* syncStatus;
@property (retain) VersionHistoryCall* versionHistory;
@property (retain) GetPathStatusCall* getPathStatus;
@property (retain) ConflictResolutionCall* conflictResolution;
@property (retain) CreateLinkCall* createLink;
@end

@implementation ShellextCall

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
  hasType_ = !!value_;
}
@synthesize type;
- (BOOL) hasGreeting {
  return !!hasGreeting_;
}
- (void) setHasGreeting:(BOOL) value_ {
  hasGreeting_ = !!value_;
}
@synthesize greeting;
- (BOOL) hasShareFolder {
  return !!hasShareFolder_;
}
- (void) setHasShareFolder:(BOOL) value_ {
  hasShareFolder_ = !!value_;
}
@synthesize shareFolder;
- (BOOL) hasSyncStatus {
  return !!hasSyncStatus_;
}
- (void) setHasSyncStatus:(BOOL) value_ {
  hasSyncStatus_ = !!value_;
}
@synthesize syncStatus;
- (BOOL) hasVersionHistory {
  return !!hasVersionHistory_;
}
- (void) setHasVersionHistory:(BOOL) value_ {
  hasVersionHistory_ = !!value_;
}
@synthesize versionHistory;
- (BOOL) hasGetPathStatus {
  return !!hasGetPathStatus_;
}
- (void) setHasGetPathStatus:(BOOL) value_ {
  hasGetPathStatus_ = !!value_;
}
@synthesize getPathStatus;
- (BOOL) hasConflictResolution {
  return !!hasConflictResolution_;
}
- (void) setHasConflictResolution:(BOOL) value_ {
  hasConflictResolution_ = !!value_;
}
@synthesize conflictResolution;
- (BOOL) hasCreateLink {
  return !!hasCreateLink_;
}
- (void) setHasCreateLink:(BOOL) value_ {
  hasCreateLink_ = !!value_;
}
@synthesize createLink;
- (id) init {
  if ((self = [super init])) {
    self.type = ShellextCall_TypeGreeting;
    self.greeting = [GreetingCall defaultInstance];
    self.shareFolder = [ShareFolderCall defaultInstance];
    self.syncStatus = [SyncStatusCall defaultInstance];
    self.versionHistory = [VersionHistoryCall defaultInstance];
    self.getPathStatus = [GetPathStatusCall defaultInstance];
    self.conflictResolution = [ConflictResolutionCall defaultInstance];
    self.createLink = [CreateLinkCall defaultInstance];
  }
  return self;
}
static ShellextCall* defaultShellextCallInstance = nil;
+ (void) initialize {
  if (self == [ShellextCall class]) {
    defaultShellextCallInstance = [[ShellextCall alloc] init];
  }
}
+ (ShellextCall*) defaultInstance {
  return defaultShellextCallInstance;
}
- (ShellextCall*) defaultInstance {
  return defaultShellextCallInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (self.hasGreeting) {
    if (!self.greeting.isInitialized) {
      return NO;
    }
  }
  if (self.hasShareFolder) {
    if (!self.shareFolder.isInitialized) {
      return NO;
    }
  }
  if (self.hasSyncStatus) {
    if (!self.syncStatus.isInitialized) {
      return NO;
    }
  }
  if (self.hasVersionHistory) {
    if (!self.versionHistory.isInitialized) {
      return NO;
    }
  }
  if (self.hasGetPathStatus) {
    if (!self.getPathStatus.isInitialized) {
      return NO;
    }
  }
  if (self.hasConflictResolution) {
    if (!self.conflictResolution.isInitialized) {
      return NO;
    }
  }
  if (self.hasCreateLink) {
    if (!self.createLink.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeEnum:1 value:self.type];
  }
  if (self.hasGreeting) {
    [output writeMessage:2 value:self.greeting];
  }
  if (self.hasShareFolder) {
    [output writeMessage:3 value:self.shareFolder];
  }
  if (self.hasSyncStatus) {
    [output writeMessage:4 value:self.syncStatus];
  }
  if (self.hasVersionHistory) {
    [output writeMessage:5 value:self.versionHistory];
  }
  if (self.hasGetPathStatus) {
    [output writeMessage:6 value:self.getPathStatus];
  }
  if (self.hasConflictResolution) {
    [output writeMessage:7 value:self.conflictResolution];
  }
  if (self.hasCreateLink) {
    [output writeMessage:8 value:self.createLink];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeEnumSize(1, self.type);
  }
  if (self.hasGreeting) {
    size_ += computeMessageSize(2, self.greeting);
  }
  if (self.hasShareFolder) {
    size_ += computeMessageSize(3, self.shareFolder);
  }
  if (self.hasSyncStatus) {
    size_ += computeMessageSize(4, self.syncStatus);
  }
  if (self.hasVersionHistory) {
    size_ += computeMessageSize(5, self.versionHistory);
  }
  if (self.hasGetPathStatus) {
    size_ += computeMessageSize(6, self.getPathStatus);
  }
  if (self.hasConflictResolution) {
    size_ += computeMessageSize(7, self.conflictResolution);
  }
  if (self.hasCreateLink) {
    size_ += computeMessageSize(8, self.createLink);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ShellextCall*) parseFromData:(NSData*) data {
  return (ShellextCall*)[[[ShellextCall builder] mergeFromData:data] build];
}
+ (ShellextCall*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShellextCall*)[[[ShellextCall builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ShellextCall*) parseFromInputStream:(NSInputStream*) input {
  return (ShellextCall*)[[[ShellextCall builder] mergeFromInputStream:input] build];
}
+ (ShellextCall*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShellextCall*)[[[ShellextCall builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ShellextCall*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ShellextCall*)[[[ShellextCall builder] mergeFromCodedInputStream:input] build];
}
+ (ShellextCall*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShellextCall*)[[[ShellextCall builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ShellextCall_Builder*) builder {
  return [[ShellextCall_Builder alloc] init];
}
+ (ShellextCall_Builder*) builderWithPrototype:(ShellextCall*) prototype {
  return [[ShellextCall builder] mergeFrom:prototype];
}
- (ShellextCall_Builder*) builder {
  return [ShellextCall builder];
}
- (ShellextCall_Builder*) toBuilder {
  return [ShellextCall builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"type", self.type];
  }
  if (self.hasGreeting) {
    [output appendFormat:@"%@%@ {\n", indent, @"greeting"];
    [self.greeting writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasShareFolder) {
    [output appendFormat:@"%@%@ {\n", indent, @"shareFolder"];
    [self.shareFolder writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasSyncStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"syncStatus"];
    [self.syncStatus writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasVersionHistory) {
    [output appendFormat:@"%@%@ {\n", indent, @"versionHistory"];
    [self.versionHistory writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasGetPathStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"getPathStatus"];
    [self.getPathStatus writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasConflictResolution) {
    [output appendFormat:@"%@%@ {\n", indent, @"conflictResolution"];
    [self.conflictResolution writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCreateLink) {
    [output appendFormat:@"%@%@ {\n", indent, @"createLink"];
    [self.createLink writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ShellextCall class]]) {
    return NO;
  }
  ShellextCall *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasGreeting == otherMessage.hasGreeting &&
      (!self.hasGreeting || [self.greeting isEqual:otherMessage.greeting]) &&
      self.hasShareFolder == otherMessage.hasShareFolder &&
      (!self.hasShareFolder || [self.shareFolder isEqual:otherMessage.shareFolder]) &&
      self.hasSyncStatus == otherMessage.hasSyncStatus &&
      (!self.hasSyncStatus || [self.syncStatus isEqual:otherMessage.syncStatus]) &&
      self.hasVersionHistory == otherMessage.hasVersionHistory &&
      (!self.hasVersionHistory || [self.versionHistory isEqual:otherMessage.versionHistory]) &&
      self.hasGetPathStatus == otherMessage.hasGetPathStatus &&
      (!self.hasGetPathStatus || [self.getPathStatus isEqual:otherMessage.getPathStatus]) &&
      self.hasConflictResolution == otherMessage.hasConflictResolution &&
      (!self.hasConflictResolution || [self.conflictResolution isEqual:otherMessage.conflictResolution]) &&
      self.hasCreateLink == otherMessage.hasCreateLink &&
      (!self.hasCreateLink || [self.createLink isEqual:otherMessage.createLink]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasGreeting) {
    hashCode = hashCode * 31 + [self.greeting hash];
  }
  if (self.hasShareFolder) {
    hashCode = hashCode * 31 + [self.shareFolder hash];
  }
  if (self.hasSyncStatus) {
    hashCode = hashCode * 31 + [self.syncStatus hash];
  }
  if (self.hasVersionHistory) {
    hashCode = hashCode * 31 + [self.versionHistory hash];
  }
  if (self.hasGetPathStatus) {
    hashCode = hashCode * 31 + [self.getPathStatus hash];
  }
  if (self.hasConflictResolution) {
    hashCode = hashCode * 31 + [self.conflictResolution hash];
  }
  if (self.hasCreateLink) {
    hashCode = hashCode * 31 + [self.createLink hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL ShellextCall_TypeIsValidValue(ShellextCall_Type value) {
  switch (value) {
    case ShellextCall_TypeGreeting:
    case ShellextCall_TypeShareFolder:
    case ShellextCall_TypeSyncStatus:
    case ShellextCall_TypeVersionHistory:
    case ShellextCall_TypeConflictResolution:
    case ShellextCall_TypeCreateLink:
    case ShellextCall_TypeGetPathStatus:
      return YES;
    default:
      return NO;
  }
}
@interface ShellextCall_Builder()
@property (retain) ShellextCall* result;
@end

@implementation ShellextCall_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ShellextCall alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ShellextCall_Builder*) clear {
  self.result = [[ShellextCall alloc] init];
  return self;
}
- (ShellextCall_Builder*) clone {
  return [ShellextCall builderWithPrototype:result];
}
- (ShellextCall*) defaultInstance {
  return [ShellextCall defaultInstance];
}
- (ShellextCall*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ShellextCall*) buildPartial {
  ShellextCall* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ShellextCall_Builder*) mergeFrom:(ShellextCall*) other {
  if (other == [ShellextCall defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasGreeting) {
    [self mergeGreeting:other.greeting];
  }
  if (other.hasShareFolder) {
    [self mergeShareFolder:other.shareFolder];
  }
  if (other.hasSyncStatus) {
    [self mergeSyncStatus:other.syncStatus];
  }
  if (other.hasVersionHistory) {
    [self mergeVersionHistory:other.versionHistory];
  }
  if (other.hasGetPathStatus) {
    [self mergeGetPathStatus:other.getPathStatus];
  }
  if (other.hasConflictResolution) {
    [self mergeConflictResolution:other.conflictResolution];
  }
  if (other.hasCreateLink) {
    [self mergeCreateLink:other.createLink];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ShellextCall_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ShellextCall_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (ShellextCall_TypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        GreetingCall_Builder* subBuilder = [GreetingCall builder];
        if (self.hasGreeting) {
          [subBuilder mergeFrom:self.greeting];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGreeting:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        ShareFolderCall_Builder* subBuilder = [ShareFolderCall builder];
        if (self.hasShareFolder) {
          [subBuilder mergeFrom:self.shareFolder];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setShareFolder:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        SyncStatusCall_Builder* subBuilder = [SyncStatusCall builder];
        if (self.hasSyncStatus) {
          [subBuilder mergeFrom:self.syncStatus];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSyncStatus:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        VersionHistoryCall_Builder* subBuilder = [VersionHistoryCall builder];
        if (self.hasVersionHistory) {
          [subBuilder mergeFrom:self.versionHistory];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setVersionHistory:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        GetPathStatusCall_Builder* subBuilder = [GetPathStatusCall builder];
        if (self.hasGetPathStatus) {
          [subBuilder mergeFrom:self.getPathStatus];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGetPathStatus:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        ConflictResolutionCall_Builder* subBuilder = [ConflictResolutionCall builder];
        if (self.hasConflictResolution) {
          [subBuilder mergeFrom:self.conflictResolution];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setConflictResolution:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        CreateLinkCall_Builder* subBuilder = [CreateLinkCall builder];
        if (self.hasCreateLink) {
          [subBuilder mergeFrom:self.createLink];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCreateLink:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (ShellextCall_Type) type {
  return result.type;
}
- (ShellextCall_Builder*) setType:(ShellextCall_Type) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (ShellextCall_Builder*) clearType {
  result.hasType = NO;
  result.type = ShellextCall_TypeGreeting;
  return self;
}
- (BOOL) hasGreeting {
  return result.hasGreeting;
}
- (GreetingCall*) greeting {
  return result.greeting;
}
- (ShellextCall_Builder*) setGreeting:(GreetingCall*) value {
  result.hasGreeting = YES;
  result.greeting = value;
  return self;
}
- (ShellextCall_Builder*) setGreetingBuilder:(GreetingCall_Builder*) builderForValue {
  return [self setGreeting:[builderForValue build]];
}
- (ShellextCall_Builder*) mergeGreeting:(GreetingCall*) value {
  if (result.hasGreeting &&
      result.greeting != [GreetingCall defaultInstance]) {
    result.greeting =
      [[[GreetingCall builderWithPrototype:result.greeting] mergeFrom:value] buildPartial];
  } else {
    result.greeting = value;
  }
  result.hasGreeting = YES;
  return self;
}
- (ShellextCall_Builder*) clearGreeting {
  result.hasGreeting = NO;
  result.greeting = [GreetingCall defaultInstance];
  return self;
}
- (BOOL) hasShareFolder {
  return result.hasShareFolder;
}
- (ShareFolderCall*) shareFolder {
  return result.shareFolder;
}
- (ShellextCall_Builder*) setShareFolder:(ShareFolderCall*) value {
  result.hasShareFolder = YES;
  result.shareFolder = value;
  return self;
}
- (ShellextCall_Builder*) setShareFolderBuilder:(ShareFolderCall_Builder*) builderForValue {
  return [self setShareFolder:[builderForValue build]];
}
- (ShellextCall_Builder*) mergeShareFolder:(ShareFolderCall*) value {
  if (result.hasShareFolder &&
      result.shareFolder != [ShareFolderCall defaultInstance]) {
    result.shareFolder =
      [[[ShareFolderCall builderWithPrototype:result.shareFolder] mergeFrom:value] buildPartial];
  } else {
    result.shareFolder = value;
  }
  result.hasShareFolder = YES;
  return self;
}
- (ShellextCall_Builder*) clearShareFolder {
  result.hasShareFolder = NO;
  result.shareFolder = [ShareFolderCall defaultInstance];
  return self;
}
- (BOOL) hasSyncStatus {
  return result.hasSyncStatus;
}
- (SyncStatusCall*) syncStatus {
  return result.syncStatus;
}
- (ShellextCall_Builder*) setSyncStatus:(SyncStatusCall*) value {
  result.hasSyncStatus = YES;
  result.syncStatus = value;
  return self;
}
- (ShellextCall_Builder*) setSyncStatusBuilder:(SyncStatusCall_Builder*) builderForValue {
  return [self setSyncStatus:[builderForValue build]];
}
- (ShellextCall_Builder*) mergeSyncStatus:(SyncStatusCall*) value {
  if (result.hasSyncStatus &&
      result.syncStatus != [SyncStatusCall defaultInstance]) {
    result.syncStatus =
      [[[SyncStatusCall builderWithPrototype:result.syncStatus] mergeFrom:value] buildPartial];
  } else {
    result.syncStatus = value;
  }
  result.hasSyncStatus = YES;
  return self;
}
- (ShellextCall_Builder*) clearSyncStatus {
  result.hasSyncStatus = NO;
  result.syncStatus = [SyncStatusCall defaultInstance];
  return self;
}
- (BOOL) hasVersionHistory {
  return result.hasVersionHistory;
}
- (VersionHistoryCall*) versionHistory {
  return result.versionHistory;
}
- (ShellextCall_Builder*) setVersionHistory:(VersionHistoryCall*) value {
  result.hasVersionHistory = YES;
  result.versionHistory = value;
  return self;
}
- (ShellextCall_Builder*) setVersionHistoryBuilder:(VersionHistoryCall_Builder*) builderForValue {
  return [self setVersionHistory:[builderForValue build]];
}
- (ShellextCall_Builder*) mergeVersionHistory:(VersionHistoryCall*) value {
  if (result.hasVersionHistory &&
      result.versionHistory != [VersionHistoryCall defaultInstance]) {
    result.versionHistory =
      [[[VersionHistoryCall builderWithPrototype:result.versionHistory] mergeFrom:value] buildPartial];
  } else {
    result.versionHistory = value;
  }
  result.hasVersionHistory = YES;
  return self;
}
- (ShellextCall_Builder*) clearVersionHistory {
  result.hasVersionHistory = NO;
  result.versionHistory = [VersionHistoryCall defaultInstance];
  return self;
}
- (BOOL) hasGetPathStatus {
  return result.hasGetPathStatus;
}
- (GetPathStatusCall*) getPathStatus {
  return result.getPathStatus;
}
- (ShellextCall_Builder*) setGetPathStatus:(GetPathStatusCall*) value {
  result.hasGetPathStatus = YES;
  result.getPathStatus = value;
  return self;
}
- (ShellextCall_Builder*) setGetPathStatusBuilder:(GetPathStatusCall_Builder*) builderForValue {
  return [self setGetPathStatus:[builderForValue build]];
}
- (ShellextCall_Builder*) mergeGetPathStatus:(GetPathStatusCall*) value {
  if (result.hasGetPathStatus &&
      result.getPathStatus != [GetPathStatusCall defaultInstance]) {
    result.getPathStatus =
      [[[GetPathStatusCall builderWithPrototype:result.getPathStatus] mergeFrom:value] buildPartial];
  } else {
    result.getPathStatus = value;
  }
  result.hasGetPathStatus = YES;
  return self;
}
- (ShellextCall_Builder*) clearGetPathStatus {
  result.hasGetPathStatus = NO;
  result.getPathStatus = [GetPathStatusCall defaultInstance];
  return self;
}
- (BOOL) hasConflictResolution {
  return result.hasConflictResolution;
}
- (ConflictResolutionCall*) conflictResolution {
  return result.conflictResolution;
}
- (ShellextCall_Builder*) setConflictResolution:(ConflictResolutionCall*) value {
  result.hasConflictResolution = YES;
  result.conflictResolution = value;
  return self;
}
- (ShellextCall_Builder*) setConflictResolutionBuilder:(ConflictResolutionCall_Builder*) builderForValue {
  return [self setConflictResolution:[builderForValue build]];
}
- (ShellextCall_Builder*) mergeConflictResolution:(ConflictResolutionCall*) value {
  if (result.hasConflictResolution &&
      result.conflictResolution != [ConflictResolutionCall defaultInstance]) {
    result.conflictResolution =
      [[[ConflictResolutionCall builderWithPrototype:result.conflictResolution] mergeFrom:value] buildPartial];
  } else {
    result.conflictResolution = value;
  }
  result.hasConflictResolution = YES;
  return self;
}
- (ShellextCall_Builder*) clearConflictResolution {
  result.hasConflictResolution = NO;
  result.conflictResolution = [ConflictResolutionCall defaultInstance];
  return self;
}
- (BOOL) hasCreateLink {
  return result.hasCreateLink;
}
- (CreateLinkCall*) createLink {
  return result.createLink;
}
- (ShellextCall_Builder*) setCreateLink:(CreateLinkCall*) value {
  result.hasCreateLink = YES;
  result.createLink = value;
  return self;
}
- (ShellextCall_Builder*) setCreateLinkBuilder:(CreateLinkCall_Builder*) builderForValue {
  return [self setCreateLink:[builderForValue build]];
}
- (ShellextCall_Builder*) mergeCreateLink:(CreateLinkCall*) value {
  if (result.hasCreateLink &&
      result.createLink != [CreateLinkCall defaultInstance]) {
    result.createLink =
      [[[CreateLinkCall builderWithPrototype:result.createLink] mergeFrom:value] buildPartial];
  } else {
    result.createLink = value;
  }
  result.hasCreateLink = YES;
  return self;
}
- (ShellextCall_Builder*) clearCreateLink {
  result.hasCreateLink = NO;
  result.createLink = [CreateLinkCall defaultInstance];
  return self;
}
@end

@interface GreetingCall ()
@property int32_t protocolVersion;
@end

@implementation GreetingCall

- (BOOL) hasProtocolVersion {
  return !!hasProtocolVersion_;
}
- (void) setHasProtocolVersion:(BOOL) value_ {
  hasProtocolVersion_ = !!value_;
}
@synthesize protocolVersion;
- (id) init {
  if ((self = [super init])) {
    self.protocolVersion = 0;
  }
  return self;
}
static GreetingCall* defaultGreetingCallInstance = nil;
+ (void) initialize {
  if (self == [GreetingCall class]) {
    defaultGreetingCallInstance = [[GreetingCall alloc] init];
  }
}
+ (GreetingCall*) defaultInstance {
  return defaultGreetingCallInstance;
}
- (GreetingCall*) defaultInstance {
  return defaultGreetingCallInstance;
}
- (BOOL) isInitialized {
  if (!self.hasProtocolVersion) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasProtocolVersion) {
    [output writeInt32:1 value:self.protocolVersion];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasProtocolVersion) {
    size_ += computeInt32Size(1, self.protocolVersion);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GreetingCall*) parseFromData:(NSData*) data {
  return (GreetingCall*)[[[GreetingCall builder] mergeFromData:data] build];
}
+ (GreetingCall*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GreetingCall*)[[[GreetingCall builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GreetingCall*) parseFromInputStream:(NSInputStream*) input {
  return (GreetingCall*)[[[GreetingCall builder] mergeFromInputStream:input] build];
}
+ (GreetingCall*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GreetingCall*)[[[GreetingCall builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GreetingCall*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GreetingCall*)[[[GreetingCall builder] mergeFromCodedInputStream:input] build];
}
+ (GreetingCall*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GreetingCall*)[[[GreetingCall builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GreetingCall_Builder*) builder {
  return [[GreetingCall_Builder alloc] init];
}
+ (GreetingCall_Builder*) builderWithPrototype:(GreetingCall*) prototype {
  return [[GreetingCall builder] mergeFrom:prototype];
}
- (GreetingCall_Builder*) builder {
  return [GreetingCall builder];
}
- (GreetingCall_Builder*) toBuilder {
  return [GreetingCall builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasProtocolVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"protocolVersion", [NSNumber numberWithInt:self.protocolVersion]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GreetingCall class]]) {
    return NO;
  }
  GreetingCall *otherMessage = other;
  return
      self.hasProtocolVersion == otherMessage.hasProtocolVersion &&
      (!self.hasProtocolVersion || self.protocolVersion == otherMessage.protocolVersion) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasProtocolVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.protocolVersion] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GreetingCall_Builder()
@property (retain) GreetingCall* result;
@end

@implementation GreetingCall_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[GreetingCall alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GreetingCall_Builder*) clear {
  self.result = [[GreetingCall alloc] init];
  return self;
}
- (GreetingCall_Builder*) clone {
  return [GreetingCall builderWithPrototype:result];
}
- (GreetingCall*) defaultInstance {
  return [GreetingCall defaultInstance];
}
- (GreetingCall*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GreetingCall*) buildPartial {
  GreetingCall* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (GreetingCall_Builder*) mergeFrom:(GreetingCall*) other {
  if (other == [GreetingCall defaultInstance]) {
    return self;
  }
  if (other.hasProtocolVersion) {
    [self setProtocolVersion:other.protocolVersion];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GreetingCall_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GreetingCall_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setProtocolVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasProtocolVersion {
  return result.hasProtocolVersion;
}
- (int32_t) protocolVersion {
  return result.protocolVersion;
}
- (GreetingCall_Builder*) setProtocolVersion:(int32_t) value {
  result.hasProtocolVersion = YES;
  result.protocolVersion = value;
  return self;
}
- (GreetingCall_Builder*) clearProtocolVersion {
  result.hasProtocolVersion = NO;
  result.protocolVersion = 0;
  return self;
}
@end

@interface CreateLinkCall ()
@property (retain) NSString* path;
@end

@implementation CreateLinkCall

- (BOOL) hasPath {
  return !!hasPath_;
}
- (void) setHasPath:(BOOL) value_ {
  hasPath_ = !!value_;
}
@synthesize path;
- (id) init {
  if ((self = [super init])) {
    self.path = @"";
  }
  return self;
}
static CreateLinkCall* defaultCreateLinkCallInstance = nil;
+ (void) initialize {
  if (self == [CreateLinkCall class]) {
    defaultCreateLinkCallInstance = [[CreateLinkCall alloc] init];
  }
}
+ (CreateLinkCall*) defaultInstance {
  return defaultCreateLinkCallInstance;
}
- (CreateLinkCall*) defaultInstance {
  return defaultCreateLinkCallInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPath) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPath) {
    [output writeString:1 value:self.path];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPath) {
    size_ += computeStringSize(1, self.path);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CreateLinkCall*) parseFromData:(NSData*) data {
  return (CreateLinkCall*)[[[CreateLinkCall builder] mergeFromData:data] build];
}
+ (CreateLinkCall*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateLinkCall*)[[[CreateLinkCall builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CreateLinkCall*) parseFromInputStream:(NSInputStream*) input {
  return (CreateLinkCall*)[[[CreateLinkCall builder] mergeFromInputStream:input] build];
}
+ (CreateLinkCall*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateLinkCall*)[[[CreateLinkCall builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateLinkCall*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CreateLinkCall*)[[[CreateLinkCall builder] mergeFromCodedInputStream:input] build];
}
+ (CreateLinkCall*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateLinkCall*)[[[CreateLinkCall builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateLinkCall_Builder*) builder {
  return [[CreateLinkCall_Builder alloc] init];
}
+ (CreateLinkCall_Builder*) builderWithPrototype:(CreateLinkCall*) prototype {
  return [[CreateLinkCall builder] mergeFrom:prototype];
}
- (CreateLinkCall_Builder*) builder {
  return [CreateLinkCall builder];
}
- (CreateLinkCall_Builder*) toBuilder {
  return [CreateLinkCall builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPath) {
    [output appendFormat:@"%@%@: %@\n", indent, @"path", self.path];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CreateLinkCall class]]) {
    return NO;
  }
  CreateLinkCall *otherMessage = other;
  return
      self.hasPath == otherMessage.hasPath &&
      (!self.hasPath || [self.path isEqual:otherMessage.path]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPath) {
    hashCode = hashCode * 31 + [self.path hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CreateLinkCall_Builder()
@property (retain) CreateLinkCall* result;
@end

@implementation CreateLinkCall_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[CreateLinkCall alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CreateLinkCall_Builder*) clear {
  self.result = [[CreateLinkCall alloc] init];
  return self;
}
- (CreateLinkCall_Builder*) clone {
  return [CreateLinkCall builderWithPrototype:result];
}
- (CreateLinkCall*) defaultInstance {
  return [CreateLinkCall defaultInstance];
}
- (CreateLinkCall*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CreateLinkCall*) buildPartial {
  CreateLinkCall* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (CreateLinkCall_Builder*) mergeFrom:(CreateLinkCall*) other {
  if (other == [CreateLinkCall defaultInstance]) {
    return self;
  }
  if (other.hasPath) {
    [self setPath:other.path];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CreateLinkCall_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CreateLinkCall_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPath:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPath {
  return result.hasPath;
}
- (NSString*) path {
  return result.path;
}
- (CreateLinkCall_Builder*) setPath:(NSString*) value {
  result.hasPath = YES;
  result.path = value;
  return self;
}
- (CreateLinkCall_Builder*) clearPath {
  result.hasPath = NO;
  result.path = @"";
  return self;
}
@end

@interface ShareFolderCall ()
@property (retain) NSString* path;
@end

@implementation ShareFolderCall

- (BOOL) hasPath {
  return !!hasPath_;
}
- (void) setHasPath:(BOOL) value_ {
  hasPath_ = !!value_;
}
@synthesize path;
- (id) init {
  if ((self = [super init])) {
    self.path = @"";
  }
  return self;
}
static ShareFolderCall* defaultShareFolderCallInstance = nil;
+ (void) initialize {
  if (self == [ShareFolderCall class]) {
    defaultShareFolderCallInstance = [[ShareFolderCall alloc] init];
  }
}
+ (ShareFolderCall*) defaultInstance {
  return defaultShareFolderCallInstance;
}
- (ShareFolderCall*) defaultInstance {
  return defaultShareFolderCallInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPath) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPath) {
    [output writeString:1 value:self.path];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPath) {
    size_ += computeStringSize(1, self.path);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ShareFolderCall*) parseFromData:(NSData*) data {
  return (ShareFolderCall*)[[[ShareFolderCall builder] mergeFromData:data] build];
}
+ (ShareFolderCall*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShareFolderCall*)[[[ShareFolderCall builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ShareFolderCall*) parseFromInputStream:(NSInputStream*) input {
  return (ShareFolderCall*)[[[ShareFolderCall builder] mergeFromInputStream:input] build];
}
+ (ShareFolderCall*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShareFolderCall*)[[[ShareFolderCall builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ShareFolderCall*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ShareFolderCall*)[[[ShareFolderCall builder] mergeFromCodedInputStream:input] build];
}
+ (ShareFolderCall*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShareFolderCall*)[[[ShareFolderCall builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ShareFolderCall_Builder*) builder {
  return [[ShareFolderCall_Builder alloc] init];
}
+ (ShareFolderCall_Builder*) builderWithPrototype:(ShareFolderCall*) prototype {
  return [[ShareFolderCall builder] mergeFrom:prototype];
}
- (ShareFolderCall_Builder*) builder {
  return [ShareFolderCall builder];
}
- (ShareFolderCall_Builder*) toBuilder {
  return [ShareFolderCall builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPath) {
    [output appendFormat:@"%@%@: %@\n", indent, @"path", self.path];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ShareFolderCall class]]) {
    return NO;
  }
  ShareFolderCall *otherMessage = other;
  return
      self.hasPath == otherMessage.hasPath &&
      (!self.hasPath || [self.path isEqual:otherMessage.path]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPath) {
    hashCode = hashCode * 31 + [self.path hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ShareFolderCall_Builder()
@property (retain) ShareFolderCall* result;
@end

@implementation ShareFolderCall_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ShareFolderCall alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ShareFolderCall_Builder*) clear {
  self.result = [[ShareFolderCall alloc] init];
  return self;
}
- (ShareFolderCall_Builder*) clone {
  return [ShareFolderCall builderWithPrototype:result];
}
- (ShareFolderCall*) defaultInstance {
  return [ShareFolderCall defaultInstance];
}
- (ShareFolderCall*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ShareFolderCall*) buildPartial {
  ShareFolderCall* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ShareFolderCall_Builder*) mergeFrom:(ShareFolderCall*) other {
  if (other == [ShareFolderCall defaultInstance]) {
    return self;
  }
  if (other.hasPath) {
    [self setPath:other.path];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ShareFolderCall_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ShareFolderCall_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPath:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPath {
  return result.hasPath;
}
- (NSString*) path {
  return result.path;
}
- (ShareFolderCall_Builder*) setPath:(NSString*) value {
  result.hasPath = YES;
  result.path = value;
  return self;
}
- (ShareFolderCall_Builder*) clearPath {
  result.hasPath = NO;
  result.path = @"";
  return self;
}
@end

@interface SyncStatusCall ()
@property (retain) NSString* path;
@end

@implementation SyncStatusCall

- (BOOL) hasPath {
  return !!hasPath_;
}
- (void) setHasPath:(BOOL) value_ {
  hasPath_ = !!value_;
}
@synthesize path;
- (id) init {
  if ((self = [super init])) {
    self.path = @"";
  }
  return self;
}
static SyncStatusCall* defaultSyncStatusCallInstance = nil;
+ (void) initialize {
  if (self == [SyncStatusCall class]) {
    defaultSyncStatusCallInstance = [[SyncStatusCall alloc] init];
  }
}
+ (SyncStatusCall*) defaultInstance {
  return defaultSyncStatusCallInstance;
}
- (SyncStatusCall*) defaultInstance {
  return defaultSyncStatusCallInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPath) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPath) {
    [output writeString:1 value:self.path];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPath) {
    size_ += computeStringSize(1, self.path);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SyncStatusCall*) parseFromData:(NSData*) data {
  return (SyncStatusCall*)[[[SyncStatusCall builder] mergeFromData:data] build];
}
+ (SyncStatusCall*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncStatusCall*)[[[SyncStatusCall builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncStatusCall*) parseFromInputStream:(NSInputStream*) input {
  return (SyncStatusCall*)[[[SyncStatusCall builder] mergeFromInputStream:input] build];
}
+ (SyncStatusCall*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncStatusCall*)[[[SyncStatusCall builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncStatusCall*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SyncStatusCall*)[[[SyncStatusCall builder] mergeFromCodedInputStream:input] build];
}
+ (SyncStatusCall*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncStatusCall*)[[[SyncStatusCall builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncStatusCall_Builder*) builder {
  return [[SyncStatusCall_Builder alloc] init];
}
+ (SyncStatusCall_Builder*) builderWithPrototype:(SyncStatusCall*) prototype {
  return [[SyncStatusCall builder] mergeFrom:prototype];
}
- (SyncStatusCall_Builder*) builder {
  return [SyncStatusCall builder];
}
- (SyncStatusCall_Builder*) toBuilder {
  return [SyncStatusCall builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPath) {
    [output appendFormat:@"%@%@: %@\n", indent, @"path", self.path];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SyncStatusCall class]]) {
    return NO;
  }
  SyncStatusCall *otherMessage = other;
  return
      self.hasPath == otherMessage.hasPath &&
      (!self.hasPath || [self.path isEqual:otherMessage.path]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPath) {
    hashCode = hashCode * 31 + [self.path hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SyncStatusCall_Builder()
@property (retain) SyncStatusCall* result;
@end

@implementation SyncStatusCall_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[SyncStatusCall alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncStatusCall_Builder*) clear {
  self.result = [[SyncStatusCall alloc] init];
  return self;
}
- (SyncStatusCall_Builder*) clone {
  return [SyncStatusCall builderWithPrototype:result];
}
- (SyncStatusCall*) defaultInstance {
  return [SyncStatusCall defaultInstance];
}
- (SyncStatusCall*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncStatusCall*) buildPartial {
  SyncStatusCall* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (SyncStatusCall_Builder*) mergeFrom:(SyncStatusCall*) other {
  if (other == [SyncStatusCall defaultInstance]) {
    return self;
  }
  if (other.hasPath) {
    [self setPath:other.path];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncStatusCall_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SyncStatusCall_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPath:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPath {
  return result.hasPath;
}
- (NSString*) path {
  return result.path;
}
- (SyncStatusCall_Builder*) setPath:(NSString*) value {
  result.hasPath = YES;
  result.path = value;
  return self;
}
- (SyncStatusCall_Builder*) clearPath {
  result.hasPath = NO;
  result.path = @"";
  return self;
}
@end

@interface VersionHistoryCall ()
@property (retain) NSString* path;
@end

@implementation VersionHistoryCall

- (BOOL) hasPath {
  return !!hasPath_;
}
- (void) setHasPath:(BOOL) value_ {
  hasPath_ = !!value_;
}
@synthesize path;
- (id) init {
  if ((self = [super init])) {
    self.path = @"";
  }
  return self;
}
static VersionHistoryCall* defaultVersionHistoryCallInstance = nil;
+ (void) initialize {
  if (self == [VersionHistoryCall class]) {
    defaultVersionHistoryCallInstance = [[VersionHistoryCall alloc] init];
  }
}
+ (VersionHistoryCall*) defaultInstance {
  return defaultVersionHistoryCallInstance;
}
- (VersionHistoryCall*) defaultInstance {
  return defaultVersionHistoryCallInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPath) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPath) {
    [output writeString:1 value:self.path];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPath) {
    size_ += computeStringSize(1, self.path);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (VersionHistoryCall*) parseFromData:(NSData*) data {
  return (VersionHistoryCall*)[[[VersionHistoryCall builder] mergeFromData:data] build];
}
+ (VersionHistoryCall*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VersionHistoryCall*)[[[VersionHistoryCall builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (VersionHistoryCall*) parseFromInputStream:(NSInputStream*) input {
  return (VersionHistoryCall*)[[[VersionHistoryCall builder] mergeFromInputStream:input] build];
}
+ (VersionHistoryCall*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VersionHistoryCall*)[[[VersionHistoryCall builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (VersionHistoryCall*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (VersionHistoryCall*)[[[VersionHistoryCall builder] mergeFromCodedInputStream:input] build];
}
+ (VersionHistoryCall*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VersionHistoryCall*)[[[VersionHistoryCall builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (VersionHistoryCall_Builder*) builder {
  return [[VersionHistoryCall_Builder alloc] init];
}
+ (VersionHistoryCall_Builder*) builderWithPrototype:(VersionHistoryCall*) prototype {
  return [[VersionHistoryCall builder] mergeFrom:prototype];
}
- (VersionHistoryCall_Builder*) builder {
  return [VersionHistoryCall builder];
}
- (VersionHistoryCall_Builder*) toBuilder {
  return [VersionHistoryCall builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPath) {
    [output appendFormat:@"%@%@: %@\n", indent, @"path", self.path];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[VersionHistoryCall class]]) {
    return NO;
  }
  VersionHistoryCall *otherMessage = other;
  return
      self.hasPath == otherMessage.hasPath &&
      (!self.hasPath || [self.path isEqual:otherMessage.path]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPath) {
    hashCode = hashCode * 31 + [self.path hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface VersionHistoryCall_Builder()
@property (retain) VersionHistoryCall* result;
@end

@implementation VersionHistoryCall_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[VersionHistoryCall alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (VersionHistoryCall_Builder*) clear {
  self.result = [[VersionHistoryCall alloc] init];
  return self;
}
- (VersionHistoryCall_Builder*) clone {
  return [VersionHistoryCall builderWithPrototype:result];
}
- (VersionHistoryCall*) defaultInstance {
  return [VersionHistoryCall defaultInstance];
}
- (VersionHistoryCall*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (VersionHistoryCall*) buildPartial {
  VersionHistoryCall* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (VersionHistoryCall_Builder*) mergeFrom:(VersionHistoryCall*) other {
  if (other == [VersionHistoryCall defaultInstance]) {
    return self;
  }
  if (other.hasPath) {
    [self setPath:other.path];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (VersionHistoryCall_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (VersionHistoryCall_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPath:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPath {
  return result.hasPath;
}
- (NSString*) path {
  return result.path;
}
- (VersionHistoryCall_Builder*) setPath:(NSString*) value {
  result.hasPath = YES;
  result.path = value;
  return self;
}
- (VersionHistoryCall_Builder*) clearPath {
  result.hasPath = NO;
  result.path = @"";
  return self;
}
@end

@interface ConflictResolutionCall ()
@property (retain) NSString* path;
@end

@implementation ConflictResolutionCall

- (BOOL) hasPath {
  return !!hasPath_;
}
- (void) setHasPath:(BOOL) value_ {
  hasPath_ = !!value_;
}
@synthesize path;
- (id) init {
  if ((self = [super init])) {
    self.path = @"";
  }
  return self;
}
static ConflictResolutionCall* defaultConflictResolutionCallInstance = nil;
+ (void) initialize {
  if (self == [ConflictResolutionCall class]) {
    defaultConflictResolutionCallInstance = [[ConflictResolutionCall alloc] init];
  }
}
+ (ConflictResolutionCall*) defaultInstance {
  return defaultConflictResolutionCallInstance;
}
- (ConflictResolutionCall*) defaultInstance {
  return defaultConflictResolutionCallInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPath) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPath) {
    [output writeString:1 value:self.path];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPath) {
    size_ += computeStringSize(1, self.path);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ConflictResolutionCall*) parseFromData:(NSData*) data {
  return (ConflictResolutionCall*)[[[ConflictResolutionCall builder] mergeFromData:data] build];
}
+ (ConflictResolutionCall*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ConflictResolutionCall*)[[[ConflictResolutionCall builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ConflictResolutionCall*) parseFromInputStream:(NSInputStream*) input {
  return (ConflictResolutionCall*)[[[ConflictResolutionCall builder] mergeFromInputStream:input] build];
}
+ (ConflictResolutionCall*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ConflictResolutionCall*)[[[ConflictResolutionCall builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ConflictResolutionCall*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ConflictResolutionCall*)[[[ConflictResolutionCall builder] mergeFromCodedInputStream:input] build];
}
+ (ConflictResolutionCall*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ConflictResolutionCall*)[[[ConflictResolutionCall builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ConflictResolutionCall_Builder*) builder {
  return [[ConflictResolutionCall_Builder alloc] init];
}
+ (ConflictResolutionCall_Builder*) builderWithPrototype:(ConflictResolutionCall*) prototype {
  return [[ConflictResolutionCall builder] mergeFrom:prototype];
}
- (ConflictResolutionCall_Builder*) builder {
  return [ConflictResolutionCall builder];
}
- (ConflictResolutionCall_Builder*) toBuilder {
  return [ConflictResolutionCall builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPath) {
    [output appendFormat:@"%@%@: %@\n", indent, @"path", self.path];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ConflictResolutionCall class]]) {
    return NO;
  }
  ConflictResolutionCall *otherMessage = other;
  return
      self.hasPath == otherMessage.hasPath &&
      (!self.hasPath || [self.path isEqual:otherMessage.path]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPath) {
    hashCode = hashCode * 31 + [self.path hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ConflictResolutionCall_Builder()
@property (retain) ConflictResolutionCall* result;
@end

@implementation ConflictResolutionCall_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ConflictResolutionCall alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ConflictResolutionCall_Builder*) clear {
  self.result = [[ConflictResolutionCall alloc] init];
  return self;
}
- (ConflictResolutionCall_Builder*) clone {
  return [ConflictResolutionCall builderWithPrototype:result];
}
- (ConflictResolutionCall*) defaultInstance {
  return [ConflictResolutionCall defaultInstance];
}
- (ConflictResolutionCall*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ConflictResolutionCall*) buildPartial {
  ConflictResolutionCall* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ConflictResolutionCall_Builder*) mergeFrom:(ConflictResolutionCall*) other {
  if (other == [ConflictResolutionCall defaultInstance]) {
    return self;
  }
  if (other.hasPath) {
    [self setPath:other.path];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ConflictResolutionCall_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ConflictResolutionCall_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPath:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPath {
  return result.hasPath;
}
- (NSString*) path {
  return result.path;
}
- (ConflictResolutionCall_Builder*) setPath:(NSString*) value {
  result.hasPath = YES;
  result.path = value;
  return self;
}
- (ConflictResolutionCall_Builder*) clearPath {
  result.hasPath = NO;
  result.path = @"";
  return self;
}
@end

@interface GetPathStatusCall ()
@property (retain) NSString* path;
@end

@implementation GetPathStatusCall

- (BOOL) hasPath {
  return !!hasPath_;
}
- (void) setHasPath:(BOOL) value_ {
  hasPath_ = !!value_;
}
@synthesize path;
- (id) init {
  if ((self = [super init])) {
    self.path = @"";
  }
  return self;
}
static GetPathStatusCall* defaultGetPathStatusCallInstance = nil;
+ (void) initialize {
  if (self == [GetPathStatusCall class]) {
    defaultGetPathStatusCallInstance = [[GetPathStatusCall alloc] init];
  }
}
+ (GetPathStatusCall*) defaultInstance {
  return defaultGetPathStatusCallInstance;
}
- (GetPathStatusCall*) defaultInstance {
  return defaultGetPathStatusCallInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPath) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPath) {
    [output writeString:1 value:self.path];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPath) {
    size_ += computeStringSize(1, self.path);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetPathStatusCall*) parseFromData:(NSData*) data {
  return (GetPathStatusCall*)[[[GetPathStatusCall builder] mergeFromData:data] build];
}
+ (GetPathStatusCall*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPathStatusCall*)[[[GetPathStatusCall builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetPathStatusCall*) parseFromInputStream:(NSInputStream*) input {
  return (GetPathStatusCall*)[[[GetPathStatusCall builder] mergeFromInputStream:input] build];
}
+ (GetPathStatusCall*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPathStatusCall*)[[[GetPathStatusCall builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetPathStatusCall*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetPathStatusCall*)[[[GetPathStatusCall builder] mergeFromCodedInputStream:input] build];
}
+ (GetPathStatusCall*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPathStatusCall*)[[[GetPathStatusCall builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetPathStatusCall_Builder*) builder {
  return [[GetPathStatusCall_Builder alloc] init];
}
+ (GetPathStatusCall_Builder*) builderWithPrototype:(GetPathStatusCall*) prototype {
  return [[GetPathStatusCall builder] mergeFrom:prototype];
}
- (GetPathStatusCall_Builder*) builder {
  return [GetPathStatusCall builder];
}
- (GetPathStatusCall_Builder*) toBuilder {
  return [GetPathStatusCall builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPath) {
    [output appendFormat:@"%@%@: %@\n", indent, @"path", self.path];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GetPathStatusCall class]]) {
    return NO;
  }
  GetPathStatusCall *otherMessage = other;
  return
      self.hasPath == otherMessage.hasPath &&
      (!self.hasPath || [self.path isEqual:otherMessage.path]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPath) {
    hashCode = hashCode * 31 + [self.path hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GetPathStatusCall_Builder()
@property (retain) GetPathStatusCall* result;
@end

@implementation GetPathStatusCall_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[GetPathStatusCall alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetPathStatusCall_Builder*) clear {
  self.result = [[GetPathStatusCall alloc] init];
  return self;
}
- (GetPathStatusCall_Builder*) clone {
  return [GetPathStatusCall builderWithPrototype:result];
}
- (GetPathStatusCall*) defaultInstance {
  return [GetPathStatusCall defaultInstance];
}
- (GetPathStatusCall*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetPathStatusCall*) buildPartial {
  GetPathStatusCall* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (GetPathStatusCall_Builder*) mergeFrom:(GetPathStatusCall*) other {
  if (other == [GetPathStatusCall defaultInstance]) {
    return self;
  }
  if (other.hasPath) {
    [self setPath:other.path];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetPathStatusCall_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetPathStatusCall_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPath:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPath {
  return result.hasPath;
}
- (NSString*) path {
  return result.path;
}
- (GetPathStatusCall_Builder*) setPath:(NSString*) value {
  result.hasPath = YES;
  result.path = value;
  return self;
}
- (GetPathStatusCall_Builder*) clearPath {
  result.hasPath = NO;
  result.path = @"";
  return self;
}
@end

@interface ShellextNotification ()
@property ShellextNotification_Type type;
@property (retain) RootAnchorNotification* rootAnchor;
@property (retain) PathStatusNotification* pathStatus;
@property (retain) LinkSharingEnabled* linkSharingEnabled;
@end

@implementation ShellextNotification

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
  hasType_ = !!value_;
}
@synthesize type;
- (BOOL) hasRootAnchor {
  return !!hasRootAnchor_;
}
- (void) setHasRootAnchor:(BOOL) value_ {
  hasRootAnchor_ = !!value_;
}
@synthesize rootAnchor;
- (BOOL) hasPathStatus {
  return !!hasPathStatus_;
}
- (void) setHasPathStatus:(BOOL) value_ {
  hasPathStatus_ = !!value_;
}
@synthesize pathStatus;
- (BOOL) hasLinkSharingEnabled {
  return !!hasLinkSharingEnabled_;
}
- (void) setHasLinkSharingEnabled:(BOOL) value_ {
  hasLinkSharingEnabled_ = !!value_;
}
@synthesize linkSharingEnabled;
- (id) init {
  if ((self = [super init])) {
    self.type = ShellextNotification_TypeRootAnchor;
    self.rootAnchor = [RootAnchorNotification defaultInstance];
    self.pathStatus = [PathStatusNotification defaultInstance];
    self.linkSharingEnabled = [LinkSharingEnabled defaultInstance];
  }
  return self;
}
static ShellextNotification* defaultShellextNotificationInstance = nil;
+ (void) initialize {
  if (self == [ShellextNotification class]) {
    defaultShellextNotificationInstance = [[ShellextNotification alloc] init];
  }
}
+ (ShellextNotification*) defaultInstance {
  return defaultShellextNotificationInstance;
}
- (ShellextNotification*) defaultInstance {
  return defaultShellextNotificationInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (self.hasRootAnchor) {
    if (!self.rootAnchor.isInitialized) {
      return NO;
    }
  }
  if (self.hasPathStatus) {
    if (!self.pathStatus.isInitialized) {
      return NO;
    }
  }
  if (self.hasLinkSharingEnabled) {
    if (!self.linkSharingEnabled.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeEnum:1 value:self.type];
  }
  if (self.hasRootAnchor) {
    [output writeMessage:2 value:self.rootAnchor];
  }
  if (self.hasPathStatus) {
    [output writeMessage:3 value:self.pathStatus];
  }
  if (self.hasLinkSharingEnabled) {
    [output writeMessage:4 value:self.linkSharingEnabled];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeEnumSize(1, self.type);
  }
  if (self.hasRootAnchor) {
    size_ += computeMessageSize(2, self.rootAnchor);
  }
  if (self.hasPathStatus) {
    size_ += computeMessageSize(3, self.pathStatus);
  }
  if (self.hasLinkSharingEnabled) {
    size_ += computeMessageSize(4, self.linkSharingEnabled);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ShellextNotification*) parseFromData:(NSData*) data {
  return (ShellextNotification*)[[[ShellextNotification builder] mergeFromData:data] build];
}
+ (ShellextNotification*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShellextNotification*)[[[ShellextNotification builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ShellextNotification*) parseFromInputStream:(NSInputStream*) input {
  return (ShellextNotification*)[[[ShellextNotification builder] mergeFromInputStream:input] build];
}
+ (ShellextNotification*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShellextNotification*)[[[ShellextNotification builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ShellextNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ShellextNotification*)[[[ShellextNotification builder] mergeFromCodedInputStream:input] build];
}
+ (ShellextNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShellextNotification*)[[[ShellextNotification builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ShellextNotification_Builder*) builder {
  return [[ShellextNotification_Builder alloc] init];
}
+ (ShellextNotification_Builder*) builderWithPrototype:(ShellextNotification*) prototype {
  return [[ShellextNotification builder] mergeFrom:prototype];
}
- (ShellextNotification_Builder*) builder {
  return [ShellextNotification builder];
}
- (ShellextNotification_Builder*) toBuilder {
  return [ShellextNotification builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"type", self.type];
  }
  if (self.hasRootAnchor) {
    [output appendFormat:@"%@%@ {\n", indent, @"rootAnchor"];
    [self.rootAnchor writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPathStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"pathStatus"];
    [self.pathStatus writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasLinkSharingEnabled) {
    [output appendFormat:@"%@%@ {\n", indent, @"linkSharingEnabled"];
    [self.linkSharingEnabled writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ShellextNotification class]]) {
    return NO;
  }
  ShellextNotification *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasRootAnchor == otherMessage.hasRootAnchor &&
      (!self.hasRootAnchor || [self.rootAnchor isEqual:otherMessage.rootAnchor]) &&
      self.hasPathStatus == otherMessage.hasPathStatus &&
      (!self.hasPathStatus || [self.pathStatus isEqual:otherMessage.pathStatus]) &&
      self.hasLinkSharingEnabled == otherMessage.hasLinkSharingEnabled &&
      (!self.hasLinkSharingEnabled || [self.linkSharingEnabled isEqual:otherMessage.linkSharingEnabled]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasRootAnchor) {
    hashCode = hashCode * 31 + [self.rootAnchor hash];
  }
  if (self.hasPathStatus) {
    hashCode = hashCode * 31 + [self.pathStatus hash];
  }
  if (self.hasLinkSharingEnabled) {
    hashCode = hashCode * 31 + [self.linkSharingEnabled hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL ShellextNotification_TypeIsValidValue(ShellextNotification_Type value) {
  switch (value) {
    case ShellextNotification_TypeRootAnchor:
    case ShellextNotification_TypePathStatus:
    case ShellextNotification_TypeClearStatusCache:
    case ShellextNotification_TypeLinkSharingEnabled:
      return YES;
    default:
      return NO;
  }
}
@interface ShellextNotification_Builder()
@property (retain) ShellextNotification* result;
@end

@implementation ShellextNotification_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ShellextNotification alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ShellextNotification_Builder*) clear {
  self.result = [[ShellextNotification alloc] init];
  return self;
}
- (ShellextNotification_Builder*) clone {
  return [ShellextNotification builderWithPrototype:result];
}
- (ShellextNotification*) defaultInstance {
  return [ShellextNotification defaultInstance];
}
- (ShellextNotification*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ShellextNotification*) buildPartial {
  ShellextNotification* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ShellextNotification_Builder*) mergeFrom:(ShellextNotification*) other {
  if (other == [ShellextNotification defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasRootAnchor) {
    [self mergeRootAnchor:other.rootAnchor];
  }
  if (other.hasPathStatus) {
    [self mergePathStatus:other.pathStatus];
  }
  if (other.hasLinkSharingEnabled) {
    [self mergeLinkSharingEnabled:other.linkSharingEnabled];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ShellextNotification_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ShellextNotification_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (ShellextNotification_TypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        RootAnchorNotification_Builder* subBuilder = [RootAnchorNotification builder];
        if (self.hasRootAnchor) {
          [subBuilder mergeFrom:self.rootAnchor];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRootAnchor:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        PathStatusNotification_Builder* subBuilder = [PathStatusNotification builder];
        if (self.hasPathStatus) {
          [subBuilder mergeFrom:self.pathStatus];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPathStatus:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        LinkSharingEnabled_Builder* subBuilder = [LinkSharingEnabled builder];
        if (self.hasLinkSharingEnabled) {
          [subBuilder mergeFrom:self.linkSharingEnabled];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLinkSharingEnabled:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (ShellextNotification_Type) type {
  return result.type;
}
- (ShellextNotification_Builder*) setType:(ShellextNotification_Type) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (ShellextNotification_Builder*) clearType {
  result.hasType = NO;
  result.type = ShellextNotification_TypeRootAnchor;
  return self;
}
- (BOOL) hasRootAnchor {
  return result.hasRootAnchor;
}
- (RootAnchorNotification*) rootAnchor {
  return result.rootAnchor;
}
- (ShellextNotification_Builder*) setRootAnchor:(RootAnchorNotification*) value {
  result.hasRootAnchor = YES;
  result.rootAnchor = value;
  return self;
}
- (ShellextNotification_Builder*) setRootAnchorBuilder:(RootAnchorNotification_Builder*) builderForValue {
  return [self setRootAnchor:[builderForValue build]];
}
- (ShellextNotification_Builder*) mergeRootAnchor:(RootAnchorNotification*) value {
  if (result.hasRootAnchor &&
      result.rootAnchor != [RootAnchorNotification defaultInstance]) {
    result.rootAnchor =
      [[[RootAnchorNotification builderWithPrototype:result.rootAnchor] mergeFrom:value] buildPartial];
  } else {
    result.rootAnchor = value;
  }
  result.hasRootAnchor = YES;
  return self;
}
- (ShellextNotification_Builder*) clearRootAnchor {
  result.hasRootAnchor = NO;
  result.rootAnchor = [RootAnchorNotification defaultInstance];
  return self;
}
- (BOOL) hasPathStatus {
  return result.hasPathStatus;
}
- (PathStatusNotification*) pathStatus {
  return result.pathStatus;
}
- (ShellextNotification_Builder*) setPathStatus:(PathStatusNotification*) value {
  result.hasPathStatus = YES;
  result.pathStatus = value;
  return self;
}
- (ShellextNotification_Builder*) setPathStatusBuilder:(PathStatusNotification_Builder*) builderForValue {
  return [self setPathStatus:[builderForValue build]];
}
- (ShellextNotification_Builder*) mergePathStatus:(PathStatusNotification*) value {
  if (result.hasPathStatus &&
      result.pathStatus != [PathStatusNotification defaultInstance]) {
    result.pathStatus =
      [[[PathStatusNotification builderWithPrototype:result.pathStatus] mergeFrom:value] buildPartial];
  } else {
    result.pathStatus = value;
  }
  result.hasPathStatus = YES;
  return self;
}
- (ShellextNotification_Builder*) clearPathStatus {
  result.hasPathStatus = NO;
  result.pathStatus = [PathStatusNotification defaultInstance];
  return self;
}
- (BOOL) hasLinkSharingEnabled {
  return result.hasLinkSharingEnabled;
}
- (LinkSharingEnabled*) linkSharingEnabled {
  return result.linkSharingEnabled;
}
- (ShellextNotification_Builder*) setLinkSharingEnabled:(LinkSharingEnabled*) value {
  result.hasLinkSharingEnabled = YES;
  result.linkSharingEnabled = value;
  return self;
}
- (ShellextNotification_Builder*) setLinkSharingEnabledBuilder:(LinkSharingEnabled_Builder*) builderForValue {
  return [self setLinkSharingEnabled:[builderForValue build]];
}
- (ShellextNotification_Builder*) mergeLinkSharingEnabled:(LinkSharingEnabled*) value {
  if (result.hasLinkSharingEnabled &&
      result.linkSharingEnabled != [LinkSharingEnabled defaultInstance]) {
    result.linkSharingEnabled =
      [[[LinkSharingEnabled builderWithPrototype:result.linkSharingEnabled] mergeFrom:value] buildPartial];
  } else {
    result.linkSharingEnabled = value;
  }
  result.hasLinkSharingEnabled = YES;
  return self;
}
- (ShellextNotification_Builder*) clearLinkSharingEnabled {
  result.hasLinkSharingEnabled = NO;
  result.linkSharingEnabled = [LinkSharingEnabled defaultInstance];
  return self;
}
@end

@interface RootAnchorNotification ()
@property (retain) NSString* path;
@property (retain) NSString* user;
@end

@implementation RootAnchorNotification

- (BOOL) hasPath {
  return !!hasPath_;
}
- (void) setHasPath:(BOOL) value_ {
  hasPath_ = !!value_;
}
@synthesize path;
- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) value_ {
  hasUser_ = !!value_;
}
@synthesize user;
- (id) init {
  if ((self = [super init])) {
    self.path = @"";
    self.user = @"";
  }
  return self;
}
static RootAnchorNotification* defaultRootAnchorNotificationInstance = nil;
+ (void) initialize {
  if (self == [RootAnchorNotification class]) {
    defaultRootAnchorNotificationInstance = [[RootAnchorNotification alloc] init];
  }
}
+ (RootAnchorNotification*) defaultInstance {
  return defaultRootAnchorNotificationInstance;
}
- (RootAnchorNotification*) defaultInstance {
  return defaultRootAnchorNotificationInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPath) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPath) {
    [output writeString:1 value:self.path];
  }
  if (self.hasUser) {
    [output writeString:2 value:self.user];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPath) {
    size_ += computeStringSize(1, self.path);
  }
  if (self.hasUser) {
    size_ += computeStringSize(2, self.user);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RootAnchorNotification*) parseFromData:(NSData*) data {
  return (RootAnchorNotification*)[[[RootAnchorNotification builder] mergeFromData:data] build];
}
+ (RootAnchorNotification*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RootAnchorNotification*)[[[RootAnchorNotification builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RootAnchorNotification*) parseFromInputStream:(NSInputStream*) input {
  return (RootAnchorNotification*)[[[RootAnchorNotification builder] mergeFromInputStream:input] build];
}
+ (RootAnchorNotification*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RootAnchorNotification*)[[[RootAnchorNotification builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RootAnchorNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RootAnchorNotification*)[[[RootAnchorNotification builder] mergeFromCodedInputStream:input] build];
}
+ (RootAnchorNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RootAnchorNotification*)[[[RootAnchorNotification builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RootAnchorNotification_Builder*) builder {
  return [[RootAnchorNotification_Builder alloc] init];
}
+ (RootAnchorNotification_Builder*) builderWithPrototype:(RootAnchorNotification*) prototype {
  return [[RootAnchorNotification builder] mergeFrom:prototype];
}
- (RootAnchorNotification_Builder*) builder {
  return [RootAnchorNotification builder];
}
- (RootAnchorNotification_Builder*) toBuilder {
  return [RootAnchorNotification builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPath) {
    [output appendFormat:@"%@%@: %@\n", indent, @"path", self.path];
  }
  if (self.hasUser) {
    [output appendFormat:@"%@%@: %@\n", indent, @"user", self.user];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RootAnchorNotification class]]) {
    return NO;
  }
  RootAnchorNotification *otherMessage = other;
  return
      self.hasPath == otherMessage.hasPath &&
      (!self.hasPath || [self.path isEqual:otherMessage.path]) &&
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPath) {
    hashCode = hashCode * 31 + [self.path hash];
  }
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RootAnchorNotification_Builder()
@property (retain) RootAnchorNotification* result;
@end

@implementation RootAnchorNotification_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RootAnchorNotification alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RootAnchorNotification_Builder*) clear {
  self.result = [[RootAnchorNotification alloc] init];
  return self;
}
- (RootAnchorNotification_Builder*) clone {
  return [RootAnchorNotification builderWithPrototype:result];
}
- (RootAnchorNotification*) defaultInstance {
  return [RootAnchorNotification defaultInstance];
}
- (RootAnchorNotification*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RootAnchorNotification*) buildPartial {
  RootAnchorNotification* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RootAnchorNotification_Builder*) mergeFrom:(RootAnchorNotification*) other {
  if (other == [RootAnchorNotification defaultInstance]) {
    return self;
  }
  if (other.hasPath) {
    [self setPath:other.path];
  }
  if (other.hasUser) {
    [self setUser:other.user];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RootAnchorNotification_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RootAnchorNotification_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPath:[input readString]];
        break;
      }
      case 18: {
        [self setUser:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPath {
  return result.hasPath;
}
- (NSString*) path {
  return result.path;
}
- (RootAnchorNotification_Builder*) setPath:(NSString*) value {
  result.hasPath = YES;
  result.path = value;
  return self;
}
- (RootAnchorNotification_Builder*) clearPath {
  result.hasPath = NO;
  result.path = @"";
  return self;
}
- (BOOL) hasUser {
  return result.hasUser;
}
- (NSString*) user {
  return result.user;
}
- (RootAnchorNotification_Builder*) setUser:(NSString*) value {
  result.hasUser = YES;
  result.user = value;
  return self;
}
- (RootAnchorNotification_Builder*) clearUser {
  result.hasUser = NO;
  result.user = @"";
  return self;
}
@end

@interface PathStatusNotification ()
@property (retain) NSString* path;
@property (retain) PBPathStatus* status;
@end

@implementation PathStatusNotification

- (BOOL) hasPath {
  return !!hasPath_;
}
- (void) setHasPath:(BOOL) value_ {
  hasPath_ = !!value_;
}
@synthesize path;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.path = @"";
    self.status = [PBPathStatus defaultInstance];
  }
  return self;
}
static PathStatusNotification* defaultPathStatusNotificationInstance = nil;
+ (void) initialize {
  if (self == [PathStatusNotification class]) {
    defaultPathStatusNotificationInstance = [[PathStatusNotification alloc] init];
  }
}
+ (PathStatusNotification*) defaultInstance {
  return defaultPathStatusNotificationInstance;
}
- (PathStatusNotification*) defaultInstance {
  return defaultPathStatusNotificationInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPath) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  if (!self.status.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPath) {
    [output writeString:1 value:self.path];
  }
  if (self.hasStatus) {
    [output writeMessage:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPath) {
    size_ += computeStringSize(1, self.path);
  }
  if (self.hasStatus) {
    size_ += computeMessageSize(2, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PathStatusNotification*) parseFromData:(NSData*) data {
  return (PathStatusNotification*)[[[PathStatusNotification builder] mergeFromData:data] build];
}
+ (PathStatusNotification*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PathStatusNotification*)[[[PathStatusNotification builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PathStatusNotification*) parseFromInputStream:(NSInputStream*) input {
  return (PathStatusNotification*)[[[PathStatusNotification builder] mergeFromInputStream:input] build];
}
+ (PathStatusNotification*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PathStatusNotification*)[[[PathStatusNotification builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PathStatusNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PathStatusNotification*)[[[PathStatusNotification builder] mergeFromCodedInputStream:input] build];
}
+ (PathStatusNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PathStatusNotification*)[[[PathStatusNotification builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PathStatusNotification_Builder*) builder {
  return [[PathStatusNotification_Builder alloc] init];
}
+ (PathStatusNotification_Builder*) builderWithPrototype:(PathStatusNotification*) prototype {
  return [[PathStatusNotification builder] mergeFrom:prototype];
}
- (PathStatusNotification_Builder*) builder {
  return [PathStatusNotification builder];
}
- (PathStatusNotification_Builder*) toBuilder {
  return [PathStatusNotification builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPath) {
    [output appendFormat:@"%@%@: %@\n", indent, @"path", self.path];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PathStatusNotification class]]) {
    return NO;
  }
  PathStatusNotification *otherMessage = other;
  return
      self.hasPath == otherMessage.hasPath &&
      (!self.hasPath || [self.path isEqual:otherMessage.path]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPath) {
    hashCode = hashCode * 31 + [self.path hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PathStatusNotification_Builder()
@property (retain) PathStatusNotification* result;
@end

@implementation PathStatusNotification_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PathStatusNotification alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PathStatusNotification_Builder*) clear {
  self.result = [[PathStatusNotification alloc] init];
  return self;
}
- (PathStatusNotification_Builder*) clone {
  return [PathStatusNotification builderWithPrototype:result];
}
- (PathStatusNotification*) defaultInstance {
  return [PathStatusNotification defaultInstance];
}
- (PathStatusNotification*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PathStatusNotification*) buildPartial {
  PathStatusNotification* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PathStatusNotification_Builder*) mergeFrom:(PathStatusNotification*) other {
  if (other == [PathStatusNotification defaultInstance]) {
    return self;
  }
  if (other.hasPath) {
    [self setPath:other.path];
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PathStatusNotification_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PathStatusNotification_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPath:[input readString]];
        break;
      }
      case 18: {
        PBPathStatus_Builder* subBuilder = [PBPathStatus builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPath {
  return result.hasPath;
}
- (NSString*) path {
  return result.path;
}
- (PathStatusNotification_Builder*) setPath:(NSString*) value {
  result.hasPath = YES;
  result.path = value;
  return self;
}
- (PathStatusNotification_Builder*) clearPath {
  result.hasPath = NO;
  result.path = @"";
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (PBPathStatus*) status {
  return result.status;
}
- (PathStatusNotification_Builder*) setStatus:(PBPathStatus*) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PathStatusNotification_Builder*) setStatusBuilder:(PBPathStatus_Builder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (PathStatusNotification_Builder*) mergeStatus:(PBPathStatus*) value {
  if (result.hasStatus &&
      result.status != [PBPathStatus defaultInstance]) {
    result.status =
      [[[PBPathStatus builderWithPrototype:result.status] mergeFrom:value] buildPartial];
  } else {
    result.status = value;
  }
  result.hasStatus = YES;
  return self;
}
- (PathStatusNotification_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = [PBPathStatus defaultInstance];
  return self;
}
@end

@interface LinkSharingEnabled ()
@property BOOL isLinkSharingEnabled;
@end

@implementation LinkSharingEnabled

- (BOOL) hasIsLinkSharingEnabled {
  return !!hasIsLinkSharingEnabled_;
}
- (void) setHasIsLinkSharingEnabled:(BOOL) value_ {
  hasIsLinkSharingEnabled_ = !!value_;
}
- (BOOL) isLinkSharingEnabled {
  return !!isLinkSharingEnabled_;
}
- (void) setIsLinkSharingEnabled:(BOOL) value_ {
  isLinkSharingEnabled_ = !!value_;
}
- (id) init {
  if ((self = [super init])) {
    self.isLinkSharingEnabled = NO;
  }
  return self;
}
static LinkSharingEnabled* defaultLinkSharingEnabledInstance = nil;
+ (void) initialize {
  if (self == [LinkSharingEnabled class]) {
    defaultLinkSharingEnabledInstance = [[LinkSharingEnabled alloc] init];
  }
}
+ (LinkSharingEnabled*) defaultInstance {
  return defaultLinkSharingEnabledInstance;
}
- (LinkSharingEnabled*) defaultInstance {
  return defaultLinkSharingEnabledInstance;
}
- (BOOL) isInitialized {
  if (!self.hasIsLinkSharingEnabled) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsLinkSharingEnabled) {
    [output writeBool:1 value:self.isLinkSharingEnabled];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasIsLinkSharingEnabled) {
    size_ += computeBoolSize(1, self.isLinkSharingEnabled);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LinkSharingEnabled*) parseFromData:(NSData*) data {
  return (LinkSharingEnabled*)[[[LinkSharingEnabled builder] mergeFromData:data] build];
}
+ (LinkSharingEnabled*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LinkSharingEnabled*)[[[LinkSharingEnabled builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LinkSharingEnabled*) parseFromInputStream:(NSInputStream*) input {
  return (LinkSharingEnabled*)[[[LinkSharingEnabled builder] mergeFromInputStream:input] build];
}
+ (LinkSharingEnabled*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LinkSharingEnabled*)[[[LinkSharingEnabled builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LinkSharingEnabled*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LinkSharingEnabled*)[[[LinkSharingEnabled builder] mergeFromCodedInputStream:input] build];
}
+ (LinkSharingEnabled*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LinkSharingEnabled*)[[[LinkSharingEnabled builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LinkSharingEnabled_Builder*) builder {
  return [[LinkSharingEnabled_Builder alloc] init];
}
+ (LinkSharingEnabled_Builder*) builderWithPrototype:(LinkSharingEnabled*) prototype {
  return [[LinkSharingEnabled builder] mergeFrom:prototype];
}
- (LinkSharingEnabled_Builder*) builder {
  return [LinkSharingEnabled builder];
}
- (LinkSharingEnabled_Builder*) toBuilder {
  return [LinkSharingEnabled builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasIsLinkSharingEnabled) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isLinkSharingEnabled", [NSNumber numberWithBool:self.isLinkSharingEnabled]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[LinkSharingEnabled class]]) {
    return NO;
  }
  LinkSharingEnabled *otherMessage = other;
  return
      self.hasIsLinkSharingEnabled == otherMessage.hasIsLinkSharingEnabled &&
      (!self.hasIsLinkSharingEnabled || self.isLinkSharingEnabled == otherMessage.isLinkSharingEnabled) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasIsLinkSharingEnabled) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isLinkSharingEnabled] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface LinkSharingEnabled_Builder()
@property (retain) LinkSharingEnabled* result;
@end

@implementation LinkSharingEnabled_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[LinkSharingEnabled alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LinkSharingEnabled_Builder*) clear {
  self.result = [[LinkSharingEnabled alloc] init];
  return self;
}
- (LinkSharingEnabled_Builder*) clone {
  return [LinkSharingEnabled builderWithPrototype:result];
}
- (LinkSharingEnabled*) defaultInstance {
  return [LinkSharingEnabled defaultInstance];
}
- (LinkSharingEnabled*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LinkSharingEnabled*) buildPartial {
  LinkSharingEnabled* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (LinkSharingEnabled_Builder*) mergeFrom:(LinkSharingEnabled*) other {
  if (other == [LinkSharingEnabled defaultInstance]) {
    return self;
  }
  if (other.hasIsLinkSharingEnabled) {
    [self setIsLinkSharingEnabled:other.isLinkSharingEnabled];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LinkSharingEnabled_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LinkSharingEnabled_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsLinkSharingEnabled:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasIsLinkSharingEnabled {
  return result.hasIsLinkSharingEnabled;
}
- (BOOL) isLinkSharingEnabled {
  return result.isLinkSharingEnabled;
}
- (LinkSharingEnabled_Builder*) setIsLinkSharingEnabled:(BOOL) value {
  result.hasIsLinkSharingEnabled = YES;
  result.isLinkSharingEnabled = value;
  return self;
}
- (LinkSharingEnabled_Builder*) clearIsLinkSharingEnabled {
  result.hasIsLinkSharingEnabled = NO;
  result.isLinkSharingEnabled = NO;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
