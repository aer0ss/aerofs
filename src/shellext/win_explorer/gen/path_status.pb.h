// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: path_status.proto

#ifndef PROTOBUF_path_5fstatus_2eproto__INCLUDED
#define PROTOBUF_path_5fstatus_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_path_5fstatus_2eproto();
void protobuf_AssignDesc_path_5fstatus_2eproto();
void protobuf_ShutdownFile_path_5fstatus_2eproto();

class PBPathStatus;

enum PBPathStatus_Sync {
  PBPathStatus_Sync_UNKNOWN = 0,
  PBPathStatus_Sync_OUT_SYNC = 1,
  PBPathStatus_Sync_PARTIAL_SYNC = 2,
  PBPathStatus_Sync_IN_SYNC = 3
};
bool PBPathStatus_Sync_IsValid(int value);
const PBPathStatus_Sync PBPathStatus_Sync_Sync_MIN = PBPathStatus_Sync_UNKNOWN;
const PBPathStatus_Sync PBPathStatus_Sync_Sync_MAX = PBPathStatus_Sync_IN_SYNC;
const int PBPathStatus_Sync_Sync_ARRAYSIZE = PBPathStatus_Sync_Sync_MAX + 1;

enum PBPathStatus_Flag {
  PBPathStatus_Flag_DOWNLOADING = 1,
  PBPathStatus_Flag_UPLOADING = 2,
  PBPathStatus_Flag_CONFLICT = 4
};
bool PBPathStatus_Flag_IsValid(int value);
const PBPathStatus_Flag PBPathStatus_Flag_Flag_MIN = PBPathStatus_Flag_DOWNLOADING;
const PBPathStatus_Flag PBPathStatus_Flag_Flag_MAX = PBPathStatus_Flag_CONFLICT;
const int PBPathStatus_Flag_Flag_ARRAYSIZE = PBPathStatus_Flag_Flag_MAX + 1;

// ===================================================================

class PBPathStatus : public ::google::protobuf::MessageLite {
 public:
  PBPathStatus();
  virtual ~PBPathStatus();

  PBPathStatus(const PBPathStatus& from);

  inline PBPathStatus& operator=(const PBPathStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PBPathStatus& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PBPathStatus* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PBPathStatus* other);

  // implements Message ----------------------------------------------

  PBPathStatus* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PBPathStatus& from);
  void MergeFrom(const PBPathStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef PBPathStatus_Sync Sync;
  static const Sync UNKNOWN = PBPathStatus_Sync_UNKNOWN;
  static const Sync OUT_SYNC = PBPathStatus_Sync_OUT_SYNC;
  static const Sync PARTIAL_SYNC = PBPathStatus_Sync_PARTIAL_SYNC;
  static const Sync IN_SYNC = PBPathStatus_Sync_IN_SYNC;
  static inline bool Sync_IsValid(int value) {
    return PBPathStatus_Sync_IsValid(value);
  }
  static const Sync Sync_MIN =
    PBPathStatus_Sync_Sync_MIN;
  static const Sync Sync_MAX =
    PBPathStatus_Sync_Sync_MAX;
  static const int Sync_ARRAYSIZE =
    PBPathStatus_Sync_Sync_ARRAYSIZE;

  typedef PBPathStatus_Flag Flag;
  static const Flag DOWNLOADING = PBPathStatus_Flag_DOWNLOADING;
  static const Flag UPLOADING = PBPathStatus_Flag_UPLOADING;
  static const Flag CONFLICT = PBPathStatus_Flag_CONFLICT;
  static inline bool Flag_IsValid(int value) {
    return PBPathStatus_Flag_IsValid(value);
  }
  static const Flag Flag_MIN =
    PBPathStatus_Flag_Flag_MIN;
  static const Flag Flag_MAX =
    PBPathStatus_Flag_Flag_MAX;
  static const int Flag_ARRAYSIZE =
    PBPathStatus_Flag_Flag_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // required .PBPathStatus.Sync sync = 1;
  inline bool has_sync() const;
  inline void clear_sync();
  static const int kSyncFieldNumber = 1;
  inline ::PBPathStatus_Sync sync() const;
  inline void set_sync(::PBPathStatus_Sync value);

  // required int32 flags = 2;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 2;
  inline ::google::protobuf::int32 flags() const;
  inline void set_flags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBPathStatus)
 private:
  inline void set_has_sync();
  inline void clear_has_sync();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int sync_;
  ::google::protobuf::int32 flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_path_5fstatus_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_path_5fstatus_2eproto();
  #endif
  friend void protobuf_AssignDesc_path_5fstatus_2eproto();
  friend void protobuf_ShutdownFile_path_5fstatus_2eproto();

  void InitAsDefaultInstance();
  static PBPathStatus* default_instance_;
};
// ===================================================================


// ===================================================================

// PBPathStatus

// required .PBPathStatus.Sync sync = 1;
inline bool PBPathStatus::has_sync() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPathStatus::set_has_sync() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPathStatus::clear_has_sync() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPathStatus::clear_sync() {
  sync_ = 0;
  clear_has_sync();
}
inline ::PBPathStatus_Sync PBPathStatus::sync() const {
  // @@protoc_insertion_point(field_get:PBPathStatus.sync)
  return static_cast< ::PBPathStatus_Sync >(sync_);
}
inline void PBPathStatus::set_sync(::PBPathStatus_Sync value) {
  assert(::PBPathStatus_Sync_IsValid(value));
  set_has_sync();
  sync_ = value;
  // @@protoc_insertion_point(field_set:PBPathStatus.sync)
}

// required int32 flags = 2;
inline bool PBPathStatus::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPathStatus::set_has_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPathStatus::clear_has_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPathStatus::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 PBPathStatus::flags() const {
  // @@protoc_insertion_point(field_get:PBPathStatus.flags)
  return flags_;
}
inline void PBPathStatus::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:PBPathStatus.flags)
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_path_5fstatus_2eproto__INCLUDED
