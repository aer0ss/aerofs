/*
 * Copyright (c) Air Computing Inc., 2013.
 */

package com.aerofs.sp.server.shared_folder_rules;

import com.aerofs.base.acl.Role;
import com.aerofs.base.acl.SubjectRolePair;
import com.aerofs.base.id.UserID;
import com.aerofs.sp.server.lib.SharedFolder;
import com.aerofs.sp.server.lib.user.User;
import com.google.common.collect.ImmutableCollection;

import javax.annotation.Nonnull;
import java.util.List;

/**
 * This interface is to support rules for shared folder operations. A "rule" is a piece of code that
 * may throw exceptions, modify system state, or any other operations the code feels like.
 */
public interface ISharedFolderRules
{
    /**
     * Call this method when inviting new users to shared folders.
     *
     * @param suppressAllWarnings whether to suppress warning exceptions (i.e. ExWarning*) generated by
     * shared folder rules. These exceptions are used by the UI to ask the user to confirm execution
     * of potentially harmful actions. Once confirmed, the UI will call the same method again with
     * this flag on.
     */
    @Nonnull ImmutableCollection<UserID> onInvitingUsers(User sharer, SharedFolder sf,
            List<SubjectRolePair> srps, boolean suppressAllWarnings) throws Exception;

    /**
     * Call this method when setting ACL for a user.
     *
     * @param suppressAllWarnings see the above method.
     */
    void onUpdatingACL(SharedFolder sf, User user, Role role, boolean suppressAllWarnings)
            throws Exception;
}
