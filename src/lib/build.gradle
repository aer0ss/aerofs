//-----------------------------------------------------------------------------
// Copyright (c) Air Computing Inc., 2013.
//-----------------------------------------------------------------------------

archivesBaseName = 'aerofs-lib'

sourceSets {
    main {
        java {
            srcDirs 'src', 'gen'
        }
    }
    testutil {
        java {
            srcDir 'test'
            include 'com/aerofs/testlib/**'
            include 'com/aerofs/defects/MockDefects.java'
            include 'com/aerofs/ritual_notification/MockRNSConfiguration.java'
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
    test {
        java {
            srcDir 'test'
            exclude 'com/aerofs/testlib/**'
            exclude 'com/aerofs/defects/MockDefects.java'
            exclude 'com/aerofs/ritual_notification/MockRNSConfiguration.java'
            compileClasspath += testutil.output
            runtimeClasspath += testutil.output
        }
    }
}

configurations {
    testutilCompile.extendsFrom compile
    testutilRuntime.extendsFrom testutilCompile

    testutil.extendsFrom testutilCompile

    testCompile.extendsFrom testutilCompile
    testRuntime.extendsFrom(testCompile, testutilRuntime)
}

dependencies {
    compile 'ch.qos.logback:logback-core:1.1.+'
    compile 'ch.qos.logback:logback-classic:1.1.+'
    compile 'commons-lang:commons-lang:2.6'
    compile 'com.aerofs:sqlite-jdbc:3.8.7'
    compile 'com.aerofs:jnotify:0.95'
    compile 'com.aerofs:aerofsd:0.1.0'
    compile name: 'guice-aerofs'
    compile name: 'guice-multibindings-aerofs'
    compile name: 'netty-native-socket'
    compile name: 'junixsocket-1.3'
    compile project(':src/base')
    testutilCompile project(path:':src/base', configuration:'testutil')
}

task testutilJar(type: Jar) {
    baseName 'aerofs-lib-testutil'
    from sourceSets.testutil.output
}

artifacts {
    testutil testutilJar
    archives testutilJar
}
