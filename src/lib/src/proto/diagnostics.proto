option java_package = "com.aerofs.proto";

//
// diagnostic message/type definitions
//
// generally these types require reflection enabled because
// they're also meant to be printed, formatted, or user-visible
// IOW: do _not_ use the lite-runtime to generate objects
//

//-----------------------------------------------------------------------------
//
// general diagnostics
// FIXME (AG): dumpstat and dumpstatmisc are slowly being subsumbed and superceded by the diagnostics messages below
//

message PBDumpStat {

    message PBTransport {
        optional string name = 1;
        optional uint64 bytes_in = 2;
        optional uint64 bytes_out = 3;
        repeated string connection = 4;
        optional string diagnosis = 5;
    }

    optional uint64 up_time = 1;

    repeated string enabled_transports = 2;

    repeated PBTransport transport = 3;

    optional string misc = 15;
}

//-----------------------------------------------------------------------------
//
// transport_id is one of {"t", "j", "z"} TODO (AG): consider using a protobuf enum

//-----------------------------------------------------------------------------
//
// device diagnostics (core's perception of devices)
//

message DeviceDiagnostics {
    repeated Store available_stores = 1;
    repeated Store unavailable_stores = 2;
    repeated Device devices = 3;
}

message Store {
    required uint64 store_index = 1;
    required bytes sid = 2;
    repeated bytes known_on_dids = 3;
}

message Device {
    required bytes did = 1;
    repeated Transport available_transports = 2; // if it's empty, then this device is 'offline' (probably a bug)
    optional string preferred_transport_id = 3;
}

message Transport {
    enum TransportState {
        POTENTIALLY_AVAILABLE = 1;
        PULSING = 2;
    }

    required string transport_id = 1;
    required TransportState state = 2;
    repeated uint64 known_store_indexes = 3;
}

//-----------------------------------------------------------------------------
//
// transport diagnostics messages and types
//

message TransportDiagnostics {
    optional TCPDiagnostics tcp_diagnostics = 1;
    optional JingleDiagnostics jingle_diagnostics = 2;
    optional ZephyrDiagnostics zephyr_diagnostics = 3;
}

message TCPDiagnostics {
    required PBInetSocketAddress listening_address = 1;
    repeated TCPDevice reachable_devices = 2;
}

message TCPDevice {
    required bytes did = 1;
    required PBInetSocketAddress device_address = 2;
}

message JingleDiagnostics {
    required ServerStatus xmpp_server = 1;
    required ServerStatus stun_server = 2;
    repeated JingleDevice reachable_devices = 3;
}

message JingleDevice {
    required bytes did = 1;
}

message ZephyrDiagnostics {
    required ServerStatus xmpp_server = 1;
    required ServerStatus zephyr_server = 2;
    repeated ZephyrDevice reachable_devices = 3;
}

message ZephyrDevice {
    required bytes did = 1;
}

message ServerStatus {
    required PBInetSocketAddress server_address = 1;
    optional bool reachable = 2;
    optional string reachability_error = 3;
}

message PBInetSocketAddress {
    optional string host = 1;
    optional string resolved_host = 2;
    optional uint32 port = 3;
}

//-----------------------------------------------------------------------------
//
// transfer statistics
//

message TransferDiagnostics {
    repeated TransportTransfer transfer = 1;
    optional uint64 total_bytes_transferred = 2;
    optional uint64 total_bytes_errored = 3;
}

message TransportTransfer {
    required string transport_id = 1;
    optional uint64 bytes_transferred = 2;
    optional uint64 bytes_errored = 3;
}