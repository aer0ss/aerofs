package com.aerofs.proto;

import "common.proto";
import "path_status.proto";

// remove reflection
option optimize_for = LITE_RUNTIME;

message PBNotification {

    enum Type {
        TRANSFER = 0;
        BAD_CREDENTIAL = 1;
        PATH_STATUS = 2;
        CLEAR_STATUS = 3;               // clear any cached path status
        CONFLICT_COUNT = 4;             // number of files with conflicts changed
        SHARED_FOLDER_JOIN = 5;         // joined a shared folder
        SHARED_FOLDER_KICKOUT = 6;      // kicked out of a shared folder
        INDEXING_PROGRESS = 7;
        SHARED_FOLDER_PENDING = 8;      // list of pending roots changed
        ROOTS_CHANGED = 9;              // roots changed (added/removed/moved)
        CLEAR_TRANSFERS = 10;           // clear any cached transfer state
    }

    required Type type = 1;

    optional PBTransferEvent transfer = 2;  // for DOWNLOAD or UPLOAD
    optional PBPathStatusEvent path_status = 4;
    optional int32 conflict_count = 5;          // number of files with existing conflicts
    optional PBPath path = 6;                   // path of shared folder joined/left
    optional PBIndexingProgress indexing_progress = 7;
}

enum PBTransportMethod {
    UNKNOWN = -1; // this indicates there's an error somewhere
    // n.b. NOT_AVAILABLE MUST be 0
    NOT_AVAILABLE = 0; // this indicates that the method is not set or not available
    TCP = 1;
    JINGLE = 2;
    ZEPHYR = 3;
}

message PBTransferEvent {
    required bool upload = 1;
    required PBSOCID socid = 2;
    optional PBPath path = 3;   // absent if unknown
    required bytes device_id = 4;
    required uint64 done = 5;   // done == total means completion,
                                // either failure or success
    required uint64 total = 6;
    optional bool failed = 7;   // indicate failure for completed transfer

    // the name to display for the device we are transfering file from/to
    //   it is the device name if the local user owns the device,
    //   else it is the username of the owner of the device.
    // it is optional and the UI should use default label if the display
    //   is not provided.
    optional string display_name = 8;

    // the transport method used for a particular transfer
    optional PBTransportMethod transport = 9;

}

message PBPathStatusEvent {
    repeated PBPath path = 1;
    repeated PBPathStatus status = 2;
}

message PBIndexingProgress {
    required int32 files = 1;
    required int32 folders = 2;
}

////////
// non-message data structures

message PBSOCID {
    required int32 sidx = 1;
    required bytes oid = 2;
    required int32 cid = 3;
}
