//-----------------------------------------------------------------------------
// Copyright (c) Air Computing Inc., 2013.
//-----------------------------------------------------------------------------

base {
    archivesName = 'aero-bifrost'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'resources'
            include 'db/**' // flyway db migration scripts
        }
    }
    testutil {
        java {
            srcDir 'src/test/java'
            include 'com/aerofs/bifrost/server/BifrostTest.java'
            include 'com/aerofs/bifrost/server/Mock*'
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
    test {
        java {
            srcDir 'src/test/java'
            exclude 'com/aerofs/bifrost/server/BifrostTest.java'
            exclude 'com/aerofs/bifrost/server/Mock*'
            compileClasspath += testutil.output
            runtimeClasspath += testutil.output
        }
    }
}

configurations {
    testutilImplementation.extendsFrom api
    testutilImplementation.extendsFrom implementation
    testutilRuntimeOnly.extendsFrom testutilImplementation

    testutil.extendsFrom testutilImplementation

    testImplementation.extendsFrom testutilImplementation
    testRuntimeOnly.extendsFrom(testImplementation, testutilRuntimeOnly)
}

dependencies {
    api 'com.lambdaworks:scrypt:1.4.0'
    api 'commons-codec:commons-codec:1.4'
    api 'commons-net:commons-net:3.3'
    api 'commons-validator:commons-validator:1.4.1'
    api 'org.hibernate:hibernate-core:4.1.9.Final'
    api 'org.hibernate:hibernate-validator:4.3.0.Final'
    api project(':src:lib')
    api project(':src:libservlet')
    api project(':src:restless')
    api project(':src:rest-api')
    api project(path: ':src:aero-auth', configuration:'client')
    runtimeOnly 'mysql:mysql-connector-java:5.1.39'
    testutilImplementation 'com.jayway.restassured:rest-assured:2.8.0'
    testutilImplementation project(path: ':src:lib', configuration: 'testutil')
}

jar {
    manifest.attributes(
        'Class-Path': configurations.runtimeClasspath.files.collect { it.name }.join(' '),
    )
}

task testutilJar(type: Jar) {
    archiveBaseName = 'aerofs-bifrost-testutil'
    from sourceSets.testutil.output
}

artifacts {
    testutil testutilJar
    archives testutilJar
}
