option java_package = "com.aerofs.proto";
option optimize_for = LITE_RUNTIME;

import "path_status.proto";

/**
 * This file defines communication between the shell extension and the GUI process.
 * Note that all the path variables defined in this file should be absolute paths.
 */

/**
 * Calls from the shell extension to the GUI. The GUI should not reply anything to those calls.
 */
message ShellextCall {

    enum Type {
        GREETING = 0;

        // Dialog display triggers
        SHARE_FOLDER = 1;
        SYNC_STATUS = 2;
        VERSION_HISTORY = 3;
        CONFLICT_RESOLUTION = 5;

        // Data queries (answer comes through notifications)
        GET_PATH_STATUS = 4;
    }
    required Type type = 1;

    optional GreetingCall greeting = 2;
    optional ShareFolderCall share_folder = 3;
    optional SyncStatusCall sync_status = 4;
    optional VersionHistoryCall version_history = 5;
    optional GetPathStatusCall get_path_status = 6;
    optional ConflictResolutionCall conflict_resolution = 7;
}

message GreetingCall {
    required int32 protocol_version = 1;
}

message ShareFolderCall {
    // absolute path to the folder
    required string path = 1;
}

message SyncStatusCall {
    // absolute path to the file / folder
    required string path = 1;
}

message VersionHistoryCall {
    // absolute path to the file / folder
    required string path = 1;
}

message ConflictResolutionCall {
    // absolute path to the file / folder
    required string path = 1;
}

message GetPathStatusCall {
    // absolute path for which status is needed
    required string path = 1;
}

/**
 * Notifications sent from the GUI to the shell extension
 */
message ShellextNotification {

    enum Type {
        // Sent upon connection and when the root anchor moves
        ROOT_ANCHOR = 1;

        // Sent when the status of a file/folder changes, so that the
        // extension can display the appropriate overlay icon.
        PATH_STATUS = 2;

        // Sent when the daemon is restarted, to clear all cached
        // statuses.
        CLEAR_STATUS_CACHE = 3;
    }
    required Type type = 1;
    optional RootAnchorNotification root_anchor = 2;
    optional PathStatusNotification path_status = 3;
}

message RootAnchorNotification {
    // absolute path to the root anchor. Must NOT include a trailing separator
    required string path = 1;
    optional string user = 2;
}

message PathStatusNotification {
    // Absolute path of the file that changed
    required string path = 1;
    required PBPathStatus status = 2;
}