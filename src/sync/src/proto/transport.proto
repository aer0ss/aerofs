package com.aerofs.proto;

//removed reflection. this makes obfuscation possible
option optimize_for = LITE_RUNTIME;

message PBTPHeader {

    enum Type {
        DATAGRAM = 0;
        STREAM = 13;

        // TCP control messages
        TCP_PING = 1;
        TCP_PONG = 2;
        TCP_GO_OFFLINE = 4;
        TCP_NOP = 10;

        // XMPP relay information
        ZEPHYR_CANDIDATE_INFO = 8;

        // Messages to maintain link liveness
        HEARTBEAT_CALL = 14;
        HEARTBEAT_REPLY = 15;
    }

    required Type type = 1;

    // only in maxcast payload
    optional uint32 mcast_id = 3;

    // only for stream messages
    optional PBStream stream = 4;

    optional PBTCPPong tcp_pong = 5;

    // only in IP multicast
    optional bytes tcp_multicast_device_id  = 7;

    // only in XMPP relay information
    optional PBZephyrCandidateInfo zephyr_info = 9;

    // only in TRANSPORT_CHECK_PULSE_* messages
    optional PBCheckPulse check_pulse = 10;

    // only for HEARTBEAT messages
    optional PBHeartbeat heartbeat = 11;
}

message PBStream {
    enum Type {
        PAYLOAD = 0;
        BEGIN_STREAM = 1;
        TX_ABORT_STREAM = 2;
        RX_ABORT_STREAM = 3;
        PAUSE_STREAM = 4;
        RESUME_STREAM = 5;
    }

    enum InvalidationReason {
        UPDATE_IN_PROGRESS = 0;
        ENDED = 1;
        STREAM_NOT_FOUND = 2;
        INTERNAL_ERROR = 3;
        CHOKE_ERROR = 5;
        OUT_OF_ORDER = 6;       // a chunk is out of order
        STORE_NOT_FOUND = 7;
    }

    required Type type = 1;
    required uint32 stream_id = 2;
    optional uint32 seq_num = 3;

    optional InvalidationReason reason = 4;
}

message PBZephyrCandidateInfo {
    required int32 source_zephyr_id = 1;
    optional int32 destination_zephyr_id = 2;
}

////////
// TCP specific messages

// the bloom filter containing all store ids of the sending device.
message PBTCPStoresFilter {
    // the sequence is to reduce duplicate notifications in multicast
    required uint32 sequence = 1;
    required bytes filter = 2;
}

message PBTCPPong {
    required uint32 unicast_listening_port = 1;
    required PBTCPStoresFilter filter = 2;
}

message PBCheckPulse {
    required int32 pulse_id = 1;
}

message PBHeartbeat {
    required int32 heartbeat_id = 1;
    required uint64 sent_time = 2;
}
