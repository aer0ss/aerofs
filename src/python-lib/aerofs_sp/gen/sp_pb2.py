# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sp.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
import rpc_service_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_pb2
import cmd_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='sp.proto',
  package='sp',
  serialized_pb=_b('\n\x08sp.proto\x12\x02sp\x1a\x0c\x63ommon.proto\x1a\tcmd.proto\"U\n\x1cSetDeviceOSFamilyAndNameCall\x12\x11\n\tdevice_id\x18\x01 \x02(\x0c\x12\x11\n\tos_family\x18\x02 \x02(\t\x12\x0f\n\x07os_name\x18\x03 \x02(\t\":\n\'DeleteOrganizationInvitationForUserCall\x12\x0f\n\x07user_id\x18\x01 \x02(\t\"4\n!ListOrganizationInvitedUsersReply\x12\x0f\n\x07user_id\x18\x01 \x03(\t\"b\n\x12SignUpWithCodeCall\x12\x13\n\x0bsignup_code\x18\x01 \x02(\t\x12\x10\n\x08password\x18\x03 \x02(\x0c\x12\x12\n\nfirst_name\x18\x04 \x02(\t\x12\x11\n\tlast_name\x18\x05 \x02(\t\"<\n\x13SignUpWithCodeReply\x12\x0e\n\x06org_id\x18\x01 \x02(\t\x12\x15\n\rexisting_team\x18\x02 \x02(\x08\"%\n\x15ResolveSignUpCodeCall\x12\x0c\n\x04\x63ode\x18\x01 \x02(\t\"/\n\x16ResolveSignUpCodeReply\x12\x15\n\remail_address\x18\x01 \x02(\t\"(\n\x19VerifyBatchSignUpCodeCall\x12\x0b\n\x03\x62sc\x18\x01 \x02(\t\",\n\x13RequestToSignUpCall\x12\x15\n\remail_address\x18\x01 \x02(\t\"1\n\x18InviteToOrganizationCall\x12\x15\n\remail_address\x18\x01 \x02(\t\":\n\x19InviteToOrganizationReply\x12\x1d\n\x0flocally_managed\x18\x01 \x01(\x08:\x04true\";\n AcceptOrganizationInvitationCall\x12\x17\n\x0forganization_id\x18\x01 \x02(\x05\";\n DeleteOrganizationInvitationCall\x12\x17\n\x0forganization_id\x18\x01 \x02(\x05\"\xb5\x01\n\x0fShareFolderCall\x12\x13\n\x0b\x66older_name\x18\x03 \x02(\t\x12\x10\n\x08share_id\x18\x02 \x02(\x0c\x12\x32\n\x13subject_permissions\x18\x01 \x03(\x0b\x32\x15.PBSubjectPermissions\x12\x0c\n\x04note\x18\x04 \x01(\t\x12\x10\n\x08\x65xternal\x18\x05 \x01(\x08\x12\'\n\x1fsuppress_sharing_rules_warnings\x18\x06 \x01(\x08\";\n\x14JoinSharedFolderCall\x12\x11\n\tshared_id\x18\x01 \x02(\x0c\x12\x10\n\x08\x65xternal\x18\x02 \x01(\x08\"+\n\x16IgnoreSharedFolderCall\x12\x11\n\tshared_id\x18\x01 \x02(\x0c\"*\n\x15LeaveSharedFolderCall\x12\x11\n\tshared_id\x18\x01 \x02(\x0c\"@\n\x17SetSharedFolderNameCall\x12\x10\n\x08share_id\x18\x01 \x02(\x0c\x12\x13\n\x0b\x66older_name\x18\x02 \x02(\t\"L\n!ListPendingFolderInvitationsReply\x12\'\n\ninvitation\x18\x01 \x03(\x0b\x32\x13.PBFolderInvitation\".\n\rEmailUserCall\x12\x0f\n\x07subject\x18\x01 \x02(\t\x12\x0c\n\x04\x62ody\x18\x02 \x02(\t\"+\n\x16GetUserPreferencesCall\x12\x11\n\tdevice_id\x18\x01 \x01(\x0c\"\x87\x01\n\x17GetUserPreferencesReply\x12\x12\n\nfirst_name\x18\x01 \x02(\t\x12\x11\n\tlast_name\x18\x02 \x02(\t\x12\x13\n\x0b\x64\x65vice_name\x18\x03 \x01(\t\x12\x13\n\x0bsignup_date\x18\x04 \x01(\x04\x12\x1b\n\x13two_factor_enforced\x18\x05 \x01(\x08\"*\n\x19GetUserSettingsTokenReply\x12\r\n\x05token\x18\x01 \x01(\t\")\n\x18SetUserSettingsTokenCall\x12\r\n\x05token\x18\x01 \x02(\t\"x\n\x16SetUserPreferencesCall\x12\x0f\n\x07user_id\x18\x01 \x02(\t\x12\x12\n\nfirst_name\x18\x02 \x01(\t\x12\x11\n\tlast_name\x18\x03 \x01(\t\x12\x11\n\tdevice_id\x18\x04 \x01(\x0c\x12\x13\n\x0b\x64\x65vice_name\x18\x05 \x01(\t\"\x1b\n\nGetACLCall\x12\r\n\x05\x65poch\x18\x01 \x02(\x04\"\xbf\x01\n\x0bGetACLReply\x12-\n\tstore_acl\x18\x01 \x03(\x0b\x32\x1a.sp.GetACLReply.PBStoreACL\x12\r\n\x05\x65poch\x18\x02 \x02(\x04\x1ar\n\nPBStoreACL\x12\x10\n\x08store_id\x18\x01 \x02(\x0c\x12\x32\n\x13subject_permissions\x18\x02 \x03(\x0b\x32\x15.PBSubjectPermissions\x12\x10\n\x08\x65xternal\x18\x03 \x02(\x08\x12\x0c\n\x04name\x18\x04 \x02(\t\"\x80\x01\n\rUpdateACLCall\x12\x10\n\x08store_id\x18\x01 \x02(\x0c\x12\x0f\n\x07subject\x18\x02 \x02(\t\x12#\n\x0bpermissions\x18\x03 \x02(\x0b\x32\x0e.PBPermissions\x12\'\n\x1fsuppress_sharing_rules_warnings\x18\x04 \x01(\x08\"2\n\rDeleteACLCall\x12\x10\n\x08store_id\x18\x01 \x02(\x0c\x12\x0f\n\x07subject\x18\x02 \x02(\t\",\n\x0fVerifyEmailCall\x12\x19\n\x11verification_code\x18\x01 \x02(\t\"&\n\x18GetTeamServerUserIDReply\x12\n\n\x02id\x18\x01 \x02(\t\"\xe7\x01\n\x12RegisterDeviceCall\x12\x11\n\tdevice_id\x18\x01 \x02(\x0c\x12\x0b\n\x03\x63sr\x18\x02 \x02(\x0c\x12\x11\n\tos_family\x18\x03 \x02(\t\x12\x0f\n\x07os_name\x18\x04 \x02(\t\x12\x13\n\x0b\x64\x65vice_name\x18\x05 \x02(\t\x12\x34\n\ninterfaces\x18\x06 \x03(\x0b\x32 .sp.RegisterDeviceCall.Interface\x12\r\n\x05token\x18\x07 \x01(\t\x1a\x33\n\tInterface\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x0b\n\x03mac\x18\x02 \x02(\t\x12\x0b\n\x03ips\x18\x03 \x03(\t\"#\n\x13RegisterDeviceReply\x12\x0c\n\x04\x63\x65rt\x18\x01 \x02(\t\"Y\n\x1bListOrganizationMembersCall\x12\x13\n\x0bmax_results\x18\x01 \x02(\r\x12\x0e\n\x06offset\x18\x02 \x02(\r\x12\x15\n\rsearch_string\x18\x03 \x01(\t\"\xd1\x01\n\x1cListOrganizationMembersReply\x12G\n\x0euser_and_level\x18\x01 \x03(\x0b\x32/.sp.ListOrganizationMembersReply.PBUserAndLevel\x12\x13\n\x0btotal_count\x18\x02 \x02(\r\x1aS\n\x0ePBUserAndLevel\x12\x18\n\x04user\x18\x01 \x02(\x0b\x32\n.sp.PBUser\x12\'\n\x05level\x18\x02 \x02(\x0e\x32\x18.sp.PBAuthorizationLevel\"(\n\x16GetOrganizationIDReply\x12\x0e\n\x06org_id\x18\x01 \x02(\t\"E\n\x1aGetAuthorizationLevelReply\x12\'\n\x05level\x18\x01 \x02(\x0e\x32\x18.sp.PBAuthorizationLevel\"`\n\x06PBUser\x12\x12\n\nuser_email\x18\x01 \x02(\t\x12\x12\n\nfirst_name\x18\x02 \x02(\t\x12\x11\n\tlast_name\x18\x03 \x02(\t\x12\x1b\n\x13two_factor_enforced\x18\x04 \x01(\x08\"L\n\x07PBGroup\x12\x10\n\x08group_id\x18\x01 \x02(\r\x12\x13\n\x0b\x63ommon_name\x18\x02 \x02(\t\x12\x1a\n\x12\x65xternally_managed\x18\x03 \x02(\x08\"]\n\x19SetAuthorizationLevelCall\x12\x12\n\nuser_email\x18\x01 \x02(\t\x12,\n\nauth_level\x18\x02 \x02(\x0e\x32\x18.sp.PBAuthorizationLevel\"0\n\x1aSendPasswordResetEmailCall\x12\x12\n\nuser_email\x18\x01 \x02(\t\"J\n\x11ResetPasswordCall\x12\x1c\n\x14password_reset_token\x18\x01 \x02(\t\x12\x17\n\x0fnew_credentials\x18\x02 \x02(\x0c\"F\n\x12\x43hangePasswordCall\x12\x17\n\x0fold_credentials\x18\x01 \x02(\x0c\x12\x17\n\x0fnew_credentials\x18\x02 \x02(\x0c\"#\n\x0eGetUserCRLCall\x12\x11\n\tcrl_epoch\x18\x01 \x02(\x04\"4\n\x10UnlinkDeviceCall\x12\x11\n\tdevice_id\x18\x01 \x02(\x0c\x12\r\n\x05\x65rase\x18\x02 \x02(\x08\"&\n\x11GetDeviceInfoCall\x12\x11\n\tdevice_id\x18\x01 \x03(\x0c\"\x8e\x01\n\x12GetDeviceInfoReply\x12\x38\n\x0b\x64\x65vice_info\x18\x01 \x03(\x0b\x32#.sp.GetDeviceInfoReply.PBDeviceInfo\x1a>\n\x0cPBDeviceInfo\x12\x19\n\x05owner\x18\x01 \x01(\x0b\x32\n.sp.PBUser\x12\x13\n\x0b\x64\x65vice_name\x18\x02 \x01(\t\"&\n\x13ListUserDevicesCall\x12\x0f\n\x07user_id\x18\x01 \x02(\t\"\xa1\x01\n\x14ListUserDevicesReply\x12\x31\n\x06\x64\x65vice\x18\x01 \x03(\x0b\x32!.sp.ListUserDevicesReply.PBDevice\x1aV\n\x08PBDevice\x12\x11\n\tdevice_id\x18\x01 \x02(\x0c\x12\x13\n\x0b\x64\x65vice_name\x18\x02 \x02(\t\x12\x11\n\tos_family\x18\x03 \x02(\t\x12\x0f\n\x07os_name\x18\x04 \x02(\t\"_\n!ListOrganizationSharedFoldersCall\x12\x13\n\x0bmax_results\x18\x01 \x02(\r\x12\x0e\n\x06offset\x18\x02 \x02(\r\x12\x15\n\rsearch_string\x18\x03 \x01(\t\"d\n\"ListOrganizationSharedFoldersReply\x12)\n\rshared_folder\x18\x01 \x03(\x0b\x32\x12.sp.PBSharedFolder\x12\x13\n\x0btotal_count\x18\x02 \x02(\r\"n\n\x1fListUserJoinedSharedFoldersCall\x12\x0f\n\x07user_id\x18\x01 \x02(\t\x12\x13\n\x0bmax_results\x18\x02 \x02(\r\x12\x0e\n\x06offset\x18\x03 \x02(\r\x12\x15\n\rsearch_string\x18\x04 \x01(\t\"\x94\x04\n\x0ePBSharedFolder\x12\x10\n\x08store_id\x18\x01 \x02(\x0c\x12\x0c\n\x04name\x18\x02 \x02(\t\x12\x15\n\rowned_by_team\x18\x03 \x02(\x08\x12P\n\x1auser_permissions_and_state\x18\x04 \x03(\x0b\x32,.sp.PBSharedFolder.PBUserPermissionsAndState\x12@\n\x11group_permissions\x18\x05 \x03(\x0b\x32%.sp.PBSharedFolder.PBGroupPermissions\x12[\n%requested_users_permissions_and_state\x18\x06 \x01(\x0b\x32,.sp.PBSharedFolder.PBUserPermissionsAndState\x1a\x82\x01\n\x19PBUserPermissionsAndState\x12\x18\n\x04user\x18\x01 \x02(\x0b\x32\n.sp.PBUser\x12#\n\x0bpermissions\x18\x02 \x02(\x0b\x32\x0e.PBPermissions\x12&\n\x05state\x18\x03 \x02(\x0e\x32\x17.sp.PBSharedFolderState\x1aU\n\x12PBGroupPermissions\x12\x1a\n\x05group\x18\x01 \x02(\x0b\x32\x0b.sp.PBGroup\x12#\n\x0bpermissions\x18\x02 \x02(\x0b\x32\x0e.PBPermissions\"\xde\x01\n\x1fGetOrganizationInvitationsReply\x12\\\n\x18organization_invitations\x18\x02 \x03(\x0b\x32:.sp.GetOrganizationInvitationsReply.OrganizationInvitation\x1a]\n\x16OrganizationInvitation\x12\x0f\n\x07inviter\x18\x01 \x02(\t\x12\x19\n\x11organization_name\x18\x02 \x02(\t\x12\x17\n\x0forganization_id\x18\x03 \x02(\x05\"\xc0\x01\n\x16GetOrgPreferencesReply\x12\x19\n\x11organization_name\x18\x01 \x02(\t\x12\"\n\x1aorganization_contact_phone\x18\x02 \x02(\t\x12.\n\x05level\x18\x03 \x02(\x0e\x32\x1f.sp.PBTwoFactorEnforcementLevel\x12\x1a\n\x12license_seats_used\x18\x04 \x02(\x05\x12\x1b\n\x13\x65xternal_user_count\x18\x05 \x02(\x05\"M\n\x15SetOrgPreferencesCall\x12\x10\n\x08org_name\x18\x01 \x01(\t\x12\"\n\x1aorganization_contact_phone\x18\x02 \x01(\t\"4\n\x17SetUnsubscribeEmailCall\x12\x19\n\x11unsubscribe_token\x18\x01 \x02(\t\",\n\x18GetUnsubscribeEmailReply\x12\x10\n\x08\x65mail_id\x18\x01 \x02(\t\"3\n\nPBFullName\x12\x12\n\nfirst_name\x18\x01 \x02(\t\x12\x11\n\tlast_name\x18\x02 \x02(\t\",\n\x17GetCommandQueueHeadCall\x12\x11\n\tdevice_id\x18\x01 \x02(\x0c\"I\n\x18GetCommandQueueHeadReply\x12\x19\n\x07\x63ommand\x18\x01 \x01(\x0b\x32\x08.Command\x12\x12\n\nqueue_size\x18\x02 \x02(\x03\"J\n\x17\x41\x63kCommandQueueHeadCall\x12\x11\n\tdevice_id\x18\x01 \x02(\x0c\x12\r\n\x05\x65poch\x18\x02 \x02(\x04\x12\r\n\x05\x65rror\x18\x03 \x02(\x08\"I\n\x18\x41\x63kCommandQueueHeadReply\x12\x19\n\x07\x63ommand\x18\x01 \x01(\x0b\x32\x08.Command\x12\x12\n\nqueue_size\x18\x02 \x02(\x03\"5\n\x13RecertifyDeviceCall\x12\x11\n\tdevice_id\x18\x01 \x02(\x0c\x12\x0b\n\x03\x63sr\x18\x02 \x02(\x0c\"$\n\x14RecertifyDeviceReply\x12\x0c\n\x04\x63\x65rt\x18\x01 \x02(\t\"0\n\x10SignInDeviceCall\x12\x0f\n\x07user_id\x18\x01 \x02(\t\x12\x0b\n\x03\x64id\x18\x02 \x02(\x0c\"5\n\x0eSignInUserCall\x12\x0f\n\x07user_id\x18\x01 \x02(\t\x12\x12\n\ncredential\x18\x02 \x02(\x0c\"O\n\x0fSignInUserReply\x12\x1a\n\x12need_second_factor\x18\x01 \x01(\x08\x12 \n\x18need_second_factor_setup\x18\x02 \x01(\x08\"C\n\x14\x45xtAuthSessionNonces\x12\x14\n\x0csessionNonce\x18\x01 \x02(\t\x12\x15\n\rdelegateNonce\x18\x02 \x02(\t\"+\n\x13\x45xtAuthSessionQuery\x12\x14\n\x0csessionNonce\x18\x01 \x02(\t\"\x8d\x01\n\x18\x45xtAuthSessionAttributes\x12\x0e\n\x06userId\x18\x01 \x01(\t\x12\x11\n\tfirstName\x18\x02 \x01(\t\x12\x10\n\x08lastName\x18\x03 \x01(\t\x12\x1a\n\x12need_second_factor\x18\x04 \x01(\x08\x12 \n\x18need_second_factor_setup\x18\x05 \x01(\x08\"&\n\x10MobileAccessCode\x12\x12\n\naccessCode\x18\x01 \x01(\t\"@\n\x16\x41uthorizeAPIClientCall\x12\x12\n\naccessCode\x18\x01 \x01(\t\x12\x12\n\ndeviceName\x18\x02 \x01(\t\"L\n\x17\x41uthorizeAPIClientReply\x12\x0e\n\x06userId\x18\x01 \x01(\t\x12\r\n\x05orgId\x18\x02 \x01(\t\x12\x12\n\nisOrgAdmin\x18\x03 \x01(\x08\")\n\x15ListSharedFoldersCall\x12\x10\n\x08store_id\x18\x01 \x03(\x0c\"X\n\x16ListSharedFoldersReply\x12)\n\rshared_folder\x18\x01 \x03(\x0b\x32\x12.sp.PBSharedFolder\x12\x13\n\x0btotal_count\x18\x02 \x01(\r\"<\n\x12\x44\x65\x61\x63tivateUserCall\x12\x0f\n\x07user_id\x18\x01 \x02(\t\x12\x15\n\rerase_devices\x18\x02 \x02(\x08\",\n\x16\x41\x64\x64UserToWhitelistCall\x12\x12\n\nuser_email\x18\x01 \x02(\t\"1\n\x1bRemoveUserFromWhitelistCall\x12\x12\n\nuser_email\x18\x01 \x02(\t\"5\n\x19ListWhitelistedUsersReply\x12\x18\n\x04user\x18\x01 \x03(\x0b\x32\n.sp.PBUser\"q\n\x0e\x43heckQuotaCall\x12.\n\x05store\x18\x01 \x03(\x0b\x32\x1f.sp.CheckQuotaCall.PBStoreUsage\x1a/\n\x0cPBStoreUsage\x12\x0b\n\x03sid\x18\x01 \x02(\x0c\x12\x12\n\nbytes_used\x18\x02 \x02(\x04\"\x88\x01\n\x0f\x43heckQuotaReply\x12\x37\n\x05store\x18\x01 \x03(\x0b\x32(.sp.CheckQuotaReply.PBStoreShouldCollect\x1a<\n\x14PBStoreShouldCollect\x12\x0b\n\x03sid\x18\x01 \x02(\x0c\x12\x17\n\x0f\x63ollect_content\x18\x02 \x02(\x08\"\x1e\n\rGetQuotaReply\x12\r\n\x05quota\x18\x01 \x01(\x04\"\x1d\n\x0cSetQuotaCall\x12\r\n\x05quota\x18\x01 \x02(\x04\"\x1d\n\rCreateUrlCall\x12\x0c\n\x04soid\x18\x01 \x02(\t\"\x9b\x01\n\x0fPBRestObjectUrl\x12\x0b\n\x03key\x18\x01 \x02(\t\x12\x0c\n\x04soid\x18\x02 \x02(\t\x12\r\n\x05token\x18\x03 \x02(\t\x12\x12\n\ncreated_by\x18\x04 \x02(\t\x12\x0f\n\x07\x65xpires\x18\x05 \x01(\x04\x12\x1b\n\x0chas_password\x18\x06 \x01(\x08:\x05\x66\x61lse\x12\x1c\n\rrequire_login\x18\x07 \x01(\x08:\x05\x66\x61lse\"7\n\x0e\x43reateUrlReply\x12%\n\x08url_info\x18\x01 \x02(\x0b\x32\x13.sp.PBRestObjectUrl\"1\n\x11SetUrlExpiresCall\x12\x0b\n\x03key\x18\x01 \x02(\t\x12\x0f\n\x07\x65xpires\x18\x02 \x02(\x04\"#\n\x14RemoveUrlExpiresCall\x12\x0b\n\x03key\x18\x01 \x02(\t\"/\n\x0eGetUrlInfoCall\x12\x0b\n\x03key\x18\x01 \x02(\t\x12\x10\n\x08password\x18\x02 \x01(\x0c\"8\n\x0fGetUrlInfoReply\x12%\n\x08url_info\x18\x01 \x02(\x0b\x32\x13.sp.PBRestObjectUrl\"\x1c\n\rRemoveUrlCall\x12\x0b\n\x03key\x18\x01 \x02(\t\"3\n\x12SetUrlPasswordCall\x12\x0b\n\x03key\x18\x01 \x02(\t\x12\x10\n\x08password\x18\x02 \x02(\x0c\"$\n\x15RemoveUrlPasswordCall\x12\x0b\n\x03key\x18\x01 \x02(\t\"8\n\x17ValidateUrlPasswordCall\x12\x0b\n\x03key\x18\x01 \x02(\t\x12\x10\n\x08password\x18\x02 \x02(\x0c\",\n\x17\x44\x65stroySharedFolderCall\x12\x11\n\tshared_id\x18\x01 \x02(\x0c\"i\n\x1bSendPriorityDefectEmailCall\x12\x11\n\tdefect_id\x18\x01 \x02(\t\x12\x15\n\rcontact_email\x18\x02 \x02(\t\x12\x0f\n\x07subject\x18\x03 \x02(\t\x12\x0f\n\x07message\x18\x04 \x02(\t\"\x14\n\x12SetupTwoFactorCall\"%\n\x13SetupTwoFactorReply\x12\x0e\n\x06secret\x18\x01 \x02(\x0c\"U\n\x1bSetTwoFactorEnforcementCall\x12\x0f\n\x07\x65nforce\x18\x01 \x02(\x08\x12\x14\n\x0c\x63urrent_code\x18\x02 \x01(\x05\x12\x0f\n\x07user_id\x18\x03 \x01(\t\")\n\x14ListUrlsForStoreCall\x12\x11\n\tshared_id\x18\x01 \x02(\x0c\"9\n\x15ListUrlsForStoreReply\x12 \n\x03url\x18\x01 \x03(\x0b\x32\x13.sp.PBRestObjectUrl\"/\n\x17ProvideSecondFactorCall\x12\x14\n\x0c\x63urrent_code\x18\x01 \x02(\x05\",\n\x15ProvideBackupCodeCall\x12\x13\n\x0b\x62\x61\x63kup_code\x18\x01 \x02(\t\"w\n\x13GetBackupCodesReply\x12\x31\n\x05\x63odes\x18\x01 \x03(\x0b\x32\".sp.GetBackupCodesReply.BackupCode\x1a-\n\nBackupCode\x12\x0c\n\x04\x63ode\x18\x01 \x02(\t\x12\x11\n\tdate_used\x18\x02 \x01(\x04\"&\n\x0f\x43reateGroupCall\x12\x13\n\x0b\x63ommon_name\x18\x01 \x02(\t\"$\n\x10\x43reateGroupReply\x12\x10\n\x08group_id\x18\x01 \x02(\r\"?\n\x16SetGroupCommonNameCall\x12\x10\n\x08group_id\x18\x01 \x02(\r\x12\x13\n\x0b\x63ommon_name\x18\x02 \x02(\t\"<\n\x13\x41\x64\x64GroupMembersCall\x12\x10\n\x08group_id\x18\x01 \x02(\r\x12\x13\n\x0buser_emails\x18\x02 \x03(\t\"?\n\x16RemoveGroupMembersCall\x12\x10\n\x08group_id\x18\x01 \x02(\r\x12\x13\n\x0buser_emails\x18\x02 \x03(\t\"#\n\x0f\x44\x65leteGroupCall\x12\x10\n\x08group_id\x18\x01 \x02(\r\"L\n\x0eListGroupsCall\x12\x13\n\x0bmax_results\x18\x01 \x02(\r\x12\x0e\n\x06offset\x18\x02 \x02(\r\x12\x15\n\rsearch_prefix\x18\x03 \x01(\t\"C\n\x0fListGroupsReply\x12\x1b\n\x06groups\x18\x01 \x03(\x0b\x32\x0b.sp.PBGroup\x12\x13\n\x0btotal_count\x18\x02 \x02(\r\"(\n\x14ListGroupMembersCall\x12\x10\n\x08group_id\x18\x01 \x02(\r\"2\n\x15ListGroupMembersReply\x12\x19\n\x05users\x18\x01 \x03(\x0b\x32\n.sp.PBUser\"R\n SetTwoFactorSetupEnforcementCall\x12.\n\x05level\x18\x01 \x02(\x0e\x32\x1f.sp.PBTwoFactorEnforcementLevel\"S\n!GetTwoFactorSetupEnforcementReply\x12.\n\x05level\x18\x01 \x02(\x0e\x32\x1f.sp.PBTwoFactorEnforcementLevel\"G\n!ListGroupStatusInSharedFolderCall\x12\x10\n\x08group_id\x18\x01 \x02(\r\x12\x10\n\x08share_id\x18\x02 \x02(\x0c\"\xc7\x01\n\"ListGroupStatusInSharedFolderReply\x12M\n\x0euser_and_state\x18\x01 \x03(\x0b\x32\x35.sp.ListGroupStatusInSharedFolderReply.PBUserAndState\x1aR\n\x0ePBUserAndState\x12\x18\n\x04user\x18\x01 \x02(\x0b\x32\n.sp.PBUser\x12&\n\x05state\x18\x02 \x02(\x0e\x32\x17.sp.PBSharedFolderState\"Y\n\x1bSearchOrganizationUsersCall\x12\x13\n\x0bmax_results\x18\x01 \x02(\r\x12\x0e\n\x06offset\x18\x02 \x02(\r\x12\x15\n\rsearch_prefix\x18\x03 \x02(\t\"B\n\x1cSearchOrganizationUsersReply\x12\"\n\x0ematching_users\x18\x01 \x03(\x0b\x32\n.sp.PBUser\"<\n\x16SetUrlRequireLoginCall\x12\x0b\n\x03key\x18\x01 \x02(\t\x12\x15\n\rrequire_login\x18\x02 \x02(\x08\"0\n\x1dListUserLeftSharedFoldersCall\x12\x0f\n\x07user_id\x18\x01 \x02(\t*+\n\x14PBAuthorizationLevel\x12\x08\n\x04USER\x10\x00\x12\t\n\x05\x41\x44MIN\x10\x01*8\n\x13PBSharedFolderState\x12\x0b\n\x07PENDING\x10\x00\x12\n\n\x06JOINED\x10\x01\x12\x08\n\x04LEFT\x10\x02*H\n\x1bPBTwoFactorEnforcementLevel\x12\x0e\n\nDISALLOWED\x10\x00\x12\n\n\x06OPT_IN\x10\x01\x12\r\n\tMANDATORY\x10\x02\x32\xa7\x31\n\tSPService\x12 \n\t__error__\x12\x05.Void\x1a\x0c.PBException\x12\x31\n\x0fRequestToSignUp\x12\x17.sp.RequestToSignUpCall\x1a\x05.Void\x12\x41\n\x0eSignUpWithCode\x12\x16.sp.SignUpWithCodeCall\x1a\x17.sp.SignUpWithCodeReply\x12J\n\x11ResolveSignUpCode\x12\x19.sp.ResolveSignUpCodeCall\x1a\x1a.sp.ResolveSignUpCodeReply\x12%\n\x15SendEmailVerification\x12\x05.Void\x1a\x05.Void\x12)\n\x0bVerifyEmail\x12\x13.sp.VerifyEmailCall\x1a\x05.Void\x12\x17\n\x07SignOut\x12\x05.Void\x1a\x05.Void\x12\x41\n\x0eRegisterDevice\x12\x16.sp.RegisterDeviceCall\x1a\x17.sp.RegisterDeviceReply\x12S\n\x14InviteToOrganization\x12\x1c.sp.InviteToOrganizationCall\x1a\x1d.sp.InviteToOrganizationReply\x12K\n\x1c\x41\x63\x63\x65ptOrganizationInvitation\x12$.sp.AcceptOrganizationInvitationCall\x1a\x05.Void\x12K\n\x1c\x44\x65leteOrganizationInvitation\x12$.sp.DeleteOrganizationInvitationCall\x1a\x05.Void\x12\x14\n\x04Noop\x12\x05.Void\x1a\x05.Void\x12)\n\x0bShareFolder\x12\x13.sp.ShareFolderCall\x1a\x05.Void\x12\x33\n\x10JoinSharedFolder\x12\x18.sp.JoinSharedFolderCall\x1a\x05.Void\x12\x41\n\x1cIgnoreSharedFolderInvitation\x12\x1a.sp.IgnoreSharedFolderCall\x1a\x05.Void\x12\x35\n\x11LeaveSharedFolder\x12\x19.sp.LeaveSharedFolderCall\x1a\x05.Void\x12L\n\x1cListPendingFolderInvitations\x12\x05.Void\x1a%.sp.ListPendingFolderInvitationsReply\x12%\n\tEmailUser\x12\x11.sp.EmailUserCall\x1a\x05.Void\x12M\n\x12GetUserPreferences\x12\x1a.sp.GetUserPreferencesCall\x1a\x1b.sp.GetUserPreferencesReply\x12\x37\n\x12SetUserPreferences\x12\x1a.sp.SetUserPreferencesCall\x1a\x05.Void\x12\\\n\x17ListOrganizationMembers\x12\x1f.sp.ListOrganizationMembersCall\x1a .sp.ListOrganizationMembersReply\x12?\n\x16SendPasswordResetEmail\x12\x1e.sp.SendPasswordResetEmailCall\x1a\x05.Void\x12-\n\rResetPassword\x12\x15.sp.ResetPasswordCall\x1a\x05.Void\x12/\n\x0e\x43hangePassword\x12\x16.sp.ChangePasswordCall\x1a\x05.Void\x12=\n\x15SetAuthorizationLevel\x12\x1d.sp.SetAuthorizationLevelCall\x1a\x05.Void\x12/\n\x0e\x44\x65\x61\x63tivateUser\x12\x16.sp.DeactivateUserCall\x1a\x05.Void\x12%\n\tUpdateACL\x12\x11.sp.UpdateACLCall\x1a\x05.Void\x12%\n\tDeleteACL\x12\x11.sp.DeleteACLCall\x1a\x05.Void\x12\"\n\x05Noop2\x12\x12.sp.GetUserCRLCall\x1a\x05.Void\x12\x15\n\x05Noop3\x12\x05.Void\x1a\x05.Void\x12+\n\x0cUnlinkDevice\x12\x14.sp.UnlinkDeviceCall\x1a\x05.Void\x12>\n\rGetDeviceInfo\x12\x15.sp.GetDeviceInfoCall\x1a\x16.sp.GetDeviceInfoReply\x12\x44\n\x0fListUserDevices\x12\x17.sp.ListUserDevicesCall\x1a\x18.sp.ListUserDevicesReply\x12n\n\x1dListOrganizationSharedFolders\x12%.sp.ListOrganizationSharedFoldersCall\x1a&.sp.ListOrganizationSharedFoldersReply\x12^\n\x1bListUserJoinedSharedFolders\x12#.sp.ListUserJoinedSharedFoldersCall\x1a\x1a.sp.ListSharedFoldersReply\x12Z\n\x19ListUserLeftSharedFolders\x12!.sp.ListUserLeftSharedFoldersCall\x1a\x1a.sp.ListSharedFoldersReply\x12H\n\x1aGetOrganizationInvitations\x12\x05.Void\x1a#.sp.GetOrganizationInvitationsReply\x12\x36\n\x11GetOrgPreferences\x12\x05.Void\x1a\x1a.sp.GetOrgPreferencesReply\x12\x35\n\x11SetOrgPreferences\x12\x19.sp.SetOrgPreferencesCall\x1a\x05.Void\x12M\n\x10UnsubscribeEmail\x12\x1b.sp.SetUnsubscribeEmailCall\x1a\x1c.sp.GetUnsubscribeEmailReply\x12>\n\x15GetAuthorizationLevel\x12\x05.Void\x1a\x1e.sp.GetAuthorizationLevelReply\x12:\n\x13GetTeamServerUserID\x12\x05.Void\x1a\x1c.sp.GetTeamServerUserIDReply\x12K\n\x18RegisterTeamServerDevice\x12\x16.sp.RegisterDeviceCall\x1a\x17.sp.RegisterDeviceReply\x12\x1d\n\rExtendSession\x12\x05.Void\x1a\x05.Void\x12L\n\x1cListOrganizationInvitedUsers\x12\x05.Void\x1a%.sp.ListOrganizationInvitedUsersReply\x12P\n\x13GetCommandQueueHead\x12\x1b.sp.GetCommandQueueHeadCall\x1a\x1c.sp.GetCommandQueueHeadReply\x12P\n\x13\x41\x63kCommandQueueHead\x12\x1b.sp.AckCommandQueueHeadCall\x1a\x1c.sp.AckCommandQueueHeadReply\x12Y\n#DeleteOrganizationInvitationForUser\x12+.sp.DeleteOrganizationInvitationForUserCall\x1a\x05.Void\x12\x43\n\x18SetDeviceOSFamilyAndName\x12 .sp.SetDeviceOSFamilyAndNameCall\x1a\x05.Void\x12)\n\x06GetACL\x12\x0e.sp.GetACLCall\x1a\x0f.sp.GetACLReply\x12\x44\n\x0fRecertifyDevice\x12\x17.sp.RecertifyDeviceCall\x1a\x18.sp.RecertifyDeviceReply\x12N\n\x19RecertifyTeamServerDevice\x12\x17.sp.RecertifyDeviceCall\x1a\x18.sp.RecertifyDeviceReply\x12\x36\n\x11GetOrganizationID\x12\x05.Void\x1a\x1a.sp.GetOrganizationIDReply\x12;\n\x10\x43redentialSignIn\x12\x12.sp.SignInUserCall\x1a\x13.sp.SignInUserReply\x12/\n\x12ValidateCredential\x12\x12.sp.SignInUserCall\x1a\x05.Void\x12\x35\n\nSignInUser\x12\x12.sp.SignInUserCall\x1a\x13.sp.SignInUserReply\x12+\n\x0cSignInDevice\x12\x14.sp.SignInDeviceCall\x1a\x05.Void\x12:\n\x17\x45xtAuthBeginTransaction\x12\x05.Void\x1a\x18.sp.ExtAuthSessionNonces\x12T\n\x1b\x45xtAuthGetSessionAttributes\x12\x17.sp.ExtAuthSessionQuery\x1a\x1c.sp.ExtAuthSessionAttributes\x12$\n\x05Noop4\x12\x05.Void\x1a\x14.sp.MobileAccessCode\x12M\n\x12\x41uthorizeAPIClient\x12\x1a.sp.AuthorizeAPIClientCall\x1a\x1b.sp.AuthorizeAPIClientReply\x12J\n\x11ListSharedFolders\x12\x19.sp.ListSharedFoldersCall\x1a\x1a.sp.ListSharedFoldersReply\x12\x37\n\x12\x41\x64\x64UserToWhitelist\x12\x1a.sp.AddUserToWhitelistCall\x1a\x05.Void\x12\x41\n\x17RemoveUserFromWhitelist\x12\x1f.sp.RemoveUserFromWhitelistCall\x1a\x05.Void\x12<\n\x14ListWhitelistedUsers\x12\x05.Void\x1a\x1d.sp.ListWhitelistedUsersReply\x12\x39\n\x13SetSharedFolderName\x12\x1b.sp.SetSharedFolderNameCall\x1a\x05.Void\x12\x35\n\nCheckQuota\x12\x12.sp.CheckQuotaCall\x1a\x13.sp.CheckQuotaReply\x12#\n\x08SetQuota\x12\x10.sp.SetQuotaCall\x1a\x05.Void\x12\x1b\n\x0bRemoveQuota\x12\x05.Void\x1a\x05.Void\x12$\n\x08GetQuota\x12\x05.Void\x1a\x11.sp.GetQuotaReply\x12\x32\n\tCreateUrl\x12\x11.sp.CreateUrlCall\x1a\x12.sp.CreateUrlReply\x12\x35\n\nGetUrlInfo\x12\x12.sp.GetUrlInfoCall\x1a\x13.sp.GetUrlInfoReply\x12-\n\rSetUrlExpires\x12\x15.sp.SetUrlExpiresCall\x1a\x05.Void\x12\x33\n\x10RemoveUrlExpires\x12\x18.sp.RemoveUrlExpiresCall\x1a\x05.Void\x12%\n\tRemoveUrl\x12\x11.sp.RemoveUrlCall\x1a\x05.Void\x12/\n\x0eSetUrlPassword\x12\x16.sp.SetUrlPasswordCall\x1a\x05.Void\x12\x35\n\x11RemoveUrlPassword\x12\x19.sp.RemoveUrlPasswordCall\x1a\x05.Void\x12\x39\n\x13ValidateUrlPassword\x12\x1b.sp.ValidateUrlPasswordCall\x1a\x05.Void\x12\x39\n\x13\x44\x65stroySharedFolder\x12\x1b.sp.DestroySharedFolderCall\x1a\x05.Void\x12\x41\n\x17SendPriorityDefectEmail\x12\x1f.sp.SendPriorityDefectEmailCall\x1a\x05.Void\x12\x30\n\x0eSetupTwoFactor\x12\x05.Void\x1a\x17.sp.SetupTwoFactorReply\x12\x41\n\x17SetTwoFactorEnforcement\x12\x1f.sp.SetTwoFactorEnforcementCall\x1a\x05.Void\x12G\n\x10ListUrlsForStore\x12\x18.sp.ListUrlsForStoreCall\x1a\x19.sp.ListUrlsForStoreReply\x12\x39\n\x13ProvideSecondFactor\x12\x1b.sp.ProvideSecondFactorCall\x1a\x05.Void\x12\x35\n\x11ProvideBackupCode\x12\x19.sp.ProvideBackupCodeCall\x1a\x05.Void\x12\x30\n\x0eGetBackupCodes\x12\x05.Void\x1a\x17.sp.GetBackupCodesReply\x12\x38\n\x0b\x43reateGroup\x12\x13.sp.CreateGroupCall\x1a\x14.sp.CreateGroupReply\x12\x37\n\x12SetGroupCommonName\x12\x1a.sp.SetGroupCommonNameCall\x1a\x05.Void\x12\x31\n\x0f\x41\x64\x64GroupMembers\x12\x17.sp.AddGroupMembersCall\x1a\x05.Void\x12\x37\n\x12RemoveGroupMembers\x12\x1a.sp.RemoveGroupMembersCall\x1a\x05.Void\x12)\n\x0b\x44\x65leteGroup\x12\x13.sp.DeleteGroupCall\x1a\x05.Void\x12\x35\n\nListGroups\x12\x12.sp.ListGroupsCall\x1a\x13.sp.ListGroupsReply\x12G\n\x10ListGroupMembers\x12\x18.sp.ListGroupMembersCall\x1a\x19.sp.ListGroupMembersReply\x12K\n\x1cSetTwoFactorSetupEnforcement\x12$.sp.SetTwoFactorSetupEnforcementCall\x1a\x05.Void\x12L\n\x1cGetTwoFactorSetupEnforcement\x12\x05.Void\x1a%.sp.GetTwoFactorSetupEnforcementReply\x12n\n\x1dListGroupStatusInSharedFolder\x12%.sp.ListGroupStatusInSharedFolderCall\x1a&.sp.ListGroupStatusInSharedFolderReply\x12*\n\x1aSyncGroupsWithLdapEndpoint\x12\x05.Void\x1a\x05.Void\x12<\n\x14GetUserSettingsToken\x12\x05.Void\x1a\x1d.sp.GetUserSettingsTokenReply\x12;\n\x14SetUserSettingsToken\x12\x1c.sp.SetUserSettingsTokenCall\x1a\x05.Void\x12\'\n\x17\x44\x65leteUserSettingsToken\x12\x05.Void\x1a\x05.Void\x12\\\n\x17SearchOrganizationUsers\x12\x1f.sp.SearchOrganizationUsersCall\x1a .sp.SearchOrganizationUsersReply\x12\x37\n\x12SetUrlRequireLogin\x12\x1a.sp.SetUrlRequireLoginCall\x1a\x05.Void\x12\x35\n\x16GetAccessCodeForMobile\x12\x05.Void\x1a\x14.sp.MobileAccessCode\x12,\n\rGetAccessCode\x12\x05.Void\x1a\x14.sp.MobileAccessCode\x12G\n\x14RegisterStorageAgent\x12\x16.sp.RegisterDeviceCall\x1a\x17.sp.RegisterDeviceReplyB\x14\n\x10\x63om.aerofs.protoH\x03')
  ,
  dependencies=[common_pb2.DESCRIPTOR,cmd_pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_PBAUTHORIZATIONLEVEL = _descriptor.EnumDescriptor(
  name='PBAuthorizationLevel',
  full_name='sp.PBAuthorizationLevel',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='USER', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADMIN', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=9516,
  serialized_end=9559,
)
_sym_db.RegisterEnumDescriptor(_PBAUTHORIZATIONLEVEL)

PBAuthorizationLevel = enum_type_wrapper.EnumTypeWrapper(_PBAUTHORIZATIONLEVEL)
_PBSHAREDFOLDERSTATE = _descriptor.EnumDescriptor(
  name='PBSharedFolderState',
  full_name='sp.PBSharedFolderState',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PENDING', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JOINED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LEFT', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=9561,
  serialized_end=9617,
)
_sym_db.RegisterEnumDescriptor(_PBSHAREDFOLDERSTATE)

PBSharedFolderState = enum_type_wrapper.EnumTypeWrapper(_PBSHAREDFOLDERSTATE)
_PBTWOFACTORENFORCEMENTLEVEL = _descriptor.EnumDescriptor(
  name='PBTwoFactorEnforcementLevel',
  full_name='sp.PBTwoFactorEnforcementLevel',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DISALLOWED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPT_IN', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MANDATORY', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=9619,
  serialized_end=9691,
)
_sym_db.RegisterEnumDescriptor(_PBTWOFACTORENFORCEMENTLEVEL)

PBTwoFactorEnforcementLevel = enum_type_wrapper.EnumTypeWrapper(_PBTWOFACTORENFORCEMENTLEVEL)
USER = 0
ADMIN = 1
PENDING = 0
JOINED = 1
LEFT = 2
DISALLOWED = 0
OPT_IN = 1
MANDATORY = 2



_SETDEVICEOSFAMILYANDNAMECALL = _descriptor.Descriptor(
  name='SetDeviceOSFamilyAndNameCall',
  full_name='sp.SetDeviceOSFamilyAndNameCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_id', full_name='sp.SetDeviceOSFamilyAndNameCall.device_id', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='os_family', full_name='sp.SetDeviceOSFamilyAndNameCall.os_family', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='os_name', full_name='sp.SetDeviceOSFamilyAndNameCall.os_name', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=41,
  serialized_end=126,
)


_DELETEORGANIZATIONINVITATIONFORUSERCALL = _descriptor.Descriptor(
  name='DeleteOrganizationInvitationForUserCall',
  full_name='sp.DeleteOrganizationInvitationForUserCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_id', full_name='sp.DeleteOrganizationInvitationForUserCall.user_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=128,
  serialized_end=186,
)


_LISTORGANIZATIONINVITEDUSERSREPLY = _descriptor.Descriptor(
  name='ListOrganizationInvitedUsersReply',
  full_name='sp.ListOrganizationInvitedUsersReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_id', full_name='sp.ListOrganizationInvitedUsersReply.user_id', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=188,
  serialized_end=240,
)


_SIGNUPWITHCODECALL = _descriptor.Descriptor(
  name='SignUpWithCodeCall',
  full_name='sp.SignUpWithCodeCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='signup_code', full_name='sp.SignUpWithCodeCall.signup_code', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='password', full_name='sp.SignUpWithCodeCall.password', index=1,
      number=3, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='first_name', full_name='sp.SignUpWithCodeCall.first_name', index=2,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_name', full_name='sp.SignUpWithCodeCall.last_name', index=3,
      number=5, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=242,
  serialized_end=340,
)


_SIGNUPWITHCODEREPLY = _descriptor.Descriptor(
  name='SignUpWithCodeReply',
  full_name='sp.SignUpWithCodeReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='org_id', full_name='sp.SignUpWithCodeReply.org_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='existing_team', full_name='sp.SignUpWithCodeReply.existing_team', index=1,
      number=2, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=342,
  serialized_end=402,
)


_RESOLVESIGNUPCODECALL = _descriptor.Descriptor(
  name='ResolveSignUpCodeCall',
  full_name='sp.ResolveSignUpCodeCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='sp.ResolveSignUpCodeCall.code', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=404,
  serialized_end=441,
)


_RESOLVESIGNUPCODEREPLY = _descriptor.Descriptor(
  name='ResolveSignUpCodeReply',
  full_name='sp.ResolveSignUpCodeReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='email_address', full_name='sp.ResolveSignUpCodeReply.email_address', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=443,
  serialized_end=490,
)


_VERIFYBATCHSIGNUPCODECALL = _descriptor.Descriptor(
  name='VerifyBatchSignUpCodeCall',
  full_name='sp.VerifyBatchSignUpCodeCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bsc', full_name='sp.VerifyBatchSignUpCodeCall.bsc', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=492,
  serialized_end=532,
)


_REQUESTTOSIGNUPCALL = _descriptor.Descriptor(
  name='RequestToSignUpCall',
  full_name='sp.RequestToSignUpCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='email_address', full_name='sp.RequestToSignUpCall.email_address', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=534,
  serialized_end=578,
)


_INVITETOORGANIZATIONCALL = _descriptor.Descriptor(
  name='InviteToOrganizationCall',
  full_name='sp.InviteToOrganizationCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='email_address', full_name='sp.InviteToOrganizationCall.email_address', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=580,
  serialized_end=629,
)


_INVITETOORGANIZATIONREPLY = _descriptor.Descriptor(
  name='InviteToOrganizationReply',
  full_name='sp.InviteToOrganizationReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='locally_managed', full_name='sp.InviteToOrganizationReply.locally_managed', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=631,
  serialized_end=689,
)


_ACCEPTORGANIZATIONINVITATIONCALL = _descriptor.Descriptor(
  name='AcceptOrganizationInvitationCall',
  full_name='sp.AcceptOrganizationInvitationCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='organization_id', full_name='sp.AcceptOrganizationInvitationCall.organization_id', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=691,
  serialized_end=750,
)


_DELETEORGANIZATIONINVITATIONCALL = _descriptor.Descriptor(
  name='DeleteOrganizationInvitationCall',
  full_name='sp.DeleteOrganizationInvitationCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='organization_id', full_name='sp.DeleteOrganizationInvitationCall.organization_id', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=752,
  serialized_end=811,
)


_SHAREFOLDERCALL = _descriptor.Descriptor(
  name='ShareFolderCall',
  full_name='sp.ShareFolderCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='folder_name', full_name='sp.ShareFolderCall.folder_name', index=0,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='share_id', full_name='sp.ShareFolderCall.share_id', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='subject_permissions', full_name='sp.ShareFolderCall.subject_permissions', index=2,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='note', full_name='sp.ShareFolderCall.note', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='external', full_name='sp.ShareFolderCall.external', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='suppress_sharing_rules_warnings', full_name='sp.ShareFolderCall.suppress_sharing_rules_warnings', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=814,
  serialized_end=995,
)


_JOINSHAREDFOLDERCALL = _descriptor.Descriptor(
  name='JoinSharedFolderCall',
  full_name='sp.JoinSharedFolderCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='shared_id', full_name='sp.JoinSharedFolderCall.shared_id', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='external', full_name='sp.JoinSharedFolderCall.external', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=997,
  serialized_end=1056,
)


_IGNORESHAREDFOLDERCALL = _descriptor.Descriptor(
  name='IgnoreSharedFolderCall',
  full_name='sp.IgnoreSharedFolderCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='shared_id', full_name='sp.IgnoreSharedFolderCall.shared_id', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1058,
  serialized_end=1101,
)


_LEAVESHAREDFOLDERCALL = _descriptor.Descriptor(
  name='LeaveSharedFolderCall',
  full_name='sp.LeaveSharedFolderCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='shared_id', full_name='sp.LeaveSharedFolderCall.shared_id', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1103,
  serialized_end=1145,
)


_SETSHAREDFOLDERNAMECALL = _descriptor.Descriptor(
  name='SetSharedFolderNameCall',
  full_name='sp.SetSharedFolderNameCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='share_id', full_name='sp.SetSharedFolderNameCall.share_id', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='folder_name', full_name='sp.SetSharedFolderNameCall.folder_name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1147,
  serialized_end=1211,
)


_LISTPENDINGFOLDERINVITATIONSREPLY = _descriptor.Descriptor(
  name='ListPendingFolderInvitationsReply',
  full_name='sp.ListPendingFolderInvitationsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='invitation', full_name='sp.ListPendingFolderInvitationsReply.invitation', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1213,
  serialized_end=1289,
)


_EMAILUSERCALL = _descriptor.Descriptor(
  name='EmailUserCall',
  full_name='sp.EmailUserCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='subject', full_name='sp.EmailUserCall.subject', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='body', full_name='sp.EmailUserCall.body', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1291,
  serialized_end=1337,
)


_GETUSERPREFERENCESCALL = _descriptor.Descriptor(
  name='GetUserPreferencesCall',
  full_name='sp.GetUserPreferencesCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_id', full_name='sp.GetUserPreferencesCall.device_id', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1339,
  serialized_end=1382,
)


_GETUSERPREFERENCESREPLY = _descriptor.Descriptor(
  name='GetUserPreferencesReply',
  full_name='sp.GetUserPreferencesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='first_name', full_name='sp.GetUserPreferencesReply.first_name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_name', full_name='sp.GetUserPreferencesReply.last_name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='device_name', full_name='sp.GetUserPreferencesReply.device_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='signup_date', full_name='sp.GetUserPreferencesReply.signup_date', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='two_factor_enforced', full_name='sp.GetUserPreferencesReply.two_factor_enforced', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1385,
  serialized_end=1520,
)


_GETUSERSETTINGSTOKENREPLY = _descriptor.Descriptor(
  name='GetUserSettingsTokenReply',
  full_name='sp.GetUserSettingsTokenReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='sp.GetUserSettingsTokenReply.token', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1522,
  serialized_end=1564,
)


_SETUSERSETTINGSTOKENCALL = _descriptor.Descriptor(
  name='SetUserSettingsTokenCall',
  full_name='sp.SetUserSettingsTokenCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='sp.SetUserSettingsTokenCall.token', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1566,
  serialized_end=1607,
)


_SETUSERPREFERENCESCALL = _descriptor.Descriptor(
  name='SetUserPreferencesCall',
  full_name='sp.SetUserPreferencesCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_id', full_name='sp.SetUserPreferencesCall.user_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='first_name', full_name='sp.SetUserPreferencesCall.first_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_name', full_name='sp.SetUserPreferencesCall.last_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='device_id', full_name='sp.SetUserPreferencesCall.device_id', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='device_name', full_name='sp.SetUserPreferencesCall.device_name', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1609,
  serialized_end=1729,
)


_GETACLCALL = _descriptor.Descriptor(
  name='GetACLCall',
  full_name='sp.GetACLCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='epoch', full_name='sp.GetACLCall.epoch', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1731,
  serialized_end=1758,
)


_GETACLREPLY_PBSTOREACL = _descriptor.Descriptor(
  name='PBStoreACL',
  full_name='sp.GetACLReply.PBStoreACL',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='store_id', full_name='sp.GetACLReply.PBStoreACL.store_id', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='subject_permissions', full_name='sp.GetACLReply.PBStoreACL.subject_permissions', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='external', full_name='sp.GetACLReply.PBStoreACL.external', index=2,
      number=3, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='sp.GetACLReply.PBStoreACL.name', index=3,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1838,
  serialized_end=1952,
)

_GETACLREPLY = _descriptor.Descriptor(
  name='GetACLReply',
  full_name='sp.GetACLReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='store_acl', full_name='sp.GetACLReply.store_acl', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='epoch', full_name='sp.GetACLReply.epoch', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_GETACLREPLY_PBSTOREACL, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1761,
  serialized_end=1952,
)


_UPDATEACLCALL = _descriptor.Descriptor(
  name='UpdateACLCall',
  full_name='sp.UpdateACLCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='store_id', full_name='sp.UpdateACLCall.store_id', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='subject', full_name='sp.UpdateACLCall.subject', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='permissions', full_name='sp.UpdateACLCall.permissions', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='suppress_sharing_rules_warnings', full_name='sp.UpdateACLCall.suppress_sharing_rules_warnings', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1955,
  serialized_end=2083,
)


_DELETEACLCALL = _descriptor.Descriptor(
  name='DeleteACLCall',
  full_name='sp.DeleteACLCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='store_id', full_name='sp.DeleteACLCall.store_id', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='subject', full_name='sp.DeleteACLCall.subject', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2085,
  serialized_end=2135,
)


_VERIFYEMAILCALL = _descriptor.Descriptor(
  name='VerifyEmailCall',
  full_name='sp.VerifyEmailCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='verification_code', full_name='sp.VerifyEmailCall.verification_code', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2137,
  serialized_end=2181,
)


_GETTEAMSERVERUSERIDREPLY = _descriptor.Descriptor(
  name='GetTeamServerUserIDReply',
  full_name='sp.GetTeamServerUserIDReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='sp.GetTeamServerUserIDReply.id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2183,
  serialized_end=2221,
)


_REGISTERDEVICECALL_INTERFACE = _descriptor.Descriptor(
  name='Interface',
  full_name='sp.RegisterDeviceCall.Interface',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='sp.RegisterDeviceCall.Interface.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mac', full_name='sp.RegisterDeviceCall.Interface.mac', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ips', full_name='sp.RegisterDeviceCall.Interface.ips', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2404,
  serialized_end=2455,
)

_REGISTERDEVICECALL = _descriptor.Descriptor(
  name='RegisterDeviceCall',
  full_name='sp.RegisterDeviceCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_id', full_name='sp.RegisterDeviceCall.device_id', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='csr', full_name='sp.RegisterDeviceCall.csr', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='os_family', full_name='sp.RegisterDeviceCall.os_family', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='os_name', full_name='sp.RegisterDeviceCall.os_name', index=3,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='device_name', full_name='sp.RegisterDeviceCall.device_name', index=4,
      number=5, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interfaces', full_name='sp.RegisterDeviceCall.interfaces', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='token', full_name='sp.RegisterDeviceCall.token', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_REGISTERDEVICECALL_INTERFACE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2224,
  serialized_end=2455,
)


_REGISTERDEVICEREPLY = _descriptor.Descriptor(
  name='RegisterDeviceReply',
  full_name='sp.RegisterDeviceReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cert', full_name='sp.RegisterDeviceReply.cert', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2457,
  serialized_end=2492,
)


_LISTORGANIZATIONMEMBERSCALL = _descriptor.Descriptor(
  name='ListOrganizationMembersCall',
  full_name='sp.ListOrganizationMembersCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='max_results', full_name='sp.ListOrganizationMembersCall.max_results', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='sp.ListOrganizationMembersCall.offset', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='search_string', full_name='sp.ListOrganizationMembersCall.search_string', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2494,
  serialized_end=2583,
)


_LISTORGANIZATIONMEMBERSREPLY_PBUSERANDLEVEL = _descriptor.Descriptor(
  name='PBUserAndLevel',
  full_name='sp.ListOrganizationMembersReply.PBUserAndLevel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user', full_name='sp.ListOrganizationMembersReply.PBUserAndLevel.user', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='level', full_name='sp.ListOrganizationMembersReply.PBUserAndLevel.level', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2712,
  serialized_end=2795,
)

_LISTORGANIZATIONMEMBERSREPLY = _descriptor.Descriptor(
  name='ListOrganizationMembersReply',
  full_name='sp.ListOrganizationMembersReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_and_level', full_name='sp.ListOrganizationMembersReply.user_and_level', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='total_count', full_name='sp.ListOrganizationMembersReply.total_count', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LISTORGANIZATIONMEMBERSREPLY_PBUSERANDLEVEL, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2586,
  serialized_end=2795,
)


_GETORGANIZATIONIDREPLY = _descriptor.Descriptor(
  name='GetOrganizationIDReply',
  full_name='sp.GetOrganizationIDReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='org_id', full_name='sp.GetOrganizationIDReply.org_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2797,
  serialized_end=2837,
)


_GETAUTHORIZATIONLEVELREPLY = _descriptor.Descriptor(
  name='GetAuthorizationLevelReply',
  full_name='sp.GetAuthorizationLevelReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='level', full_name='sp.GetAuthorizationLevelReply.level', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2839,
  serialized_end=2908,
)


_PBUSER = _descriptor.Descriptor(
  name='PBUser',
  full_name='sp.PBUser',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_email', full_name='sp.PBUser.user_email', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='first_name', full_name='sp.PBUser.first_name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_name', full_name='sp.PBUser.last_name', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='two_factor_enforced', full_name='sp.PBUser.two_factor_enforced', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2910,
  serialized_end=3006,
)


_PBGROUP = _descriptor.Descriptor(
  name='PBGroup',
  full_name='sp.PBGroup',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='group_id', full_name='sp.PBGroup.group_id', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='common_name', full_name='sp.PBGroup.common_name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='externally_managed', full_name='sp.PBGroup.externally_managed', index=2,
      number=3, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3008,
  serialized_end=3084,
)


_SETAUTHORIZATIONLEVELCALL = _descriptor.Descriptor(
  name='SetAuthorizationLevelCall',
  full_name='sp.SetAuthorizationLevelCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_email', full_name='sp.SetAuthorizationLevelCall.user_email', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='auth_level', full_name='sp.SetAuthorizationLevelCall.auth_level', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3086,
  serialized_end=3179,
)


_SENDPASSWORDRESETEMAILCALL = _descriptor.Descriptor(
  name='SendPasswordResetEmailCall',
  full_name='sp.SendPasswordResetEmailCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_email', full_name='sp.SendPasswordResetEmailCall.user_email', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3181,
  serialized_end=3229,
)


_RESETPASSWORDCALL = _descriptor.Descriptor(
  name='ResetPasswordCall',
  full_name='sp.ResetPasswordCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='password_reset_token', full_name='sp.ResetPasswordCall.password_reset_token', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='new_credentials', full_name='sp.ResetPasswordCall.new_credentials', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3231,
  serialized_end=3305,
)


_CHANGEPASSWORDCALL = _descriptor.Descriptor(
  name='ChangePasswordCall',
  full_name='sp.ChangePasswordCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='old_credentials', full_name='sp.ChangePasswordCall.old_credentials', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='new_credentials', full_name='sp.ChangePasswordCall.new_credentials', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3307,
  serialized_end=3377,
)


_GETUSERCRLCALL = _descriptor.Descriptor(
  name='GetUserCRLCall',
  full_name='sp.GetUserCRLCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='crl_epoch', full_name='sp.GetUserCRLCall.crl_epoch', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3379,
  serialized_end=3414,
)


_UNLINKDEVICECALL = _descriptor.Descriptor(
  name='UnlinkDeviceCall',
  full_name='sp.UnlinkDeviceCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_id', full_name='sp.UnlinkDeviceCall.device_id', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='erase', full_name='sp.UnlinkDeviceCall.erase', index=1,
      number=2, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3416,
  serialized_end=3468,
)


_GETDEVICEINFOCALL = _descriptor.Descriptor(
  name='GetDeviceInfoCall',
  full_name='sp.GetDeviceInfoCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_id', full_name='sp.GetDeviceInfoCall.device_id', index=0,
      number=1, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3470,
  serialized_end=3508,
)


_GETDEVICEINFOREPLY_PBDEVICEINFO = _descriptor.Descriptor(
  name='PBDeviceInfo',
  full_name='sp.GetDeviceInfoReply.PBDeviceInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='owner', full_name='sp.GetDeviceInfoReply.PBDeviceInfo.owner', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='device_name', full_name='sp.GetDeviceInfoReply.PBDeviceInfo.device_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3591,
  serialized_end=3653,
)

_GETDEVICEINFOREPLY = _descriptor.Descriptor(
  name='GetDeviceInfoReply',
  full_name='sp.GetDeviceInfoReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_info', full_name='sp.GetDeviceInfoReply.device_info', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_GETDEVICEINFOREPLY_PBDEVICEINFO, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3511,
  serialized_end=3653,
)


_LISTUSERDEVICESCALL = _descriptor.Descriptor(
  name='ListUserDevicesCall',
  full_name='sp.ListUserDevicesCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_id', full_name='sp.ListUserDevicesCall.user_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3655,
  serialized_end=3693,
)


_LISTUSERDEVICESREPLY_PBDEVICE = _descriptor.Descriptor(
  name='PBDevice',
  full_name='sp.ListUserDevicesReply.PBDevice',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_id', full_name='sp.ListUserDevicesReply.PBDevice.device_id', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='device_name', full_name='sp.ListUserDevicesReply.PBDevice.device_name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='os_family', full_name='sp.ListUserDevicesReply.PBDevice.os_family', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='os_name', full_name='sp.ListUserDevicesReply.PBDevice.os_name', index=3,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3771,
  serialized_end=3857,
)

_LISTUSERDEVICESREPLY = _descriptor.Descriptor(
  name='ListUserDevicesReply',
  full_name='sp.ListUserDevicesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device', full_name='sp.ListUserDevicesReply.device', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LISTUSERDEVICESREPLY_PBDEVICE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3696,
  serialized_end=3857,
)


_LISTORGANIZATIONSHAREDFOLDERSCALL = _descriptor.Descriptor(
  name='ListOrganizationSharedFoldersCall',
  full_name='sp.ListOrganizationSharedFoldersCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='max_results', full_name='sp.ListOrganizationSharedFoldersCall.max_results', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='sp.ListOrganizationSharedFoldersCall.offset', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='search_string', full_name='sp.ListOrganizationSharedFoldersCall.search_string', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3859,
  serialized_end=3954,
)


_LISTORGANIZATIONSHAREDFOLDERSREPLY = _descriptor.Descriptor(
  name='ListOrganizationSharedFoldersReply',
  full_name='sp.ListOrganizationSharedFoldersReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='shared_folder', full_name='sp.ListOrganizationSharedFoldersReply.shared_folder', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='total_count', full_name='sp.ListOrganizationSharedFoldersReply.total_count', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3956,
  serialized_end=4056,
)


_LISTUSERJOINEDSHAREDFOLDERSCALL = _descriptor.Descriptor(
  name='ListUserJoinedSharedFoldersCall',
  full_name='sp.ListUserJoinedSharedFoldersCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_id', full_name='sp.ListUserJoinedSharedFoldersCall.user_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_results', full_name='sp.ListUserJoinedSharedFoldersCall.max_results', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='sp.ListUserJoinedSharedFoldersCall.offset', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='search_string', full_name='sp.ListUserJoinedSharedFoldersCall.search_string', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4058,
  serialized_end=4168,
)


_PBSHAREDFOLDER_PBUSERPERMISSIONSANDSTATE = _descriptor.Descriptor(
  name='PBUserPermissionsAndState',
  full_name='sp.PBSharedFolder.PBUserPermissionsAndState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user', full_name='sp.PBSharedFolder.PBUserPermissionsAndState.user', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='permissions', full_name='sp.PBSharedFolder.PBUserPermissionsAndState.permissions', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='sp.PBSharedFolder.PBUserPermissionsAndState.state', index=2,
      number=3, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4486,
  serialized_end=4616,
)

_PBSHAREDFOLDER_PBGROUPPERMISSIONS = _descriptor.Descriptor(
  name='PBGroupPermissions',
  full_name='sp.PBSharedFolder.PBGroupPermissions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='group', full_name='sp.PBSharedFolder.PBGroupPermissions.group', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='permissions', full_name='sp.PBSharedFolder.PBGroupPermissions.permissions', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4618,
  serialized_end=4703,
)

_PBSHAREDFOLDER = _descriptor.Descriptor(
  name='PBSharedFolder',
  full_name='sp.PBSharedFolder',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='store_id', full_name='sp.PBSharedFolder.store_id', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='sp.PBSharedFolder.name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='owned_by_team', full_name='sp.PBSharedFolder.owned_by_team', index=2,
      number=3, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user_permissions_and_state', full_name='sp.PBSharedFolder.user_permissions_and_state', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='group_permissions', full_name='sp.PBSharedFolder.group_permissions', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='requested_users_permissions_and_state', full_name='sp.PBSharedFolder.requested_users_permissions_and_state', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_PBSHAREDFOLDER_PBUSERPERMISSIONSANDSTATE, _PBSHAREDFOLDER_PBGROUPPERMISSIONS, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4171,
  serialized_end=4703,
)


_GETORGANIZATIONINVITATIONSREPLY_ORGANIZATIONINVITATION = _descriptor.Descriptor(
  name='OrganizationInvitation',
  full_name='sp.GetOrganizationInvitationsReply.OrganizationInvitation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='inviter', full_name='sp.GetOrganizationInvitationsReply.OrganizationInvitation.inviter', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='organization_name', full_name='sp.GetOrganizationInvitationsReply.OrganizationInvitation.organization_name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='organization_id', full_name='sp.GetOrganizationInvitationsReply.OrganizationInvitation.organization_id', index=2,
      number=3, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4835,
  serialized_end=4928,
)

_GETORGANIZATIONINVITATIONSREPLY = _descriptor.Descriptor(
  name='GetOrganizationInvitationsReply',
  full_name='sp.GetOrganizationInvitationsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='organization_invitations', full_name='sp.GetOrganizationInvitationsReply.organization_invitations', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_GETORGANIZATIONINVITATIONSREPLY_ORGANIZATIONINVITATION, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4706,
  serialized_end=4928,
)


_GETORGPREFERENCESREPLY = _descriptor.Descriptor(
  name='GetOrgPreferencesReply',
  full_name='sp.GetOrgPreferencesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='organization_name', full_name='sp.GetOrgPreferencesReply.organization_name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='organization_contact_phone', full_name='sp.GetOrgPreferencesReply.organization_contact_phone', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='level', full_name='sp.GetOrgPreferencesReply.level', index=2,
      number=3, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='license_seats_used', full_name='sp.GetOrgPreferencesReply.license_seats_used', index=3,
      number=4, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='external_user_count', full_name='sp.GetOrgPreferencesReply.external_user_count', index=4,
      number=5, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4931,
  serialized_end=5123,
)


_SETORGPREFERENCESCALL = _descriptor.Descriptor(
  name='SetOrgPreferencesCall',
  full_name='sp.SetOrgPreferencesCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='org_name', full_name='sp.SetOrgPreferencesCall.org_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='organization_contact_phone', full_name='sp.SetOrgPreferencesCall.organization_contact_phone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5125,
  serialized_end=5202,
)


_SETUNSUBSCRIBEEMAILCALL = _descriptor.Descriptor(
  name='SetUnsubscribeEmailCall',
  full_name='sp.SetUnsubscribeEmailCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='unsubscribe_token', full_name='sp.SetUnsubscribeEmailCall.unsubscribe_token', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5204,
  serialized_end=5256,
)


_GETUNSUBSCRIBEEMAILREPLY = _descriptor.Descriptor(
  name='GetUnsubscribeEmailReply',
  full_name='sp.GetUnsubscribeEmailReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='email_id', full_name='sp.GetUnsubscribeEmailReply.email_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5258,
  serialized_end=5302,
)


_PBFULLNAME = _descriptor.Descriptor(
  name='PBFullName',
  full_name='sp.PBFullName',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='first_name', full_name='sp.PBFullName.first_name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_name', full_name='sp.PBFullName.last_name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5304,
  serialized_end=5355,
)


_GETCOMMANDQUEUEHEADCALL = _descriptor.Descriptor(
  name='GetCommandQueueHeadCall',
  full_name='sp.GetCommandQueueHeadCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_id', full_name='sp.GetCommandQueueHeadCall.device_id', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5357,
  serialized_end=5401,
)


_GETCOMMANDQUEUEHEADREPLY = _descriptor.Descriptor(
  name='GetCommandQueueHeadReply',
  full_name='sp.GetCommandQueueHeadReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='command', full_name='sp.GetCommandQueueHeadReply.command', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='queue_size', full_name='sp.GetCommandQueueHeadReply.queue_size', index=1,
      number=2, type=3, cpp_type=2, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5403,
  serialized_end=5476,
)


_ACKCOMMANDQUEUEHEADCALL = _descriptor.Descriptor(
  name='AckCommandQueueHeadCall',
  full_name='sp.AckCommandQueueHeadCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_id', full_name='sp.AckCommandQueueHeadCall.device_id', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='epoch', full_name='sp.AckCommandQueueHeadCall.epoch', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='sp.AckCommandQueueHeadCall.error', index=2,
      number=3, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5478,
  serialized_end=5552,
)


_ACKCOMMANDQUEUEHEADREPLY = _descriptor.Descriptor(
  name='AckCommandQueueHeadReply',
  full_name='sp.AckCommandQueueHeadReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='command', full_name='sp.AckCommandQueueHeadReply.command', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='queue_size', full_name='sp.AckCommandQueueHeadReply.queue_size', index=1,
      number=2, type=3, cpp_type=2, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5554,
  serialized_end=5627,
)


_RECERTIFYDEVICECALL = _descriptor.Descriptor(
  name='RecertifyDeviceCall',
  full_name='sp.RecertifyDeviceCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_id', full_name='sp.RecertifyDeviceCall.device_id', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='csr', full_name='sp.RecertifyDeviceCall.csr', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5629,
  serialized_end=5682,
)


_RECERTIFYDEVICEREPLY = _descriptor.Descriptor(
  name='RecertifyDeviceReply',
  full_name='sp.RecertifyDeviceReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cert', full_name='sp.RecertifyDeviceReply.cert', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5684,
  serialized_end=5720,
)


_SIGNINDEVICECALL = _descriptor.Descriptor(
  name='SignInDeviceCall',
  full_name='sp.SignInDeviceCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_id', full_name='sp.SignInDeviceCall.user_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='did', full_name='sp.SignInDeviceCall.did', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5722,
  serialized_end=5770,
)


_SIGNINUSERCALL = _descriptor.Descriptor(
  name='SignInUserCall',
  full_name='sp.SignInUserCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_id', full_name='sp.SignInUserCall.user_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='credential', full_name='sp.SignInUserCall.credential', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5772,
  serialized_end=5825,
)


_SIGNINUSERREPLY = _descriptor.Descriptor(
  name='SignInUserReply',
  full_name='sp.SignInUserReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='need_second_factor', full_name='sp.SignInUserReply.need_second_factor', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='need_second_factor_setup', full_name='sp.SignInUserReply.need_second_factor_setup', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5827,
  serialized_end=5906,
)


_EXTAUTHSESSIONNONCES = _descriptor.Descriptor(
  name='ExtAuthSessionNonces',
  full_name='sp.ExtAuthSessionNonces',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sessionNonce', full_name='sp.ExtAuthSessionNonces.sessionNonce', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='delegateNonce', full_name='sp.ExtAuthSessionNonces.delegateNonce', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5908,
  serialized_end=5975,
)


_EXTAUTHSESSIONQUERY = _descriptor.Descriptor(
  name='ExtAuthSessionQuery',
  full_name='sp.ExtAuthSessionQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sessionNonce', full_name='sp.ExtAuthSessionQuery.sessionNonce', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5977,
  serialized_end=6020,
)


_EXTAUTHSESSIONATTRIBUTES = _descriptor.Descriptor(
  name='ExtAuthSessionAttributes',
  full_name='sp.ExtAuthSessionAttributes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='userId', full_name='sp.ExtAuthSessionAttributes.userId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='firstName', full_name='sp.ExtAuthSessionAttributes.firstName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastName', full_name='sp.ExtAuthSessionAttributes.lastName', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='need_second_factor', full_name='sp.ExtAuthSessionAttributes.need_second_factor', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='need_second_factor_setup', full_name='sp.ExtAuthSessionAttributes.need_second_factor_setup', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6023,
  serialized_end=6164,
)


_MOBILEACCESSCODE = _descriptor.Descriptor(
  name='MobileAccessCode',
  full_name='sp.MobileAccessCode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='accessCode', full_name='sp.MobileAccessCode.accessCode', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6166,
  serialized_end=6204,
)


_AUTHORIZEAPICLIENTCALL = _descriptor.Descriptor(
  name='AuthorizeAPIClientCall',
  full_name='sp.AuthorizeAPIClientCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='accessCode', full_name='sp.AuthorizeAPIClientCall.accessCode', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='deviceName', full_name='sp.AuthorizeAPIClientCall.deviceName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6206,
  serialized_end=6270,
)


_AUTHORIZEAPICLIENTREPLY = _descriptor.Descriptor(
  name='AuthorizeAPIClientReply',
  full_name='sp.AuthorizeAPIClientReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='userId', full_name='sp.AuthorizeAPIClientReply.userId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='orgId', full_name='sp.AuthorizeAPIClientReply.orgId', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='isOrgAdmin', full_name='sp.AuthorizeAPIClientReply.isOrgAdmin', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6272,
  serialized_end=6348,
)


_LISTSHAREDFOLDERSCALL = _descriptor.Descriptor(
  name='ListSharedFoldersCall',
  full_name='sp.ListSharedFoldersCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='store_id', full_name='sp.ListSharedFoldersCall.store_id', index=0,
      number=1, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6350,
  serialized_end=6391,
)


_LISTSHAREDFOLDERSREPLY = _descriptor.Descriptor(
  name='ListSharedFoldersReply',
  full_name='sp.ListSharedFoldersReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='shared_folder', full_name='sp.ListSharedFoldersReply.shared_folder', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='total_count', full_name='sp.ListSharedFoldersReply.total_count', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6393,
  serialized_end=6481,
)


_DEACTIVATEUSERCALL = _descriptor.Descriptor(
  name='DeactivateUserCall',
  full_name='sp.DeactivateUserCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_id', full_name='sp.DeactivateUserCall.user_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='erase_devices', full_name='sp.DeactivateUserCall.erase_devices', index=1,
      number=2, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6483,
  serialized_end=6543,
)


_ADDUSERTOWHITELISTCALL = _descriptor.Descriptor(
  name='AddUserToWhitelistCall',
  full_name='sp.AddUserToWhitelistCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_email', full_name='sp.AddUserToWhitelistCall.user_email', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6545,
  serialized_end=6589,
)


_REMOVEUSERFROMWHITELISTCALL = _descriptor.Descriptor(
  name='RemoveUserFromWhitelistCall',
  full_name='sp.RemoveUserFromWhitelistCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_email', full_name='sp.RemoveUserFromWhitelistCall.user_email', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6591,
  serialized_end=6640,
)


_LISTWHITELISTEDUSERSREPLY = _descriptor.Descriptor(
  name='ListWhitelistedUsersReply',
  full_name='sp.ListWhitelistedUsersReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user', full_name='sp.ListWhitelistedUsersReply.user', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6642,
  serialized_end=6695,
)


_CHECKQUOTACALL_PBSTOREUSAGE = _descriptor.Descriptor(
  name='PBStoreUsage',
  full_name='sp.CheckQuotaCall.PBStoreUsage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sid', full_name='sp.CheckQuotaCall.PBStoreUsage.sid', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bytes_used', full_name='sp.CheckQuotaCall.PBStoreUsage.bytes_used', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6763,
  serialized_end=6810,
)

_CHECKQUOTACALL = _descriptor.Descriptor(
  name='CheckQuotaCall',
  full_name='sp.CheckQuotaCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='store', full_name='sp.CheckQuotaCall.store', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CHECKQUOTACALL_PBSTOREUSAGE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6697,
  serialized_end=6810,
)


_CHECKQUOTAREPLY_PBSTORESHOULDCOLLECT = _descriptor.Descriptor(
  name='PBStoreShouldCollect',
  full_name='sp.CheckQuotaReply.PBStoreShouldCollect',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sid', full_name='sp.CheckQuotaReply.PBStoreShouldCollect.sid', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='collect_content', full_name='sp.CheckQuotaReply.PBStoreShouldCollect.collect_content', index=1,
      number=2, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6889,
  serialized_end=6949,
)

_CHECKQUOTAREPLY = _descriptor.Descriptor(
  name='CheckQuotaReply',
  full_name='sp.CheckQuotaReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='store', full_name='sp.CheckQuotaReply.store', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CHECKQUOTAREPLY_PBSTORESHOULDCOLLECT, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6813,
  serialized_end=6949,
)


_GETQUOTAREPLY = _descriptor.Descriptor(
  name='GetQuotaReply',
  full_name='sp.GetQuotaReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='quota', full_name='sp.GetQuotaReply.quota', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6951,
  serialized_end=6981,
)


_SETQUOTACALL = _descriptor.Descriptor(
  name='SetQuotaCall',
  full_name='sp.SetQuotaCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='quota', full_name='sp.SetQuotaCall.quota', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6983,
  serialized_end=7012,
)


_CREATEURLCALL = _descriptor.Descriptor(
  name='CreateUrlCall',
  full_name='sp.CreateUrlCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='soid', full_name='sp.CreateUrlCall.soid', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7014,
  serialized_end=7043,
)


_PBRESTOBJECTURL = _descriptor.Descriptor(
  name='PBRestObjectUrl',
  full_name='sp.PBRestObjectUrl',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='sp.PBRestObjectUrl.key', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='soid', full_name='sp.PBRestObjectUrl.soid', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='token', full_name='sp.PBRestObjectUrl.token', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='created_by', full_name='sp.PBRestObjectUrl.created_by', index=3,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='expires', full_name='sp.PBRestObjectUrl.expires', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_password', full_name='sp.PBRestObjectUrl.has_password', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='require_login', full_name='sp.PBRestObjectUrl.require_login', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7046,
  serialized_end=7201,
)


_CREATEURLREPLY = _descriptor.Descriptor(
  name='CreateUrlReply',
  full_name='sp.CreateUrlReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='url_info', full_name='sp.CreateUrlReply.url_info', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7203,
  serialized_end=7258,
)


_SETURLEXPIRESCALL = _descriptor.Descriptor(
  name='SetUrlExpiresCall',
  full_name='sp.SetUrlExpiresCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='sp.SetUrlExpiresCall.key', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='expires', full_name='sp.SetUrlExpiresCall.expires', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7260,
  serialized_end=7309,
)


_REMOVEURLEXPIRESCALL = _descriptor.Descriptor(
  name='RemoveUrlExpiresCall',
  full_name='sp.RemoveUrlExpiresCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='sp.RemoveUrlExpiresCall.key', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7311,
  serialized_end=7346,
)


_GETURLINFOCALL = _descriptor.Descriptor(
  name='GetUrlInfoCall',
  full_name='sp.GetUrlInfoCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='sp.GetUrlInfoCall.key', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='password', full_name='sp.GetUrlInfoCall.password', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7348,
  serialized_end=7395,
)


_GETURLINFOREPLY = _descriptor.Descriptor(
  name='GetUrlInfoReply',
  full_name='sp.GetUrlInfoReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='url_info', full_name='sp.GetUrlInfoReply.url_info', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7397,
  serialized_end=7453,
)


_REMOVEURLCALL = _descriptor.Descriptor(
  name='RemoveUrlCall',
  full_name='sp.RemoveUrlCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='sp.RemoveUrlCall.key', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7455,
  serialized_end=7483,
)


_SETURLPASSWORDCALL = _descriptor.Descriptor(
  name='SetUrlPasswordCall',
  full_name='sp.SetUrlPasswordCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='sp.SetUrlPasswordCall.key', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='password', full_name='sp.SetUrlPasswordCall.password', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7485,
  serialized_end=7536,
)


_REMOVEURLPASSWORDCALL = _descriptor.Descriptor(
  name='RemoveUrlPasswordCall',
  full_name='sp.RemoveUrlPasswordCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='sp.RemoveUrlPasswordCall.key', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7538,
  serialized_end=7574,
)


_VALIDATEURLPASSWORDCALL = _descriptor.Descriptor(
  name='ValidateUrlPasswordCall',
  full_name='sp.ValidateUrlPasswordCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='sp.ValidateUrlPasswordCall.key', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='password', full_name='sp.ValidateUrlPasswordCall.password', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7576,
  serialized_end=7632,
)


_DESTROYSHAREDFOLDERCALL = _descriptor.Descriptor(
  name='DestroySharedFolderCall',
  full_name='sp.DestroySharedFolderCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='shared_id', full_name='sp.DestroySharedFolderCall.shared_id', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7634,
  serialized_end=7678,
)


_SENDPRIORITYDEFECTEMAILCALL = _descriptor.Descriptor(
  name='SendPriorityDefectEmailCall',
  full_name='sp.SendPriorityDefectEmailCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='defect_id', full_name='sp.SendPriorityDefectEmailCall.defect_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='contact_email', full_name='sp.SendPriorityDefectEmailCall.contact_email', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='subject', full_name='sp.SendPriorityDefectEmailCall.subject', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='sp.SendPriorityDefectEmailCall.message', index=3,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7680,
  serialized_end=7785,
)


_SETUPTWOFACTORCALL = _descriptor.Descriptor(
  name='SetupTwoFactorCall',
  full_name='sp.SetupTwoFactorCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7787,
  serialized_end=7807,
)


_SETUPTWOFACTORREPLY = _descriptor.Descriptor(
  name='SetupTwoFactorReply',
  full_name='sp.SetupTwoFactorReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='secret', full_name='sp.SetupTwoFactorReply.secret', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7809,
  serialized_end=7846,
)


_SETTWOFACTORENFORCEMENTCALL = _descriptor.Descriptor(
  name='SetTwoFactorEnforcementCall',
  full_name='sp.SetTwoFactorEnforcementCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enforce', full_name='sp.SetTwoFactorEnforcementCall.enforce', index=0,
      number=1, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='current_code', full_name='sp.SetTwoFactorEnforcementCall.current_code', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user_id', full_name='sp.SetTwoFactorEnforcementCall.user_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7848,
  serialized_end=7933,
)


_LISTURLSFORSTORECALL = _descriptor.Descriptor(
  name='ListUrlsForStoreCall',
  full_name='sp.ListUrlsForStoreCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='shared_id', full_name='sp.ListUrlsForStoreCall.shared_id', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7935,
  serialized_end=7976,
)


_LISTURLSFORSTOREREPLY = _descriptor.Descriptor(
  name='ListUrlsForStoreReply',
  full_name='sp.ListUrlsForStoreReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='url', full_name='sp.ListUrlsForStoreReply.url', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7978,
  serialized_end=8035,
)


_PROVIDESECONDFACTORCALL = _descriptor.Descriptor(
  name='ProvideSecondFactorCall',
  full_name='sp.ProvideSecondFactorCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='current_code', full_name='sp.ProvideSecondFactorCall.current_code', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8037,
  serialized_end=8084,
)


_PROVIDEBACKUPCODECALL = _descriptor.Descriptor(
  name='ProvideBackupCodeCall',
  full_name='sp.ProvideBackupCodeCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='backup_code', full_name='sp.ProvideBackupCodeCall.backup_code', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8086,
  serialized_end=8130,
)


_GETBACKUPCODESREPLY_BACKUPCODE = _descriptor.Descriptor(
  name='BackupCode',
  full_name='sp.GetBackupCodesReply.BackupCode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='sp.GetBackupCodesReply.BackupCode.code', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='date_used', full_name='sp.GetBackupCodesReply.BackupCode.date_used', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8206,
  serialized_end=8251,
)

_GETBACKUPCODESREPLY = _descriptor.Descriptor(
  name='GetBackupCodesReply',
  full_name='sp.GetBackupCodesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='codes', full_name='sp.GetBackupCodesReply.codes', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_GETBACKUPCODESREPLY_BACKUPCODE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8132,
  serialized_end=8251,
)


_CREATEGROUPCALL = _descriptor.Descriptor(
  name='CreateGroupCall',
  full_name='sp.CreateGroupCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='common_name', full_name='sp.CreateGroupCall.common_name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8253,
  serialized_end=8291,
)


_CREATEGROUPREPLY = _descriptor.Descriptor(
  name='CreateGroupReply',
  full_name='sp.CreateGroupReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='group_id', full_name='sp.CreateGroupReply.group_id', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8293,
  serialized_end=8329,
)


_SETGROUPCOMMONNAMECALL = _descriptor.Descriptor(
  name='SetGroupCommonNameCall',
  full_name='sp.SetGroupCommonNameCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='group_id', full_name='sp.SetGroupCommonNameCall.group_id', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='common_name', full_name='sp.SetGroupCommonNameCall.common_name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8331,
  serialized_end=8394,
)


_ADDGROUPMEMBERSCALL = _descriptor.Descriptor(
  name='AddGroupMembersCall',
  full_name='sp.AddGroupMembersCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='group_id', full_name='sp.AddGroupMembersCall.group_id', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user_emails', full_name='sp.AddGroupMembersCall.user_emails', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8396,
  serialized_end=8456,
)


_REMOVEGROUPMEMBERSCALL = _descriptor.Descriptor(
  name='RemoveGroupMembersCall',
  full_name='sp.RemoveGroupMembersCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='group_id', full_name='sp.RemoveGroupMembersCall.group_id', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user_emails', full_name='sp.RemoveGroupMembersCall.user_emails', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8458,
  serialized_end=8521,
)


_DELETEGROUPCALL = _descriptor.Descriptor(
  name='DeleteGroupCall',
  full_name='sp.DeleteGroupCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='group_id', full_name='sp.DeleteGroupCall.group_id', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8523,
  serialized_end=8558,
)


_LISTGROUPSCALL = _descriptor.Descriptor(
  name='ListGroupsCall',
  full_name='sp.ListGroupsCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='max_results', full_name='sp.ListGroupsCall.max_results', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='sp.ListGroupsCall.offset', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='search_prefix', full_name='sp.ListGroupsCall.search_prefix', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8560,
  serialized_end=8636,
)


_LISTGROUPSREPLY = _descriptor.Descriptor(
  name='ListGroupsReply',
  full_name='sp.ListGroupsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='groups', full_name='sp.ListGroupsReply.groups', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='total_count', full_name='sp.ListGroupsReply.total_count', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8638,
  serialized_end=8705,
)


_LISTGROUPMEMBERSCALL = _descriptor.Descriptor(
  name='ListGroupMembersCall',
  full_name='sp.ListGroupMembersCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='group_id', full_name='sp.ListGroupMembersCall.group_id', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8707,
  serialized_end=8747,
)


_LISTGROUPMEMBERSREPLY = _descriptor.Descriptor(
  name='ListGroupMembersReply',
  full_name='sp.ListGroupMembersReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='users', full_name='sp.ListGroupMembersReply.users', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8749,
  serialized_end=8799,
)


_SETTWOFACTORSETUPENFORCEMENTCALL = _descriptor.Descriptor(
  name='SetTwoFactorSetupEnforcementCall',
  full_name='sp.SetTwoFactorSetupEnforcementCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='level', full_name='sp.SetTwoFactorSetupEnforcementCall.level', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8801,
  serialized_end=8883,
)


_GETTWOFACTORSETUPENFORCEMENTREPLY = _descriptor.Descriptor(
  name='GetTwoFactorSetupEnforcementReply',
  full_name='sp.GetTwoFactorSetupEnforcementReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='level', full_name='sp.GetTwoFactorSetupEnforcementReply.level', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8885,
  serialized_end=8968,
)


_LISTGROUPSTATUSINSHAREDFOLDERCALL = _descriptor.Descriptor(
  name='ListGroupStatusInSharedFolderCall',
  full_name='sp.ListGroupStatusInSharedFolderCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='group_id', full_name='sp.ListGroupStatusInSharedFolderCall.group_id', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='share_id', full_name='sp.ListGroupStatusInSharedFolderCall.share_id', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8970,
  serialized_end=9041,
)


_LISTGROUPSTATUSINSHAREDFOLDERREPLY_PBUSERANDSTATE = _descriptor.Descriptor(
  name='PBUserAndState',
  full_name='sp.ListGroupStatusInSharedFolderReply.PBUserAndState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user', full_name='sp.ListGroupStatusInSharedFolderReply.PBUserAndState.user', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='sp.ListGroupStatusInSharedFolderReply.PBUserAndState.state', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9161,
  serialized_end=9243,
)

_LISTGROUPSTATUSINSHAREDFOLDERREPLY = _descriptor.Descriptor(
  name='ListGroupStatusInSharedFolderReply',
  full_name='sp.ListGroupStatusInSharedFolderReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_and_state', full_name='sp.ListGroupStatusInSharedFolderReply.user_and_state', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LISTGROUPSTATUSINSHAREDFOLDERREPLY_PBUSERANDSTATE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9044,
  serialized_end=9243,
)


_SEARCHORGANIZATIONUSERSCALL = _descriptor.Descriptor(
  name='SearchOrganizationUsersCall',
  full_name='sp.SearchOrganizationUsersCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='max_results', full_name='sp.SearchOrganizationUsersCall.max_results', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='sp.SearchOrganizationUsersCall.offset', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='search_prefix', full_name='sp.SearchOrganizationUsersCall.search_prefix', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9245,
  serialized_end=9334,
)


_SEARCHORGANIZATIONUSERSREPLY = _descriptor.Descriptor(
  name='SearchOrganizationUsersReply',
  full_name='sp.SearchOrganizationUsersReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='matching_users', full_name='sp.SearchOrganizationUsersReply.matching_users', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9336,
  serialized_end=9402,
)


_SETURLREQUIRELOGINCALL = _descriptor.Descriptor(
  name='SetUrlRequireLoginCall',
  full_name='sp.SetUrlRequireLoginCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='sp.SetUrlRequireLoginCall.key', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='require_login', full_name='sp.SetUrlRequireLoginCall.require_login', index=1,
      number=2, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9404,
  serialized_end=9464,
)


_LISTUSERLEFTSHAREDFOLDERSCALL = _descriptor.Descriptor(
  name='ListUserLeftSharedFoldersCall',
  full_name='sp.ListUserLeftSharedFoldersCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_id', full_name='sp.ListUserLeftSharedFoldersCall.user_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9466,
  serialized_end=9514,
)

_SHAREFOLDERCALL.fields_by_name['subject_permissions'].message_type = common_pb2._PBSUBJECTPERMISSIONS
_LISTPENDINGFOLDERINVITATIONSREPLY.fields_by_name['invitation'].message_type = common_pb2._PBFOLDERINVITATION
_GETACLREPLY_PBSTOREACL.fields_by_name['subject_permissions'].message_type = common_pb2._PBSUBJECTPERMISSIONS
_GETACLREPLY_PBSTOREACL.containing_type = _GETACLREPLY
_GETACLREPLY.fields_by_name['store_acl'].message_type = _GETACLREPLY_PBSTOREACL
_UPDATEACLCALL.fields_by_name['permissions'].message_type = common_pb2._PBPERMISSIONS
_REGISTERDEVICECALL_INTERFACE.containing_type = _REGISTERDEVICECALL
_REGISTERDEVICECALL.fields_by_name['interfaces'].message_type = _REGISTERDEVICECALL_INTERFACE
_LISTORGANIZATIONMEMBERSREPLY_PBUSERANDLEVEL.fields_by_name['user'].message_type = _PBUSER
_LISTORGANIZATIONMEMBERSREPLY_PBUSERANDLEVEL.fields_by_name['level'].enum_type = _PBAUTHORIZATIONLEVEL
_LISTORGANIZATIONMEMBERSREPLY_PBUSERANDLEVEL.containing_type = _LISTORGANIZATIONMEMBERSREPLY
_LISTORGANIZATIONMEMBERSREPLY.fields_by_name['user_and_level'].message_type = _LISTORGANIZATIONMEMBERSREPLY_PBUSERANDLEVEL
_GETAUTHORIZATIONLEVELREPLY.fields_by_name['level'].enum_type = _PBAUTHORIZATIONLEVEL
_SETAUTHORIZATIONLEVELCALL.fields_by_name['auth_level'].enum_type = _PBAUTHORIZATIONLEVEL
_GETDEVICEINFOREPLY_PBDEVICEINFO.fields_by_name['owner'].message_type = _PBUSER
_GETDEVICEINFOREPLY_PBDEVICEINFO.containing_type = _GETDEVICEINFOREPLY
_GETDEVICEINFOREPLY.fields_by_name['device_info'].message_type = _GETDEVICEINFOREPLY_PBDEVICEINFO
_LISTUSERDEVICESREPLY_PBDEVICE.containing_type = _LISTUSERDEVICESREPLY
_LISTUSERDEVICESREPLY.fields_by_name['device'].message_type = _LISTUSERDEVICESREPLY_PBDEVICE
_LISTORGANIZATIONSHAREDFOLDERSREPLY.fields_by_name['shared_folder'].message_type = _PBSHAREDFOLDER
_PBSHAREDFOLDER_PBUSERPERMISSIONSANDSTATE.fields_by_name['user'].message_type = _PBUSER
_PBSHAREDFOLDER_PBUSERPERMISSIONSANDSTATE.fields_by_name['permissions'].message_type = common_pb2._PBPERMISSIONS
_PBSHAREDFOLDER_PBUSERPERMISSIONSANDSTATE.fields_by_name['state'].enum_type = _PBSHAREDFOLDERSTATE
_PBSHAREDFOLDER_PBUSERPERMISSIONSANDSTATE.containing_type = _PBSHAREDFOLDER
_PBSHAREDFOLDER_PBGROUPPERMISSIONS.fields_by_name['group'].message_type = _PBGROUP
_PBSHAREDFOLDER_PBGROUPPERMISSIONS.fields_by_name['permissions'].message_type = common_pb2._PBPERMISSIONS
_PBSHAREDFOLDER_PBGROUPPERMISSIONS.containing_type = _PBSHAREDFOLDER
_PBSHAREDFOLDER.fields_by_name['user_permissions_and_state'].message_type = _PBSHAREDFOLDER_PBUSERPERMISSIONSANDSTATE
_PBSHAREDFOLDER.fields_by_name['group_permissions'].message_type = _PBSHAREDFOLDER_PBGROUPPERMISSIONS
_PBSHAREDFOLDER.fields_by_name['requested_users_permissions_and_state'].message_type = _PBSHAREDFOLDER_PBUSERPERMISSIONSANDSTATE
_GETORGANIZATIONINVITATIONSREPLY_ORGANIZATIONINVITATION.containing_type = _GETORGANIZATIONINVITATIONSREPLY
_GETORGANIZATIONINVITATIONSREPLY.fields_by_name['organization_invitations'].message_type = _GETORGANIZATIONINVITATIONSREPLY_ORGANIZATIONINVITATION
_GETORGPREFERENCESREPLY.fields_by_name['level'].enum_type = _PBTWOFACTORENFORCEMENTLEVEL
_GETCOMMANDQUEUEHEADREPLY.fields_by_name['command'].message_type = cmd_pb2._COMMAND
_ACKCOMMANDQUEUEHEADREPLY.fields_by_name['command'].message_type = cmd_pb2._COMMAND
_LISTSHAREDFOLDERSREPLY.fields_by_name['shared_folder'].message_type = _PBSHAREDFOLDER
_LISTWHITELISTEDUSERSREPLY.fields_by_name['user'].message_type = _PBUSER
_CHECKQUOTACALL_PBSTOREUSAGE.containing_type = _CHECKQUOTACALL
_CHECKQUOTACALL.fields_by_name['store'].message_type = _CHECKQUOTACALL_PBSTOREUSAGE
_CHECKQUOTAREPLY_PBSTORESHOULDCOLLECT.containing_type = _CHECKQUOTAREPLY
_CHECKQUOTAREPLY.fields_by_name['store'].message_type = _CHECKQUOTAREPLY_PBSTORESHOULDCOLLECT
_CREATEURLREPLY.fields_by_name['url_info'].message_type = _PBRESTOBJECTURL
_GETURLINFOREPLY.fields_by_name['url_info'].message_type = _PBRESTOBJECTURL
_LISTURLSFORSTOREREPLY.fields_by_name['url'].message_type = _PBRESTOBJECTURL
_GETBACKUPCODESREPLY_BACKUPCODE.containing_type = _GETBACKUPCODESREPLY
_GETBACKUPCODESREPLY.fields_by_name['codes'].message_type = _GETBACKUPCODESREPLY_BACKUPCODE
_LISTGROUPSREPLY.fields_by_name['groups'].message_type = _PBGROUP
_LISTGROUPMEMBERSREPLY.fields_by_name['users'].message_type = _PBUSER
_SETTWOFACTORSETUPENFORCEMENTCALL.fields_by_name['level'].enum_type = _PBTWOFACTORENFORCEMENTLEVEL
_GETTWOFACTORSETUPENFORCEMENTREPLY.fields_by_name['level'].enum_type = _PBTWOFACTORENFORCEMENTLEVEL
_LISTGROUPSTATUSINSHAREDFOLDERREPLY_PBUSERANDSTATE.fields_by_name['user'].message_type = _PBUSER
_LISTGROUPSTATUSINSHAREDFOLDERREPLY_PBUSERANDSTATE.fields_by_name['state'].enum_type = _PBSHAREDFOLDERSTATE
_LISTGROUPSTATUSINSHAREDFOLDERREPLY_PBUSERANDSTATE.containing_type = _LISTGROUPSTATUSINSHAREDFOLDERREPLY
_LISTGROUPSTATUSINSHAREDFOLDERREPLY.fields_by_name['user_and_state'].message_type = _LISTGROUPSTATUSINSHAREDFOLDERREPLY_PBUSERANDSTATE
_SEARCHORGANIZATIONUSERSREPLY.fields_by_name['matching_users'].message_type = _PBUSER
DESCRIPTOR.message_types_by_name['SetDeviceOSFamilyAndNameCall'] = _SETDEVICEOSFAMILYANDNAMECALL
DESCRIPTOR.message_types_by_name['DeleteOrganizationInvitationForUserCall'] = _DELETEORGANIZATIONINVITATIONFORUSERCALL
DESCRIPTOR.message_types_by_name['ListOrganizationInvitedUsersReply'] = _LISTORGANIZATIONINVITEDUSERSREPLY
DESCRIPTOR.message_types_by_name['SignUpWithCodeCall'] = _SIGNUPWITHCODECALL
DESCRIPTOR.message_types_by_name['SignUpWithCodeReply'] = _SIGNUPWITHCODEREPLY
DESCRIPTOR.message_types_by_name['ResolveSignUpCodeCall'] = _RESOLVESIGNUPCODECALL
DESCRIPTOR.message_types_by_name['ResolveSignUpCodeReply'] = _RESOLVESIGNUPCODEREPLY
DESCRIPTOR.message_types_by_name['VerifyBatchSignUpCodeCall'] = _VERIFYBATCHSIGNUPCODECALL
DESCRIPTOR.message_types_by_name['RequestToSignUpCall'] = _REQUESTTOSIGNUPCALL
DESCRIPTOR.message_types_by_name['InviteToOrganizationCall'] = _INVITETOORGANIZATIONCALL
DESCRIPTOR.message_types_by_name['InviteToOrganizationReply'] = _INVITETOORGANIZATIONREPLY
DESCRIPTOR.message_types_by_name['AcceptOrganizationInvitationCall'] = _ACCEPTORGANIZATIONINVITATIONCALL
DESCRIPTOR.message_types_by_name['DeleteOrganizationInvitationCall'] = _DELETEORGANIZATIONINVITATIONCALL
DESCRIPTOR.message_types_by_name['ShareFolderCall'] = _SHAREFOLDERCALL
DESCRIPTOR.message_types_by_name['JoinSharedFolderCall'] = _JOINSHAREDFOLDERCALL
DESCRIPTOR.message_types_by_name['IgnoreSharedFolderCall'] = _IGNORESHAREDFOLDERCALL
DESCRIPTOR.message_types_by_name['LeaveSharedFolderCall'] = _LEAVESHAREDFOLDERCALL
DESCRIPTOR.message_types_by_name['SetSharedFolderNameCall'] = _SETSHAREDFOLDERNAMECALL
DESCRIPTOR.message_types_by_name['ListPendingFolderInvitationsReply'] = _LISTPENDINGFOLDERINVITATIONSREPLY
DESCRIPTOR.message_types_by_name['EmailUserCall'] = _EMAILUSERCALL
DESCRIPTOR.message_types_by_name['GetUserPreferencesCall'] = _GETUSERPREFERENCESCALL
DESCRIPTOR.message_types_by_name['GetUserPreferencesReply'] = _GETUSERPREFERENCESREPLY
DESCRIPTOR.message_types_by_name['GetUserSettingsTokenReply'] = _GETUSERSETTINGSTOKENREPLY
DESCRIPTOR.message_types_by_name['SetUserSettingsTokenCall'] = _SETUSERSETTINGSTOKENCALL
DESCRIPTOR.message_types_by_name['SetUserPreferencesCall'] = _SETUSERPREFERENCESCALL
DESCRIPTOR.message_types_by_name['GetACLCall'] = _GETACLCALL
DESCRIPTOR.message_types_by_name['GetACLReply'] = _GETACLREPLY
DESCRIPTOR.message_types_by_name['UpdateACLCall'] = _UPDATEACLCALL
DESCRIPTOR.message_types_by_name['DeleteACLCall'] = _DELETEACLCALL
DESCRIPTOR.message_types_by_name['VerifyEmailCall'] = _VERIFYEMAILCALL
DESCRIPTOR.message_types_by_name['GetTeamServerUserIDReply'] = _GETTEAMSERVERUSERIDREPLY
DESCRIPTOR.message_types_by_name['RegisterDeviceCall'] = _REGISTERDEVICECALL
DESCRIPTOR.message_types_by_name['RegisterDeviceReply'] = _REGISTERDEVICEREPLY
DESCRIPTOR.message_types_by_name['ListOrganizationMembersCall'] = _LISTORGANIZATIONMEMBERSCALL
DESCRIPTOR.message_types_by_name['ListOrganizationMembersReply'] = _LISTORGANIZATIONMEMBERSREPLY
DESCRIPTOR.message_types_by_name['GetOrganizationIDReply'] = _GETORGANIZATIONIDREPLY
DESCRIPTOR.message_types_by_name['GetAuthorizationLevelReply'] = _GETAUTHORIZATIONLEVELREPLY
DESCRIPTOR.message_types_by_name['PBUser'] = _PBUSER
DESCRIPTOR.message_types_by_name['PBGroup'] = _PBGROUP
DESCRIPTOR.message_types_by_name['SetAuthorizationLevelCall'] = _SETAUTHORIZATIONLEVELCALL
DESCRIPTOR.message_types_by_name['SendPasswordResetEmailCall'] = _SENDPASSWORDRESETEMAILCALL
DESCRIPTOR.message_types_by_name['ResetPasswordCall'] = _RESETPASSWORDCALL
DESCRIPTOR.message_types_by_name['ChangePasswordCall'] = _CHANGEPASSWORDCALL
DESCRIPTOR.message_types_by_name['GetUserCRLCall'] = _GETUSERCRLCALL
DESCRIPTOR.message_types_by_name['UnlinkDeviceCall'] = _UNLINKDEVICECALL
DESCRIPTOR.message_types_by_name['GetDeviceInfoCall'] = _GETDEVICEINFOCALL
DESCRIPTOR.message_types_by_name['GetDeviceInfoReply'] = _GETDEVICEINFOREPLY
DESCRIPTOR.message_types_by_name['ListUserDevicesCall'] = _LISTUSERDEVICESCALL
DESCRIPTOR.message_types_by_name['ListUserDevicesReply'] = _LISTUSERDEVICESREPLY
DESCRIPTOR.message_types_by_name['ListOrganizationSharedFoldersCall'] = _LISTORGANIZATIONSHAREDFOLDERSCALL
DESCRIPTOR.message_types_by_name['ListOrganizationSharedFoldersReply'] = _LISTORGANIZATIONSHAREDFOLDERSREPLY
DESCRIPTOR.message_types_by_name['ListUserJoinedSharedFoldersCall'] = _LISTUSERJOINEDSHAREDFOLDERSCALL
DESCRIPTOR.message_types_by_name['PBSharedFolder'] = _PBSHAREDFOLDER
DESCRIPTOR.message_types_by_name['GetOrganizationInvitationsReply'] = _GETORGANIZATIONINVITATIONSREPLY
DESCRIPTOR.message_types_by_name['GetOrgPreferencesReply'] = _GETORGPREFERENCESREPLY
DESCRIPTOR.message_types_by_name['SetOrgPreferencesCall'] = _SETORGPREFERENCESCALL
DESCRIPTOR.message_types_by_name['SetUnsubscribeEmailCall'] = _SETUNSUBSCRIBEEMAILCALL
DESCRIPTOR.message_types_by_name['GetUnsubscribeEmailReply'] = _GETUNSUBSCRIBEEMAILREPLY
DESCRIPTOR.message_types_by_name['PBFullName'] = _PBFULLNAME
DESCRIPTOR.message_types_by_name['GetCommandQueueHeadCall'] = _GETCOMMANDQUEUEHEADCALL
DESCRIPTOR.message_types_by_name['GetCommandQueueHeadReply'] = _GETCOMMANDQUEUEHEADREPLY
DESCRIPTOR.message_types_by_name['AckCommandQueueHeadCall'] = _ACKCOMMANDQUEUEHEADCALL
DESCRIPTOR.message_types_by_name['AckCommandQueueHeadReply'] = _ACKCOMMANDQUEUEHEADREPLY
DESCRIPTOR.message_types_by_name['RecertifyDeviceCall'] = _RECERTIFYDEVICECALL
DESCRIPTOR.message_types_by_name['RecertifyDeviceReply'] = _RECERTIFYDEVICEREPLY
DESCRIPTOR.message_types_by_name['SignInDeviceCall'] = _SIGNINDEVICECALL
DESCRIPTOR.message_types_by_name['SignInUserCall'] = _SIGNINUSERCALL
DESCRIPTOR.message_types_by_name['SignInUserReply'] = _SIGNINUSERREPLY
DESCRIPTOR.message_types_by_name['ExtAuthSessionNonces'] = _EXTAUTHSESSIONNONCES
DESCRIPTOR.message_types_by_name['ExtAuthSessionQuery'] = _EXTAUTHSESSIONQUERY
DESCRIPTOR.message_types_by_name['ExtAuthSessionAttributes'] = _EXTAUTHSESSIONATTRIBUTES
DESCRIPTOR.message_types_by_name['MobileAccessCode'] = _MOBILEACCESSCODE
DESCRIPTOR.message_types_by_name['AuthorizeAPIClientCall'] = _AUTHORIZEAPICLIENTCALL
DESCRIPTOR.message_types_by_name['AuthorizeAPIClientReply'] = _AUTHORIZEAPICLIENTREPLY
DESCRIPTOR.message_types_by_name['ListSharedFoldersCall'] = _LISTSHAREDFOLDERSCALL
DESCRIPTOR.message_types_by_name['ListSharedFoldersReply'] = _LISTSHAREDFOLDERSREPLY
DESCRIPTOR.message_types_by_name['DeactivateUserCall'] = _DEACTIVATEUSERCALL
DESCRIPTOR.message_types_by_name['AddUserToWhitelistCall'] = _ADDUSERTOWHITELISTCALL
DESCRIPTOR.message_types_by_name['RemoveUserFromWhitelistCall'] = _REMOVEUSERFROMWHITELISTCALL
DESCRIPTOR.message_types_by_name['ListWhitelistedUsersReply'] = _LISTWHITELISTEDUSERSREPLY
DESCRIPTOR.message_types_by_name['CheckQuotaCall'] = _CHECKQUOTACALL
DESCRIPTOR.message_types_by_name['CheckQuotaReply'] = _CHECKQUOTAREPLY
DESCRIPTOR.message_types_by_name['GetQuotaReply'] = _GETQUOTAREPLY
DESCRIPTOR.message_types_by_name['SetQuotaCall'] = _SETQUOTACALL
DESCRIPTOR.message_types_by_name['CreateUrlCall'] = _CREATEURLCALL
DESCRIPTOR.message_types_by_name['PBRestObjectUrl'] = _PBRESTOBJECTURL
DESCRIPTOR.message_types_by_name['CreateUrlReply'] = _CREATEURLREPLY
DESCRIPTOR.message_types_by_name['SetUrlExpiresCall'] = _SETURLEXPIRESCALL
DESCRIPTOR.message_types_by_name['RemoveUrlExpiresCall'] = _REMOVEURLEXPIRESCALL
DESCRIPTOR.message_types_by_name['GetUrlInfoCall'] = _GETURLINFOCALL
DESCRIPTOR.message_types_by_name['GetUrlInfoReply'] = _GETURLINFOREPLY
DESCRIPTOR.message_types_by_name['RemoveUrlCall'] = _REMOVEURLCALL
DESCRIPTOR.message_types_by_name['SetUrlPasswordCall'] = _SETURLPASSWORDCALL
DESCRIPTOR.message_types_by_name['RemoveUrlPasswordCall'] = _REMOVEURLPASSWORDCALL
DESCRIPTOR.message_types_by_name['ValidateUrlPasswordCall'] = _VALIDATEURLPASSWORDCALL
DESCRIPTOR.message_types_by_name['DestroySharedFolderCall'] = _DESTROYSHAREDFOLDERCALL
DESCRIPTOR.message_types_by_name['SendPriorityDefectEmailCall'] = _SENDPRIORITYDEFECTEMAILCALL
DESCRIPTOR.message_types_by_name['SetupTwoFactorCall'] = _SETUPTWOFACTORCALL
DESCRIPTOR.message_types_by_name['SetupTwoFactorReply'] = _SETUPTWOFACTORREPLY
DESCRIPTOR.message_types_by_name['SetTwoFactorEnforcementCall'] = _SETTWOFACTORENFORCEMENTCALL
DESCRIPTOR.message_types_by_name['ListUrlsForStoreCall'] = _LISTURLSFORSTORECALL
DESCRIPTOR.message_types_by_name['ListUrlsForStoreReply'] = _LISTURLSFORSTOREREPLY
DESCRIPTOR.message_types_by_name['ProvideSecondFactorCall'] = _PROVIDESECONDFACTORCALL
DESCRIPTOR.message_types_by_name['ProvideBackupCodeCall'] = _PROVIDEBACKUPCODECALL
DESCRIPTOR.message_types_by_name['GetBackupCodesReply'] = _GETBACKUPCODESREPLY
DESCRIPTOR.message_types_by_name['CreateGroupCall'] = _CREATEGROUPCALL
DESCRIPTOR.message_types_by_name['CreateGroupReply'] = _CREATEGROUPREPLY
DESCRIPTOR.message_types_by_name['SetGroupCommonNameCall'] = _SETGROUPCOMMONNAMECALL
DESCRIPTOR.message_types_by_name['AddGroupMembersCall'] = _ADDGROUPMEMBERSCALL
DESCRIPTOR.message_types_by_name['RemoveGroupMembersCall'] = _REMOVEGROUPMEMBERSCALL
DESCRIPTOR.message_types_by_name['DeleteGroupCall'] = _DELETEGROUPCALL
DESCRIPTOR.message_types_by_name['ListGroupsCall'] = _LISTGROUPSCALL
DESCRIPTOR.message_types_by_name['ListGroupsReply'] = _LISTGROUPSREPLY
DESCRIPTOR.message_types_by_name['ListGroupMembersCall'] = _LISTGROUPMEMBERSCALL
DESCRIPTOR.message_types_by_name['ListGroupMembersReply'] = _LISTGROUPMEMBERSREPLY
DESCRIPTOR.message_types_by_name['SetTwoFactorSetupEnforcementCall'] = _SETTWOFACTORSETUPENFORCEMENTCALL
DESCRIPTOR.message_types_by_name['GetTwoFactorSetupEnforcementReply'] = _GETTWOFACTORSETUPENFORCEMENTREPLY
DESCRIPTOR.message_types_by_name['ListGroupStatusInSharedFolderCall'] = _LISTGROUPSTATUSINSHAREDFOLDERCALL
DESCRIPTOR.message_types_by_name['ListGroupStatusInSharedFolderReply'] = _LISTGROUPSTATUSINSHAREDFOLDERREPLY
DESCRIPTOR.message_types_by_name['SearchOrganizationUsersCall'] = _SEARCHORGANIZATIONUSERSCALL
DESCRIPTOR.message_types_by_name['SearchOrganizationUsersReply'] = _SEARCHORGANIZATIONUSERSREPLY
DESCRIPTOR.message_types_by_name['SetUrlRequireLoginCall'] = _SETURLREQUIRELOGINCALL
DESCRIPTOR.message_types_by_name['ListUserLeftSharedFoldersCall'] = _LISTUSERLEFTSHAREDFOLDERSCALL
DESCRIPTOR.enum_types_by_name['PBAuthorizationLevel'] = _PBAUTHORIZATIONLEVEL
DESCRIPTOR.enum_types_by_name['PBSharedFolderState'] = _PBSHAREDFOLDERSTATE
DESCRIPTOR.enum_types_by_name['PBTwoFactorEnforcementLevel'] = _PBTWOFACTORENFORCEMENTLEVEL

SetDeviceOSFamilyAndNameCall = _reflection.GeneratedProtocolMessageType('SetDeviceOSFamilyAndNameCall', (_message.Message,), dict(
  DESCRIPTOR = _SETDEVICEOSFAMILYANDNAMECALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SetDeviceOSFamilyAndNameCall)
  ))
_sym_db.RegisterMessage(SetDeviceOSFamilyAndNameCall)

DeleteOrganizationInvitationForUserCall = _reflection.GeneratedProtocolMessageType('DeleteOrganizationInvitationForUserCall', (_message.Message,), dict(
  DESCRIPTOR = _DELETEORGANIZATIONINVITATIONFORUSERCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.DeleteOrganizationInvitationForUserCall)
  ))
_sym_db.RegisterMessage(DeleteOrganizationInvitationForUserCall)

ListOrganizationInvitedUsersReply = _reflection.GeneratedProtocolMessageType('ListOrganizationInvitedUsersReply', (_message.Message,), dict(
  DESCRIPTOR = _LISTORGANIZATIONINVITEDUSERSREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListOrganizationInvitedUsersReply)
  ))
_sym_db.RegisterMessage(ListOrganizationInvitedUsersReply)

SignUpWithCodeCall = _reflection.GeneratedProtocolMessageType('SignUpWithCodeCall', (_message.Message,), dict(
  DESCRIPTOR = _SIGNUPWITHCODECALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SignUpWithCodeCall)
  ))
_sym_db.RegisterMessage(SignUpWithCodeCall)

SignUpWithCodeReply = _reflection.GeneratedProtocolMessageType('SignUpWithCodeReply', (_message.Message,), dict(
  DESCRIPTOR = _SIGNUPWITHCODEREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SignUpWithCodeReply)
  ))
_sym_db.RegisterMessage(SignUpWithCodeReply)

ResolveSignUpCodeCall = _reflection.GeneratedProtocolMessageType('ResolveSignUpCodeCall', (_message.Message,), dict(
  DESCRIPTOR = _RESOLVESIGNUPCODECALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ResolveSignUpCodeCall)
  ))
_sym_db.RegisterMessage(ResolveSignUpCodeCall)

ResolveSignUpCodeReply = _reflection.GeneratedProtocolMessageType('ResolveSignUpCodeReply', (_message.Message,), dict(
  DESCRIPTOR = _RESOLVESIGNUPCODEREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ResolveSignUpCodeReply)
  ))
_sym_db.RegisterMessage(ResolveSignUpCodeReply)

VerifyBatchSignUpCodeCall = _reflection.GeneratedProtocolMessageType('VerifyBatchSignUpCodeCall', (_message.Message,), dict(
  DESCRIPTOR = _VERIFYBATCHSIGNUPCODECALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.VerifyBatchSignUpCodeCall)
  ))
_sym_db.RegisterMessage(VerifyBatchSignUpCodeCall)

RequestToSignUpCall = _reflection.GeneratedProtocolMessageType('RequestToSignUpCall', (_message.Message,), dict(
  DESCRIPTOR = _REQUESTTOSIGNUPCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.RequestToSignUpCall)
  ))
_sym_db.RegisterMessage(RequestToSignUpCall)

InviteToOrganizationCall = _reflection.GeneratedProtocolMessageType('InviteToOrganizationCall', (_message.Message,), dict(
  DESCRIPTOR = _INVITETOORGANIZATIONCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.InviteToOrganizationCall)
  ))
_sym_db.RegisterMessage(InviteToOrganizationCall)

InviteToOrganizationReply = _reflection.GeneratedProtocolMessageType('InviteToOrganizationReply', (_message.Message,), dict(
  DESCRIPTOR = _INVITETOORGANIZATIONREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.InviteToOrganizationReply)
  ))
_sym_db.RegisterMessage(InviteToOrganizationReply)

AcceptOrganizationInvitationCall = _reflection.GeneratedProtocolMessageType('AcceptOrganizationInvitationCall', (_message.Message,), dict(
  DESCRIPTOR = _ACCEPTORGANIZATIONINVITATIONCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.AcceptOrganizationInvitationCall)
  ))
_sym_db.RegisterMessage(AcceptOrganizationInvitationCall)

DeleteOrganizationInvitationCall = _reflection.GeneratedProtocolMessageType('DeleteOrganizationInvitationCall', (_message.Message,), dict(
  DESCRIPTOR = _DELETEORGANIZATIONINVITATIONCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.DeleteOrganizationInvitationCall)
  ))
_sym_db.RegisterMessage(DeleteOrganizationInvitationCall)

ShareFolderCall = _reflection.GeneratedProtocolMessageType('ShareFolderCall', (_message.Message,), dict(
  DESCRIPTOR = _SHAREFOLDERCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ShareFolderCall)
  ))
_sym_db.RegisterMessage(ShareFolderCall)

JoinSharedFolderCall = _reflection.GeneratedProtocolMessageType('JoinSharedFolderCall', (_message.Message,), dict(
  DESCRIPTOR = _JOINSHAREDFOLDERCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.JoinSharedFolderCall)
  ))
_sym_db.RegisterMessage(JoinSharedFolderCall)

IgnoreSharedFolderCall = _reflection.GeneratedProtocolMessageType('IgnoreSharedFolderCall', (_message.Message,), dict(
  DESCRIPTOR = _IGNORESHAREDFOLDERCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.IgnoreSharedFolderCall)
  ))
_sym_db.RegisterMessage(IgnoreSharedFolderCall)

LeaveSharedFolderCall = _reflection.GeneratedProtocolMessageType('LeaveSharedFolderCall', (_message.Message,), dict(
  DESCRIPTOR = _LEAVESHAREDFOLDERCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.LeaveSharedFolderCall)
  ))
_sym_db.RegisterMessage(LeaveSharedFolderCall)

SetSharedFolderNameCall = _reflection.GeneratedProtocolMessageType('SetSharedFolderNameCall', (_message.Message,), dict(
  DESCRIPTOR = _SETSHAREDFOLDERNAMECALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SetSharedFolderNameCall)
  ))
_sym_db.RegisterMessage(SetSharedFolderNameCall)

ListPendingFolderInvitationsReply = _reflection.GeneratedProtocolMessageType('ListPendingFolderInvitationsReply', (_message.Message,), dict(
  DESCRIPTOR = _LISTPENDINGFOLDERINVITATIONSREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListPendingFolderInvitationsReply)
  ))
_sym_db.RegisterMessage(ListPendingFolderInvitationsReply)

EmailUserCall = _reflection.GeneratedProtocolMessageType('EmailUserCall', (_message.Message,), dict(
  DESCRIPTOR = _EMAILUSERCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.EmailUserCall)
  ))
_sym_db.RegisterMessage(EmailUserCall)

GetUserPreferencesCall = _reflection.GeneratedProtocolMessageType('GetUserPreferencesCall', (_message.Message,), dict(
  DESCRIPTOR = _GETUSERPREFERENCESCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetUserPreferencesCall)
  ))
_sym_db.RegisterMessage(GetUserPreferencesCall)

GetUserPreferencesReply = _reflection.GeneratedProtocolMessageType('GetUserPreferencesReply', (_message.Message,), dict(
  DESCRIPTOR = _GETUSERPREFERENCESREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetUserPreferencesReply)
  ))
_sym_db.RegisterMessage(GetUserPreferencesReply)

GetUserSettingsTokenReply = _reflection.GeneratedProtocolMessageType('GetUserSettingsTokenReply', (_message.Message,), dict(
  DESCRIPTOR = _GETUSERSETTINGSTOKENREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetUserSettingsTokenReply)
  ))
_sym_db.RegisterMessage(GetUserSettingsTokenReply)

SetUserSettingsTokenCall = _reflection.GeneratedProtocolMessageType('SetUserSettingsTokenCall', (_message.Message,), dict(
  DESCRIPTOR = _SETUSERSETTINGSTOKENCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SetUserSettingsTokenCall)
  ))
_sym_db.RegisterMessage(SetUserSettingsTokenCall)

SetUserPreferencesCall = _reflection.GeneratedProtocolMessageType('SetUserPreferencesCall', (_message.Message,), dict(
  DESCRIPTOR = _SETUSERPREFERENCESCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SetUserPreferencesCall)
  ))
_sym_db.RegisterMessage(SetUserPreferencesCall)

GetACLCall = _reflection.GeneratedProtocolMessageType('GetACLCall', (_message.Message,), dict(
  DESCRIPTOR = _GETACLCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetACLCall)
  ))
_sym_db.RegisterMessage(GetACLCall)

GetACLReply = _reflection.GeneratedProtocolMessageType('GetACLReply', (_message.Message,), dict(

  PBStoreACL = _reflection.GeneratedProtocolMessageType('PBStoreACL', (_message.Message,), dict(
    DESCRIPTOR = _GETACLREPLY_PBSTOREACL,
    __module__ = 'sp_pb2'
    # @@protoc_insertion_point(class_scope:sp.GetACLReply.PBStoreACL)
    ))
  ,
  DESCRIPTOR = _GETACLREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetACLReply)
  ))
_sym_db.RegisterMessage(GetACLReply)
_sym_db.RegisterMessage(GetACLReply.PBStoreACL)

UpdateACLCall = _reflection.GeneratedProtocolMessageType('UpdateACLCall', (_message.Message,), dict(
  DESCRIPTOR = _UPDATEACLCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.UpdateACLCall)
  ))
_sym_db.RegisterMessage(UpdateACLCall)

DeleteACLCall = _reflection.GeneratedProtocolMessageType('DeleteACLCall', (_message.Message,), dict(
  DESCRIPTOR = _DELETEACLCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.DeleteACLCall)
  ))
_sym_db.RegisterMessage(DeleteACLCall)

VerifyEmailCall = _reflection.GeneratedProtocolMessageType('VerifyEmailCall', (_message.Message,), dict(
  DESCRIPTOR = _VERIFYEMAILCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.VerifyEmailCall)
  ))
_sym_db.RegisterMessage(VerifyEmailCall)

GetTeamServerUserIDReply = _reflection.GeneratedProtocolMessageType('GetTeamServerUserIDReply', (_message.Message,), dict(
  DESCRIPTOR = _GETTEAMSERVERUSERIDREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetTeamServerUserIDReply)
  ))
_sym_db.RegisterMessage(GetTeamServerUserIDReply)

RegisterDeviceCall = _reflection.GeneratedProtocolMessageType('RegisterDeviceCall', (_message.Message,), dict(

  Interface = _reflection.GeneratedProtocolMessageType('Interface', (_message.Message,), dict(
    DESCRIPTOR = _REGISTERDEVICECALL_INTERFACE,
    __module__ = 'sp_pb2'
    # @@protoc_insertion_point(class_scope:sp.RegisterDeviceCall.Interface)
    ))
  ,
  DESCRIPTOR = _REGISTERDEVICECALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.RegisterDeviceCall)
  ))
_sym_db.RegisterMessage(RegisterDeviceCall)
_sym_db.RegisterMessage(RegisterDeviceCall.Interface)

RegisterDeviceReply = _reflection.GeneratedProtocolMessageType('RegisterDeviceReply', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERDEVICEREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.RegisterDeviceReply)
  ))
_sym_db.RegisterMessage(RegisterDeviceReply)

ListOrganizationMembersCall = _reflection.GeneratedProtocolMessageType('ListOrganizationMembersCall', (_message.Message,), dict(
  DESCRIPTOR = _LISTORGANIZATIONMEMBERSCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListOrganizationMembersCall)
  ))
_sym_db.RegisterMessage(ListOrganizationMembersCall)

ListOrganizationMembersReply = _reflection.GeneratedProtocolMessageType('ListOrganizationMembersReply', (_message.Message,), dict(

  PBUserAndLevel = _reflection.GeneratedProtocolMessageType('PBUserAndLevel', (_message.Message,), dict(
    DESCRIPTOR = _LISTORGANIZATIONMEMBERSREPLY_PBUSERANDLEVEL,
    __module__ = 'sp_pb2'
    # @@protoc_insertion_point(class_scope:sp.ListOrganizationMembersReply.PBUserAndLevel)
    ))
  ,
  DESCRIPTOR = _LISTORGANIZATIONMEMBERSREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListOrganizationMembersReply)
  ))
_sym_db.RegisterMessage(ListOrganizationMembersReply)
_sym_db.RegisterMessage(ListOrganizationMembersReply.PBUserAndLevel)

GetOrganizationIDReply = _reflection.GeneratedProtocolMessageType('GetOrganizationIDReply', (_message.Message,), dict(
  DESCRIPTOR = _GETORGANIZATIONIDREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetOrganizationIDReply)
  ))
_sym_db.RegisterMessage(GetOrganizationIDReply)

GetAuthorizationLevelReply = _reflection.GeneratedProtocolMessageType('GetAuthorizationLevelReply', (_message.Message,), dict(
  DESCRIPTOR = _GETAUTHORIZATIONLEVELREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetAuthorizationLevelReply)
  ))
_sym_db.RegisterMessage(GetAuthorizationLevelReply)

PBUser = _reflection.GeneratedProtocolMessageType('PBUser', (_message.Message,), dict(
  DESCRIPTOR = _PBUSER,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.PBUser)
  ))
_sym_db.RegisterMessage(PBUser)

PBGroup = _reflection.GeneratedProtocolMessageType('PBGroup', (_message.Message,), dict(
  DESCRIPTOR = _PBGROUP,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.PBGroup)
  ))
_sym_db.RegisterMessage(PBGroup)

SetAuthorizationLevelCall = _reflection.GeneratedProtocolMessageType('SetAuthorizationLevelCall', (_message.Message,), dict(
  DESCRIPTOR = _SETAUTHORIZATIONLEVELCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SetAuthorizationLevelCall)
  ))
_sym_db.RegisterMessage(SetAuthorizationLevelCall)

SendPasswordResetEmailCall = _reflection.GeneratedProtocolMessageType('SendPasswordResetEmailCall', (_message.Message,), dict(
  DESCRIPTOR = _SENDPASSWORDRESETEMAILCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SendPasswordResetEmailCall)
  ))
_sym_db.RegisterMessage(SendPasswordResetEmailCall)

ResetPasswordCall = _reflection.GeneratedProtocolMessageType('ResetPasswordCall', (_message.Message,), dict(
  DESCRIPTOR = _RESETPASSWORDCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ResetPasswordCall)
  ))
_sym_db.RegisterMessage(ResetPasswordCall)

ChangePasswordCall = _reflection.GeneratedProtocolMessageType('ChangePasswordCall', (_message.Message,), dict(
  DESCRIPTOR = _CHANGEPASSWORDCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ChangePasswordCall)
  ))
_sym_db.RegisterMessage(ChangePasswordCall)

GetUserCRLCall = _reflection.GeneratedProtocolMessageType('GetUserCRLCall', (_message.Message,), dict(
  DESCRIPTOR = _GETUSERCRLCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetUserCRLCall)
  ))
_sym_db.RegisterMessage(GetUserCRLCall)

UnlinkDeviceCall = _reflection.GeneratedProtocolMessageType('UnlinkDeviceCall', (_message.Message,), dict(
  DESCRIPTOR = _UNLINKDEVICECALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.UnlinkDeviceCall)
  ))
_sym_db.RegisterMessage(UnlinkDeviceCall)

GetDeviceInfoCall = _reflection.GeneratedProtocolMessageType('GetDeviceInfoCall', (_message.Message,), dict(
  DESCRIPTOR = _GETDEVICEINFOCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetDeviceInfoCall)
  ))
_sym_db.RegisterMessage(GetDeviceInfoCall)

GetDeviceInfoReply = _reflection.GeneratedProtocolMessageType('GetDeviceInfoReply', (_message.Message,), dict(

  PBDeviceInfo = _reflection.GeneratedProtocolMessageType('PBDeviceInfo', (_message.Message,), dict(
    DESCRIPTOR = _GETDEVICEINFOREPLY_PBDEVICEINFO,
    __module__ = 'sp_pb2'
    # @@protoc_insertion_point(class_scope:sp.GetDeviceInfoReply.PBDeviceInfo)
    ))
  ,
  DESCRIPTOR = _GETDEVICEINFOREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetDeviceInfoReply)
  ))
_sym_db.RegisterMessage(GetDeviceInfoReply)
_sym_db.RegisterMessage(GetDeviceInfoReply.PBDeviceInfo)

ListUserDevicesCall = _reflection.GeneratedProtocolMessageType('ListUserDevicesCall', (_message.Message,), dict(
  DESCRIPTOR = _LISTUSERDEVICESCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListUserDevicesCall)
  ))
_sym_db.RegisterMessage(ListUserDevicesCall)

ListUserDevicesReply = _reflection.GeneratedProtocolMessageType('ListUserDevicesReply', (_message.Message,), dict(

  PBDevice = _reflection.GeneratedProtocolMessageType('PBDevice', (_message.Message,), dict(
    DESCRIPTOR = _LISTUSERDEVICESREPLY_PBDEVICE,
    __module__ = 'sp_pb2'
    # @@protoc_insertion_point(class_scope:sp.ListUserDevicesReply.PBDevice)
    ))
  ,
  DESCRIPTOR = _LISTUSERDEVICESREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListUserDevicesReply)
  ))
_sym_db.RegisterMessage(ListUserDevicesReply)
_sym_db.RegisterMessage(ListUserDevicesReply.PBDevice)

ListOrganizationSharedFoldersCall = _reflection.GeneratedProtocolMessageType('ListOrganizationSharedFoldersCall', (_message.Message,), dict(
  DESCRIPTOR = _LISTORGANIZATIONSHAREDFOLDERSCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListOrganizationSharedFoldersCall)
  ))
_sym_db.RegisterMessage(ListOrganizationSharedFoldersCall)

ListOrganizationSharedFoldersReply = _reflection.GeneratedProtocolMessageType('ListOrganizationSharedFoldersReply', (_message.Message,), dict(
  DESCRIPTOR = _LISTORGANIZATIONSHAREDFOLDERSREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListOrganizationSharedFoldersReply)
  ))
_sym_db.RegisterMessage(ListOrganizationSharedFoldersReply)

ListUserJoinedSharedFoldersCall = _reflection.GeneratedProtocolMessageType('ListUserJoinedSharedFoldersCall', (_message.Message,), dict(
  DESCRIPTOR = _LISTUSERJOINEDSHAREDFOLDERSCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListUserJoinedSharedFoldersCall)
  ))
_sym_db.RegisterMessage(ListUserJoinedSharedFoldersCall)

PBSharedFolder = _reflection.GeneratedProtocolMessageType('PBSharedFolder', (_message.Message,), dict(

  PBUserPermissionsAndState = _reflection.GeneratedProtocolMessageType('PBUserPermissionsAndState', (_message.Message,), dict(
    DESCRIPTOR = _PBSHAREDFOLDER_PBUSERPERMISSIONSANDSTATE,
    __module__ = 'sp_pb2'
    # @@protoc_insertion_point(class_scope:sp.PBSharedFolder.PBUserPermissionsAndState)
    ))
  ,

  PBGroupPermissions = _reflection.GeneratedProtocolMessageType('PBGroupPermissions', (_message.Message,), dict(
    DESCRIPTOR = _PBSHAREDFOLDER_PBGROUPPERMISSIONS,
    __module__ = 'sp_pb2'
    # @@protoc_insertion_point(class_scope:sp.PBSharedFolder.PBGroupPermissions)
    ))
  ,
  DESCRIPTOR = _PBSHAREDFOLDER,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.PBSharedFolder)
  ))
_sym_db.RegisterMessage(PBSharedFolder)
_sym_db.RegisterMessage(PBSharedFolder.PBUserPermissionsAndState)
_sym_db.RegisterMessage(PBSharedFolder.PBGroupPermissions)

GetOrganizationInvitationsReply = _reflection.GeneratedProtocolMessageType('GetOrganizationInvitationsReply', (_message.Message,), dict(

  OrganizationInvitation = _reflection.GeneratedProtocolMessageType('OrganizationInvitation', (_message.Message,), dict(
    DESCRIPTOR = _GETORGANIZATIONINVITATIONSREPLY_ORGANIZATIONINVITATION,
    __module__ = 'sp_pb2'
    # @@protoc_insertion_point(class_scope:sp.GetOrganizationInvitationsReply.OrganizationInvitation)
    ))
  ,
  DESCRIPTOR = _GETORGANIZATIONINVITATIONSREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetOrganizationInvitationsReply)
  ))
_sym_db.RegisterMessage(GetOrganizationInvitationsReply)
_sym_db.RegisterMessage(GetOrganizationInvitationsReply.OrganizationInvitation)

GetOrgPreferencesReply = _reflection.GeneratedProtocolMessageType('GetOrgPreferencesReply', (_message.Message,), dict(
  DESCRIPTOR = _GETORGPREFERENCESREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetOrgPreferencesReply)
  ))
_sym_db.RegisterMessage(GetOrgPreferencesReply)

SetOrgPreferencesCall = _reflection.GeneratedProtocolMessageType('SetOrgPreferencesCall', (_message.Message,), dict(
  DESCRIPTOR = _SETORGPREFERENCESCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SetOrgPreferencesCall)
  ))
_sym_db.RegisterMessage(SetOrgPreferencesCall)

SetUnsubscribeEmailCall = _reflection.GeneratedProtocolMessageType('SetUnsubscribeEmailCall', (_message.Message,), dict(
  DESCRIPTOR = _SETUNSUBSCRIBEEMAILCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SetUnsubscribeEmailCall)
  ))
_sym_db.RegisterMessage(SetUnsubscribeEmailCall)

GetUnsubscribeEmailReply = _reflection.GeneratedProtocolMessageType('GetUnsubscribeEmailReply', (_message.Message,), dict(
  DESCRIPTOR = _GETUNSUBSCRIBEEMAILREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetUnsubscribeEmailReply)
  ))
_sym_db.RegisterMessage(GetUnsubscribeEmailReply)

PBFullName = _reflection.GeneratedProtocolMessageType('PBFullName', (_message.Message,), dict(
  DESCRIPTOR = _PBFULLNAME,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.PBFullName)
  ))
_sym_db.RegisterMessage(PBFullName)

GetCommandQueueHeadCall = _reflection.GeneratedProtocolMessageType('GetCommandQueueHeadCall', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMMANDQUEUEHEADCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetCommandQueueHeadCall)
  ))
_sym_db.RegisterMessage(GetCommandQueueHeadCall)

GetCommandQueueHeadReply = _reflection.GeneratedProtocolMessageType('GetCommandQueueHeadReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMMANDQUEUEHEADREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetCommandQueueHeadReply)
  ))
_sym_db.RegisterMessage(GetCommandQueueHeadReply)

AckCommandQueueHeadCall = _reflection.GeneratedProtocolMessageType('AckCommandQueueHeadCall', (_message.Message,), dict(
  DESCRIPTOR = _ACKCOMMANDQUEUEHEADCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.AckCommandQueueHeadCall)
  ))
_sym_db.RegisterMessage(AckCommandQueueHeadCall)

AckCommandQueueHeadReply = _reflection.GeneratedProtocolMessageType('AckCommandQueueHeadReply', (_message.Message,), dict(
  DESCRIPTOR = _ACKCOMMANDQUEUEHEADREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.AckCommandQueueHeadReply)
  ))
_sym_db.RegisterMessage(AckCommandQueueHeadReply)

RecertifyDeviceCall = _reflection.GeneratedProtocolMessageType('RecertifyDeviceCall', (_message.Message,), dict(
  DESCRIPTOR = _RECERTIFYDEVICECALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.RecertifyDeviceCall)
  ))
_sym_db.RegisterMessage(RecertifyDeviceCall)

RecertifyDeviceReply = _reflection.GeneratedProtocolMessageType('RecertifyDeviceReply', (_message.Message,), dict(
  DESCRIPTOR = _RECERTIFYDEVICEREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.RecertifyDeviceReply)
  ))
_sym_db.RegisterMessage(RecertifyDeviceReply)

SignInDeviceCall = _reflection.GeneratedProtocolMessageType('SignInDeviceCall', (_message.Message,), dict(
  DESCRIPTOR = _SIGNINDEVICECALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SignInDeviceCall)
  ))
_sym_db.RegisterMessage(SignInDeviceCall)

SignInUserCall = _reflection.GeneratedProtocolMessageType('SignInUserCall', (_message.Message,), dict(
  DESCRIPTOR = _SIGNINUSERCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SignInUserCall)
  ))
_sym_db.RegisterMessage(SignInUserCall)

SignInUserReply = _reflection.GeneratedProtocolMessageType('SignInUserReply', (_message.Message,), dict(
  DESCRIPTOR = _SIGNINUSERREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SignInUserReply)
  ))
_sym_db.RegisterMessage(SignInUserReply)

ExtAuthSessionNonces = _reflection.GeneratedProtocolMessageType('ExtAuthSessionNonces', (_message.Message,), dict(
  DESCRIPTOR = _EXTAUTHSESSIONNONCES,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ExtAuthSessionNonces)
  ))
_sym_db.RegisterMessage(ExtAuthSessionNonces)

ExtAuthSessionQuery = _reflection.GeneratedProtocolMessageType('ExtAuthSessionQuery', (_message.Message,), dict(
  DESCRIPTOR = _EXTAUTHSESSIONQUERY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ExtAuthSessionQuery)
  ))
_sym_db.RegisterMessage(ExtAuthSessionQuery)

ExtAuthSessionAttributes = _reflection.GeneratedProtocolMessageType('ExtAuthSessionAttributes', (_message.Message,), dict(
  DESCRIPTOR = _EXTAUTHSESSIONATTRIBUTES,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ExtAuthSessionAttributes)
  ))
_sym_db.RegisterMessage(ExtAuthSessionAttributes)

MobileAccessCode = _reflection.GeneratedProtocolMessageType('MobileAccessCode', (_message.Message,), dict(
  DESCRIPTOR = _MOBILEACCESSCODE,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.MobileAccessCode)
  ))
_sym_db.RegisterMessage(MobileAccessCode)

AuthorizeAPIClientCall = _reflection.GeneratedProtocolMessageType('AuthorizeAPIClientCall', (_message.Message,), dict(
  DESCRIPTOR = _AUTHORIZEAPICLIENTCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.AuthorizeAPIClientCall)
  ))
_sym_db.RegisterMessage(AuthorizeAPIClientCall)

AuthorizeAPIClientReply = _reflection.GeneratedProtocolMessageType('AuthorizeAPIClientReply', (_message.Message,), dict(
  DESCRIPTOR = _AUTHORIZEAPICLIENTREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.AuthorizeAPIClientReply)
  ))
_sym_db.RegisterMessage(AuthorizeAPIClientReply)

ListSharedFoldersCall = _reflection.GeneratedProtocolMessageType('ListSharedFoldersCall', (_message.Message,), dict(
  DESCRIPTOR = _LISTSHAREDFOLDERSCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListSharedFoldersCall)
  ))
_sym_db.RegisterMessage(ListSharedFoldersCall)

ListSharedFoldersReply = _reflection.GeneratedProtocolMessageType('ListSharedFoldersReply', (_message.Message,), dict(
  DESCRIPTOR = _LISTSHAREDFOLDERSREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListSharedFoldersReply)
  ))
_sym_db.RegisterMessage(ListSharedFoldersReply)

DeactivateUserCall = _reflection.GeneratedProtocolMessageType('DeactivateUserCall', (_message.Message,), dict(
  DESCRIPTOR = _DEACTIVATEUSERCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.DeactivateUserCall)
  ))
_sym_db.RegisterMessage(DeactivateUserCall)

AddUserToWhitelistCall = _reflection.GeneratedProtocolMessageType('AddUserToWhitelistCall', (_message.Message,), dict(
  DESCRIPTOR = _ADDUSERTOWHITELISTCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.AddUserToWhitelistCall)
  ))
_sym_db.RegisterMessage(AddUserToWhitelistCall)

RemoveUserFromWhitelistCall = _reflection.GeneratedProtocolMessageType('RemoveUserFromWhitelistCall', (_message.Message,), dict(
  DESCRIPTOR = _REMOVEUSERFROMWHITELISTCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.RemoveUserFromWhitelistCall)
  ))
_sym_db.RegisterMessage(RemoveUserFromWhitelistCall)

ListWhitelistedUsersReply = _reflection.GeneratedProtocolMessageType('ListWhitelistedUsersReply', (_message.Message,), dict(
  DESCRIPTOR = _LISTWHITELISTEDUSERSREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListWhitelistedUsersReply)
  ))
_sym_db.RegisterMessage(ListWhitelistedUsersReply)

CheckQuotaCall = _reflection.GeneratedProtocolMessageType('CheckQuotaCall', (_message.Message,), dict(

  PBStoreUsage = _reflection.GeneratedProtocolMessageType('PBStoreUsage', (_message.Message,), dict(
    DESCRIPTOR = _CHECKQUOTACALL_PBSTOREUSAGE,
    __module__ = 'sp_pb2'
    # @@protoc_insertion_point(class_scope:sp.CheckQuotaCall.PBStoreUsage)
    ))
  ,
  DESCRIPTOR = _CHECKQUOTACALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.CheckQuotaCall)
  ))
_sym_db.RegisterMessage(CheckQuotaCall)
_sym_db.RegisterMessage(CheckQuotaCall.PBStoreUsage)

CheckQuotaReply = _reflection.GeneratedProtocolMessageType('CheckQuotaReply', (_message.Message,), dict(

  PBStoreShouldCollect = _reflection.GeneratedProtocolMessageType('PBStoreShouldCollect', (_message.Message,), dict(
    DESCRIPTOR = _CHECKQUOTAREPLY_PBSTORESHOULDCOLLECT,
    __module__ = 'sp_pb2'
    # @@protoc_insertion_point(class_scope:sp.CheckQuotaReply.PBStoreShouldCollect)
    ))
  ,
  DESCRIPTOR = _CHECKQUOTAREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.CheckQuotaReply)
  ))
_sym_db.RegisterMessage(CheckQuotaReply)
_sym_db.RegisterMessage(CheckQuotaReply.PBStoreShouldCollect)

GetQuotaReply = _reflection.GeneratedProtocolMessageType('GetQuotaReply', (_message.Message,), dict(
  DESCRIPTOR = _GETQUOTAREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetQuotaReply)
  ))
_sym_db.RegisterMessage(GetQuotaReply)

SetQuotaCall = _reflection.GeneratedProtocolMessageType('SetQuotaCall', (_message.Message,), dict(
  DESCRIPTOR = _SETQUOTACALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SetQuotaCall)
  ))
_sym_db.RegisterMessage(SetQuotaCall)

CreateUrlCall = _reflection.GeneratedProtocolMessageType('CreateUrlCall', (_message.Message,), dict(
  DESCRIPTOR = _CREATEURLCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.CreateUrlCall)
  ))
_sym_db.RegisterMessage(CreateUrlCall)

PBRestObjectUrl = _reflection.GeneratedProtocolMessageType('PBRestObjectUrl', (_message.Message,), dict(
  DESCRIPTOR = _PBRESTOBJECTURL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.PBRestObjectUrl)
  ))
_sym_db.RegisterMessage(PBRestObjectUrl)

CreateUrlReply = _reflection.GeneratedProtocolMessageType('CreateUrlReply', (_message.Message,), dict(
  DESCRIPTOR = _CREATEURLREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.CreateUrlReply)
  ))
_sym_db.RegisterMessage(CreateUrlReply)

SetUrlExpiresCall = _reflection.GeneratedProtocolMessageType('SetUrlExpiresCall', (_message.Message,), dict(
  DESCRIPTOR = _SETURLEXPIRESCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SetUrlExpiresCall)
  ))
_sym_db.RegisterMessage(SetUrlExpiresCall)

RemoveUrlExpiresCall = _reflection.GeneratedProtocolMessageType('RemoveUrlExpiresCall', (_message.Message,), dict(
  DESCRIPTOR = _REMOVEURLEXPIRESCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.RemoveUrlExpiresCall)
  ))
_sym_db.RegisterMessage(RemoveUrlExpiresCall)

GetUrlInfoCall = _reflection.GeneratedProtocolMessageType('GetUrlInfoCall', (_message.Message,), dict(
  DESCRIPTOR = _GETURLINFOCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetUrlInfoCall)
  ))
_sym_db.RegisterMessage(GetUrlInfoCall)

GetUrlInfoReply = _reflection.GeneratedProtocolMessageType('GetUrlInfoReply', (_message.Message,), dict(
  DESCRIPTOR = _GETURLINFOREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetUrlInfoReply)
  ))
_sym_db.RegisterMessage(GetUrlInfoReply)

RemoveUrlCall = _reflection.GeneratedProtocolMessageType('RemoveUrlCall', (_message.Message,), dict(
  DESCRIPTOR = _REMOVEURLCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.RemoveUrlCall)
  ))
_sym_db.RegisterMessage(RemoveUrlCall)

SetUrlPasswordCall = _reflection.GeneratedProtocolMessageType('SetUrlPasswordCall', (_message.Message,), dict(
  DESCRIPTOR = _SETURLPASSWORDCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SetUrlPasswordCall)
  ))
_sym_db.RegisterMessage(SetUrlPasswordCall)

RemoveUrlPasswordCall = _reflection.GeneratedProtocolMessageType('RemoveUrlPasswordCall', (_message.Message,), dict(
  DESCRIPTOR = _REMOVEURLPASSWORDCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.RemoveUrlPasswordCall)
  ))
_sym_db.RegisterMessage(RemoveUrlPasswordCall)

ValidateUrlPasswordCall = _reflection.GeneratedProtocolMessageType('ValidateUrlPasswordCall', (_message.Message,), dict(
  DESCRIPTOR = _VALIDATEURLPASSWORDCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ValidateUrlPasswordCall)
  ))
_sym_db.RegisterMessage(ValidateUrlPasswordCall)

DestroySharedFolderCall = _reflection.GeneratedProtocolMessageType('DestroySharedFolderCall', (_message.Message,), dict(
  DESCRIPTOR = _DESTROYSHAREDFOLDERCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.DestroySharedFolderCall)
  ))
_sym_db.RegisterMessage(DestroySharedFolderCall)

SendPriorityDefectEmailCall = _reflection.GeneratedProtocolMessageType('SendPriorityDefectEmailCall', (_message.Message,), dict(
  DESCRIPTOR = _SENDPRIORITYDEFECTEMAILCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SendPriorityDefectEmailCall)
  ))
_sym_db.RegisterMessage(SendPriorityDefectEmailCall)

SetupTwoFactorCall = _reflection.GeneratedProtocolMessageType('SetupTwoFactorCall', (_message.Message,), dict(
  DESCRIPTOR = _SETUPTWOFACTORCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SetupTwoFactorCall)
  ))
_sym_db.RegisterMessage(SetupTwoFactorCall)

SetupTwoFactorReply = _reflection.GeneratedProtocolMessageType('SetupTwoFactorReply', (_message.Message,), dict(
  DESCRIPTOR = _SETUPTWOFACTORREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SetupTwoFactorReply)
  ))
_sym_db.RegisterMessage(SetupTwoFactorReply)

SetTwoFactorEnforcementCall = _reflection.GeneratedProtocolMessageType('SetTwoFactorEnforcementCall', (_message.Message,), dict(
  DESCRIPTOR = _SETTWOFACTORENFORCEMENTCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SetTwoFactorEnforcementCall)
  ))
_sym_db.RegisterMessage(SetTwoFactorEnforcementCall)

ListUrlsForStoreCall = _reflection.GeneratedProtocolMessageType('ListUrlsForStoreCall', (_message.Message,), dict(
  DESCRIPTOR = _LISTURLSFORSTORECALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListUrlsForStoreCall)
  ))
_sym_db.RegisterMessage(ListUrlsForStoreCall)

ListUrlsForStoreReply = _reflection.GeneratedProtocolMessageType('ListUrlsForStoreReply', (_message.Message,), dict(
  DESCRIPTOR = _LISTURLSFORSTOREREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListUrlsForStoreReply)
  ))
_sym_db.RegisterMessage(ListUrlsForStoreReply)

ProvideSecondFactorCall = _reflection.GeneratedProtocolMessageType('ProvideSecondFactorCall', (_message.Message,), dict(
  DESCRIPTOR = _PROVIDESECONDFACTORCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ProvideSecondFactorCall)
  ))
_sym_db.RegisterMessage(ProvideSecondFactorCall)

ProvideBackupCodeCall = _reflection.GeneratedProtocolMessageType('ProvideBackupCodeCall', (_message.Message,), dict(
  DESCRIPTOR = _PROVIDEBACKUPCODECALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ProvideBackupCodeCall)
  ))
_sym_db.RegisterMessage(ProvideBackupCodeCall)

GetBackupCodesReply = _reflection.GeneratedProtocolMessageType('GetBackupCodesReply', (_message.Message,), dict(

  BackupCode = _reflection.GeneratedProtocolMessageType('BackupCode', (_message.Message,), dict(
    DESCRIPTOR = _GETBACKUPCODESREPLY_BACKUPCODE,
    __module__ = 'sp_pb2'
    # @@protoc_insertion_point(class_scope:sp.GetBackupCodesReply.BackupCode)
    ))
  ,
  DESCRIPTOR = _GETBACKUPCODESREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetBackupCodesReply)
  ))
_sym_db.RegisterMessage(GetBackupCodesReply)
_sym_db.RegisterMessage(GetBackupCodesReply.BackupCode)

CreateGroupCall = _reflection.GeneratedProtocolMessageType('CreateGroupCall', (_message.Message,), dict(
  DESCRIPTOR = _CREATEGROUPCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.CreateGroupCall)
  ))
_sym_db.RegisterMessage(CreateGroupCall)

CreateGroupReply = _reflection.GeneratedProtocolMessageType('CreateGroupReply', (_message.Message,), dict(
  DESCRIPTOR = _CREATEGROUPREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.CreateGroupReply)
  ))
_sym_db.RegisterMessage(CreateGroupReply)

SetGroupCommonNameCall = _reflection.GeneratedProtocolMessageType('SetGroupCommonNameCall', (_message.Message,), dict(
  DESCRIPTOR = _SETGROUPCOMMONNAMECALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SetGroupCommonNameCall)
  ))
_sym_db.RegisterMessage(SetGroupCommonNameCall)

AddGroupMembersCall = _reflection.GeneratedProtocolMessageType('AddGroupMembersCall', (_message.Message,), dict(
  DESCRIPTOR = _ADDGROUPMEMBERSCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.AddGroupMembersCall)
  ))
_sym_db.RegisterMessage(AddGroupMembersCall)

RemoveGroupMembersCall = _reflection.GeneratedProtocolMessageType('RemoveGroupMembersCall', (_message.Message,), dict(
  DESCRIPTOR = _REMOVEGROUPMEMBERSCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.RemoveGroupMembersCall)
  ))
_sym_db.RegisterMessage(RemoveGroupMembersCall)

DeleteGroupCall = _reflection.GeneratedProtocolMessageType('DeleteGroupCall', (_message.Message,), dict(
  DESCRIPTOR = _DELETEGROUPCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.DeleteGroupCall)
  ))
_sym_db.RegisterMessage(DeleteGroupCall)

ListGroupsCall = _reflection.GeneratedProtocolMessageType('ListGroupsCall', (_message.Message,), dict(
  DESCRIPTOR = _LISTGROUPSCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListGroupsCall)
  ))
_sym_db.RegisterMessage(ListGroupsCall)

ListGroupsReply = _reflection.GeneratedProtocolMessageType('ListGroupsReply', (_message.Message,), dict(
  DESCRIPTOR = _LISTGROUPSREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListGroupsReply)
  ))
_sym_db.RegisterMessage(ListGroupsReply)

ListGroupMembersCall = _reflection.GeneratedProtocolMessageType('ListGroupMembersCall', (_message.Message,), dict(
  DESCRIPTOR = _LISTGROUPMEMBERSCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListGroupMembersCall)
  ))
_sym_db.RegisterMessage(ListGroupMembersCall)

ListGroupMembersReply = _reflection.GeneratedProtocolMessageType('ListGroupMembersReply', (_message.Message,), dict(
  DESCRIPTOR = _LISTGROUPMEMBERSREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListGroupMembersReply)
  ))
_sym_db.RegisterMessage(ListGroupMembersReply)

SetTwoFactorSetupEnforcementCall = _reflection.GeneratedProtocolMessageType('SetTwoFactorSetupEnforcementCall', (_message.Message,), dict(
  DESCRIPTOR = _SETTWOFACTORSETUPENFORCEMENTCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SetTwoFactorSetupEnforcementCall)
  ))
_sym_db.RegisterMessage(SetTwoFactorSetupEnforcementCall)

GetTwoFactorSetupEnforcementReply = _reflection.GeneratedProtocolMessageType('GetTwoFactorSetupEnforcementReply', (_message.Message,), dict(
  DESCRIPTOR = _GETTWOFACTORSETUPENFORCEMENTREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.GetTwoFactorSetupEnforcementReply)
  ))
_sym_db.RegisterMessage(GetTwoFactorSetupEnforcementReply)

ListGroupStatusInSharedFolderCall = _reflection.GeneratedProtocolMessageType('ListGroupStatusInSharedFolderCall', (_message.Message,), dict(
  DESCRIPTOR = _LISTGROUPSTATUSINSHAREDFOLDERCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListGroupStatusInSharedFolderCall)
  ))
_sym_db.RegisterMessage(ListGroupStatusInSharedFolderCall)

ListGroupStatusInSharedFolderReply = _reflection.GeneratedProtocolMessageType('ListGroupStatusInSharedFolderReply', (_message.Message,), dict(

  PBUserAndState = _reflection.GeneratedProtocolMessageType('PBUserAndState', (_message.Message,), dict(
    DESCRIPTOR = _LISTGROUPSTATUSINSHAREDFOLDERREPLY_PBUSERANDSTATE,
    __module__ = 'sp_pb2'
    # @@protoc_insertion_point(class_scope:sp.ListGroupStatusInSharedFolderReply.PBUserAndState)
    ))
  ,
  DESCRIPTOR = _LISTGROUPSTATUSINSHAREDFOLDERREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListGroupStatusInSharedFolderReply)
  ))
_sym_db.RegisterMessage(ListGroupStatusInSharedFolderReply)
_sym_db.RegisterMessage(ListGroupStatusInSharedFolderReply.PBUserAndState)

SearchOrganizationUsersCall = _reflection.GeneratedProtocolMessageType('SearchOrganizationUsersCall', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHORGANIZATIONUSERSCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SearchOrganizationUsersCall)
  ))
_sym_db.RegisterMessage(SearchOrganizationUsersCall)

SearchOrganizationUsersReply = _reflection.GeneratedProtocolMessageType('SearchOrganizationUsersReply', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHORGANIZATIONUSERSREPLY,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SearchOrganizationUsersReply)
  ))
_sym_db.RegisterMessage(SearchOrganizationUsersReply)

SetUrlRequireLoginCall = _reflection.GeneratedProtocolMessageType('SetUrlRequireLoginCall', (_message.Message,), dict(
  DESCRIPTOR = _SETURLREQUIRELOGINCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.SetUrlRequireLoginCall)
  ))
_sym_db.RegisterMessage(SetUrlRequireLoginCall)

ListUserLeftSharedFoldersCall = _reflection.GeneratedProtocolMessageType('ListUserLeftSharedFoldersCall', (_message.Message,), dict(
  DESCRIPTOR = _LISTUSERLEFTSHAREDFOLDERSCALL,
  __module__ = 'sp_pb2'
  # @@protoc_insertion_point(class_scope:sp.ListUserLeftSharedFoldersCall)
  ))
_sym_db.RegisterMessage(ListUserLeftSharedFoldersCall)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\020com.aerofs.protoH\003'))
import abc
from rpc_service_pb2 import Payload
class SPService(object):
  __metaclass__ = abc.ABCMeta

  @abc.abstractmethod
  def request_to_sign_up(self, call):
    raise Exception()

  @abc.abstractmethod
  def sign_up_with_code(self, call):
    raise Exception()

  @abc.abstractmethod
  def resolve_sign_up_code(self, call):
    raise Exception()

  @abc.abstractmethod
  def send_email_verification(self, call):
    raise Exception()

  @abc.abstractmethod
  def verify_email(self, call):
    raise Exception()

  @abc.abstractmethod
  def sign_out(self, call):
    raise Exception()

  @abc.abstractmethod
  def register_device(self, call):
    raise Exception()

  @abc.abstractmethod
  def invite_to_organization(self, call):
    raise Exception()

  @abc.abstractmethod
  def accept_organization_invitation(self, call):
    raise Exception()

  @abc.abstractmethod
  def delete_organization_invitation(self, call):
    raise Exception()

  @abc.abstractmethod
  def noop(self, call):
    raise Exception()

  @abc.abstractmethod
  def share_folder(self, call):
    raise Exception()

  @abc.abstractmethod
  def join_shared_folder(self, call):
    raise Exception()

  @abc.abstractmethod
  def ignore_shared_folder_invitation(self, call):
    raise Exception()

  @abc.abstractmethod
  def leave_shared_folder(self, call):
    raise Exception()

  @abc.abstractmethod
  def list_pending_folder_invitations(self, call):
    raise Exception()

  @abc.abstractmethod
  def email_user(self, call):
    raise Exception()

  @abc.abstractmethod
  def get_user_preferences(self, call):
    raise Exception()

  @abc.abstractmethod
  def set_user_preferences(self, call):
    raise Exception()

  @abc.abstractmethod
  def list_organization_members(self, call):
    raise Exception()

  @abc.abstractmethod
  def send_password_reset_email(self, call):
    raise Exception()

  @abc.abstractmethod
  def reset_password(self, call):
    raise Exception()

  @abc.abstractmethod
  def change_password(self, call):
    raise Exception()

  @abc.abstractmethod
  def set_authorization_level(self, call):
    raise Exception()

  @abc.abstractmethod
  def deactivate_user(self, call):
    raise Exception()

  @abc.abstractmethod
  def update_acl(self, call):
    raise Exception()

  @abc.abstractmethod
  def delete_acl(self, call):
    raise Exception()

  @abc.abstractmethod
  def noop2(self, call):
    raise Exception()

  @abc.abstractmethod
  def noop3(self, call):
    raise Exception()

  @abc.abstractmethod
  def unlink_device(self, call):
    raise Exception()

  @abc.abstractmethod
  def get_device_info(self, call):
    raise Exception()

  @abc.abstractmethod
  def list_user_devices(self, call):
    raise Exception()

  @abc.abstractmethod
  def list_organization_shared_folders(self, call):
    raise Exception()

  @abc.abstractmethod
  def list_user_joined_shared_folders(self, call):
    raise Exception()

  @abc.abstractmethod
  def list_user_left_shared_folders(self, call):
    raise Exception()

  @abc.abstractmethod
  def get_organization_invitations(self, call):
    raise Exception()

  @abc.abstractmethod
  def get_org_preferences(self, call):
    raise Exception()

  @abc.abstractmethod
  def set_org_preferences(self, call):
    raise Exception()

  @abc.abstractmethod
  def unsubscribe_email(self, call):
    raise Exception()

  @abc.abstractmethod
  def get_authorization_level(self, call):
    raise Exception()

  @abc.abstractmethod
  def get_team_server_user_id(self, call):
    raise Exception()

  @abc.abstractmethod
  def register_team_server_device(self, call):
    raise Exception()

  @abc.abstractmethod
  def extend_session(self, call):
    raise Exception()

  @abc.abstractmethod
  def list_organization_invited_users(self, call):
    raise Exception()

  @abc.abstractmethod
  def get_command_queue_head(self, call):
    raise Exception()

  @abc.abstractmethod
  def ack_command_queue_head(self, call):
    raise Exception()

  @abc.abstractmethod
  def delete_organization_invitation_for_user(self, call):
    raise Exception()

  @abc.abstractmethod
  def set_device_osfamily_and_name(self, call):
    raise Exception()

  @abc.abstractmethod
  def get_acl(self, call):
    raise Exception()

  @abc.abstractmethod
  def recertify_device(self, call):
    raise Exception()

  @abc.abstractmethod
  def recertify_team_server_device(self, call):
    raise Exception()

  @abc.abstractmethod
  def get_organization_id(self, call):
    raise Exception()

  @abc.abstractmethod
  def credential_sign_in(self, call):
    raise Exception()

  @abc.abstractmethod
  def validate_credential(self, call):
    raise Exception()

  @abc.abstractmethod
  def sign_in_user(self, call):
    raise Exception()

  @abc.abstractmethod
  def sign_in_device(self, call):
    raise Exception()

  @abc.abstractmethod
  def ext_auth_begin_transaction(self, call):
    raise Exception()

  @abc.abstractmethod
  def ext_auth_get_session_attributes(self, call):
    raise Exception()

  @abc.abstractmethod
  def noop4(self, call):
    raise Exception()

  @abc.abstractmethod
  def authorize_apiclient(self, call):
    raise Exception()

  @abc.abstractmethod
  def list_shared_folders(self, call):
    raise Exception()

  @abc.abstractmethod
  def add_user_to_whitelist(self, call):
    raise Exception()

  @abc.abstractmethod
  def remove_user_from_whitelist(self, call):
    raise Exception()

  @abc.abstractmethod
  def list_whitelisted_users(self, call):
    raise Exception()

  @abc.abstractmethod
  def set_shared_folder_name(self, call):
    raise Exception()

  @abc.abstractmethod
  def check_quota(self, call):
    raise Exception()

  @abc.abstractmethod
  def set_quota(self, call):
    raise Exception()

  @abc.abstractmethod
  def remove_quota(self, call):
    raise Exception()

  @abc.abstractmethod
  def get_quota(self, call):
    raise Exception()

  @abc.abstractmethod
  def create_url(self, call):
    raise Exception()

  @abc.abstractmethod
  def get_url_info(self, call):
    raise Exception()

  @abc.abstractmethod
  def set_url_expires(self, call):
    raise Exception()

  @abc.abstractmethod
  def remove_url_expires(self, call):
    raise Exception()

  @abc.abstractmethod
  def remove_url(self, call):
    raise Exception()

  @abc.abstractmethod
  def set_url_password(self, call):
    raise Exception()

  @abc.abstractmethod
  def remove_url_password(self, call):
    raise Exception()

  @abc.abstractmethod
  def validate_url_password(self, call):
    raise Exception()

  @abc.abstractmethod
  def destroy_shared_folder(self, call):
    raise Exception()

  @abc.abstractmethod
  def send_priority_defect_email(self, call):
    raise Exception()

  @abc.abstractmethod
  def setup_two_factor(self, call):
    raise Exception()

  @abc.abstractmethod
  def set_two_factor_enforcement(self, call):
    raise Exception()

  @abc.abstractmethod
  def list_urls_for_store(self, call):
    raise Exception()

  @abc.abstractmethod
  def provide_second_factor(self, call):
    raise Exception()

  @abc.abstractmethod
  def provide_backup_code(self, call):
    raise Exception()

  @abc.abstractmethod
  def get_backup_codes(self, call):
    raise Exception()

  @abc.abstractmethod
  def create_group(self, call):
    raise Exception()

  @abc.abstractmethod
  def set_group_common_name(self, call):
    raise Exception()

  @abc.abstractmethod
  def add_group_members(self, call):
    raise Exception()

  @abc.abstractmethod
  def remove_group_members(self, call):
    raise Exception()

  @abc.abstractmethod
  def delete_group(self, call):
    raise Exception()

  @abc.abstractmethod
  def list_groups(self, call):
    raise Exception()

  @abc.abstractmethod
  def list_group_members(self, call):
    raise Exception()

  @abc.abstractmethod
  def set_two_factor_setup_enforcement(self, call):
    raise Exception()

  @abc.abstractmethod
  def get_two_factor_setup_enforcement(self, call):
    raise Exception()

  @abc.abstractmethod
  def list_group_status_in_shared_folder(self, call):
    raise Exception()

  @abc.abstractmethod
  def sync_groups_with_ldap_endpoint(self, call):
    raise Exception()

  @abc.abstractmethod
  def get_user_settings_token(self, call):
    raise Exception()

  @abc.abstractmethod
  def set_user_settings_token(self, call):
    raise Exception()

  @abc.abstractmethod
  def delete_user_settings_token(self, call):
    raise Exception()

  @abc.abstractmethod
  def search_organization_users(self, call):
    raise Exception()

  @abc.abstractmethod
  def set_url_require_login(self, call):
    raise Exception()

  @abc.abstractmethod
  def get_access_code_for_mobile(self, call):
    raise Exception()

  @abc.abstractmethod
  def get_access_code(self, call):
    raise Exception()

  @abc.abstractmethod
  def register_storage_agent(self, call):
    raise Exception()

class SPServiceReactor(object):
  """
  Auto-generated reactor class. Used server-side to react to bytes received on
  the protobuf communication channel.
  """

  class _METHOD_ENUMS_:
    ___ERROR___, _REQUEST_TO_SIGN_UP_, _SIGN_UP_WITH_CODE_, _RESOLVE_SIGN_UP_CODE_, _SEND_EMAIL_VERIFICATION_, _VERIFY_EMAIL_, _SIGN_OUT_, _REGISTER_DEVICE_, _INVITE_TO_ORGANIZATION_, _ACCEPT_ORGANIZATION_INVITATION_, _DELETE_ORGANIZATION_INVITATION_, _NOOP_, _SHARE_FOLDER_, _JOIN_SHARED_FOLDER_, _IGNORE_SHARED_FOLDER_INVITATION_, _LEAVE_SHARED_FOLDER_, _LIST_PENDING_FOLDER_INVITATIONS_, _EMAIL_USER_, _GET_USER_PREFERENCES_, _SET_USER_PREFERENCES_, _LIST_ORGANIZATION_MEMBERS_, _SEND_PASSWORD_RESET_EMAIL_, _RESET_PASSWORD_, _CHANGE_PASSWORD_, _SET_AUTHORIZATION_LEVEL_, _DEACTIVATE_USER_, _UPDATE_ACL_, _DELETE_ACL_, _NOOP2_, _NOOP3_, _UNLINK_DEVICE_, _GET_DEVICE_INFO_, _LIST_USER_DEVICES_, _LIST_ORGANIZATION_SHARED_FOLDERS_, _LIST_USER_JOINED_SHARED_FOLDERS_, _LIST_USER_LEFT_SHARED_FOLDERS_, _GET_ORGANIZATION_INVITATIONS_, _GET_ORG_PREFERENCES_, _SET_ORG_PREFERENCES_, _UNSUBSCRIBE_EMAIL_, _GET_AUTHORIZATION_LEVEL_, _GET_TEAM_SERVER_USER_ID_, _REGISTER_TEAM_SERVER_DEVICE_, _EXTEND_SESSION_, _LIST_ORGANIZATION_INVITED_USERS_, _GET_COMMAND_QUEUE_HEAD_, _ACK_COMMAND_QUEUE_HEAD_, _DELETE_ORGANIZATION_INVITATION_FOR_USER_, _SET_DEVICE_OSFAMILY_AND_NAME_, _GET_ACL_, _RECERTIFY_DEVICE_, _RECERTIFY_TEAM_SERVER_DEVICE_, _GET_ORGANIZATION_ID_, _CREDENTIAL_SIGN_IN_, _VALIDATE_CREDENTIAL_, _SIGN_IN_USER_, _SIGN_IN_DEVICE_, _EXT_AUTH_BEGIN_TRANSACTION_, _EXT_AUTH_GET_SESSION_ATTRIBUTES_, _NOOP4_, _AUTHORIZE_APICLIENT_, _LIST_SHARED_FOLDERS_, _ADD_USER_TO_WHITELIST_, _REMOVE_USER_FROM_WHITELIST_, _LIST_WHITELISTED_USERS_, _SET_SHARED_FOLDER_NAME_, _CHECK_QUOTA_, _SET_QUOTA_, _REMOVE_QUOTA_, _GET_QUOTA_, _CREATE_URL_, _GET_URL_INFO_, _SET_URL_EXPIRES_, _REMOVE_URL_EXPIRES_, _REMOVE_URL_, _SET_URL_PASSWORD_, _REMOVE_URL_PASSWORD_, _VALIDATE_URL_PASSWORD_, _DESTROY_SHARED_FOLDER_, _SEND_PRIORITY_DEFECT_EMAIL_, _SETUP_TWO_FACTOR_, _SET_TWO_FACTOR_ENFORCEMENT_, _LIST_URLS_FOR_STORE_, _PROVIDE_SECOND_FACTOR_, _PROVIDE_BACKUP_CODE_, _GET_BACKUP_CODES_, _CREATE_GROUP_, _SET_GROUP_COMMON_NAME_, _ADD_GROUP_MEMBERS_, _REMOVE_GROUP_MEMBERS_, _DELETE_GROUP_, _LIST_GROUPS_, _LIST_GROUP_MEMBERS_, _SET_TWO_FACTOR_SETUP_ENFORCEMENT_, _GET_TWO_FACTOR_SETUP_ENFORCEMENT_, _LIST_GROUP_STATUS_IN_SHARED_FOLDER_, _SYNC_GROUPS_WITH_LDAP_ENDPOINT_, _GET_USER_SETTINGS_TOKEN_, _SET_USER_SETTINGS_TOKEN_, _DELETE_USER_SETTINGS_TOKEN_, _SEARCH_ORGANIZATION_USERS_, _SET_URL_REQUIRE_LOGIN_, _GET_ACCESS_CODE_FOR_MOBILE_, _GET_ACCESS_CODE_, _REGISTER_STORAGE_AGENT_ = range(105)

  """
  Constructor. The service instance passed in must inherit from the abstract
  class SPService.
  """
  def __init__(self, service):
    self._service = service

  def react(self, received_bytes):

    payload = Payload.FromString(received_bytes)
    t = payload.type

    reply_payload = Payload()
    reply_payload.type = t

    try:
      if t == SPServiceReactor._METHOD_ENUMS_._REQUEST_TO_SIGN_UP_:
        call = RequestToSignUpCall.FromString(payload.payload_data)
        reply = self._service.request_to_sign_up(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SIGN_UP_WITH_CODE_:
        call = SignUpWithCodeCall.FromString(payload.payload_data)
        reply = self._service.sign_up_with_code(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._RESOLVE_SIGN_UP_CODE_:
        call = ResolveSignUpCodeCall.FromString(payload.payload_data)
        reply = self._service.resolve_sign_up_code(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SEND_EMAIL_VERIFICATION_:
        reply = self._service.send_email_verification()

      elif t == SPServiceReactor._METHOD_ENUMS_._VERIFY_EMAIL_:
        call = VerifyEmailCall.FromString(payload.payload_data)
        reply = self._service.verify_email(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SIGN_OUT_:
        reply = self._service.sign_out()

      elif t == SPServiceReactor._METHOD_ENUMS_._REGISTER_DEVICE_:
        call = RegisterDeviceCall.FromString(payload.payload_data)
        reply = self._service.register_device(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._INVITE_TO_ORGANIZATION_:
        call = InviteToOrganizationCall.FromString(payload.payload_data)
        reply = self._service.invite_to_organization(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._ACCEPT_ORGANIZATION_INVITATION_:
        call = AcceptOrganizationInvitationCall.FromString(payload.payload_data)
        reply = self._service.accept_organization_invitation(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._DELETE_ORGANIZATION_INVITATION_:
        call = DeleteOrganizationInvitationCall.FromString(payload.payload_data)
        reply = self._service.delete_organization_invitation(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._NOOP_:
        reply = self._service.noop()

      elif t == SPServiceReactor._METHOD_ENUMS_._SHARE_FOLDER_:
        call = ShareFolderCall.FromString(payload.payload_data)
        reply = self._service.share_folder(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._JOIN_SHARED_FOLDER_:
        call = JoinSharedFolderCall.FromString(payload.payload_data)
        reply = self._service.join_shared_folder(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._IGNORE_SHARED_FOLDER_INVITATION_:
        call = IgnoreSharedFolderCall.FromString(payload.payload_data)
        reply = self._service.ignore_shared_folder_invitation(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._LEAVE_SHARED_FOLDER_:
        call = LeaveSharedFolderCall.FromString(payload.payload_data)
        reply = self._service.leave_shared_folder(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._LIST_PENDING_FOLDER_INVITATIONS_:
        reply = self._service.list_pending_folder_invitations()

      elif t == SPServiceReactor._METHOD_ENUMS_._EMAIL_USER_:
        call = EmailUserCall.FromString(payload.payload_data)
        reply = self._service.email_user(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._GET_USER_PREFERENCES_:
        call = GetUserPreferencesCall.FromString(payload.payload_data)
        reply = self._service.get_user_preferences(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SET_USER_PREFERENCES_:
        call = SetUserPreferencesCall.FromString(payload.payload_data)
        reply = self._service.set_user_preferences(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._LIST_ORGANIZATION_MEMBERS_:
        call = ListOrganizationMembersCall.FromString(payload.payload_data)
        reply = self._service.list_organization_members(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SEND_PASSWORD_RESET_EMAIL_:
        call = SendPasswordResetEmailCall.FromString(payload.payload_data)
        reply = self._service.send_password_reset_email(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._RESET_PASSWORD_:
        call = ResetPasswordCall.FromString(payload.payload_data)
        reply = self._service.reset_password(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._CHANGE_PASSWORD_:
        call = ChangePasswordCall.FromString(payload.payload_data)
        reply = self._service.change_password(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SET_AUTHORIZATION_LEVEL_:
        call = SetAuthorizationLevelCall.FromString(payload.payload_data)
        reply = self._service.set_authorization_level(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._DEACTIVATE_USER_:
        call = DeactivateUserCall.FromString(payload.payload_data)
        reply = self._service.deactivate_user(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._UPDATE_ACL_:
        call = UpdateACLCall.FromString(payload.payload_data)
        reply = self._service.update_acl(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._DELETE_ACL_:
        call = DeleteACLCall.FromString(payload.payload_data)
        reply = self._service.delete_acl(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._NOOP2_:
        call = GetUserCRLCall.FromString(payload.payload_data)
        reply = self._service.noop2(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._NOOP3_:
        reply = self._service.noop3()

      elif t == SPServiceReactor._METHOD_ENUMS_._UNLINK_DEVICE_:
        call = UnlinkDeviceCall.FromString(payload.payload_data)
        reply = self._service.unlink_device(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._GET_DEVICE_INFO_:
        call = GetDeviceInfoCall.FromString(payload.payload_data)
        reply = self._service.get_device_info(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._LIST_USER_DEVICES_:
        call = ListUserDevicesCall.FromString(payload.payload_data)
        reply = self._service.list_user_devices(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._LIST_ORGANIZATION_SHARED_FOLDERS_:
        call = ListOrganizationSharedFoldersCall.FromString(payload.payload_data)
        reply = self._service.list_organization_shared_folders(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._LIST_USER_JOINED_SHARED_FOLDERS_:
        call = ListUserJoinedSharedFoldersCall.FromString(payload.payload_data)
        reply = self._service.list_user_joined_shared_folders(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._LIST_USER_LEFT_SHARED_FOLDERS_:
        call = ListUserLeftSharedFoldersCall.FromString(payload.payload_data)
        reply = self._service.list_user_left_shared_folders(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._GET_ORGANIZATION_INVITATIONS_:
        reply = self._service.get_organization_invitations()

      elif t == SPServiceReactor._METHOD_ENUMS_._GET_ORG_PREFERENCES_:
        reply = self._service.get_org_preferences()

      elif t == SPServiceReactor._METHOD_ENUMS_._SET_ORG_PREFERENCES_:
        call = SetOrgPreferencesCall.FromString(payload.payload_data)
        reply = self._service.set_org_preferences(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._UNSUBSCRIBE_EMAIL_:
        call = SetUnsubscribeEmailCall.FromString(payload.payload_data)
        reply = self._service.unsubscribe_email(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._GET_AUTHORIZATION_LEVEL_:
        reply = self._service.get_authorization_level()

      elif t == SPServiceReactor._METHOD_ENUMS_._GET_TEAM_SERVER_USER_ID_:
        reply = self._service.get_team_server_user_id()

      elif t == SPServiceReactor._METHOD_ENUMS_._REGISTER_TEAM_SERVER_DEVICE_:
        call = RegisterDeviceCall.FromString(payload.payload_data)
        reply = self._service.register_team_server_device(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._EXTEND_SESSION_:
        reply = self._service.extend_session()

      elif t == SPServiceReactor._METHOD_ENUMS_._LIST_ORGANIZATION_INVITED_USERS_:
        reply = self._service.list_organization_invited_users()

      elif t == SPServiceReactor._METHOD_ENUMS_._GET_COMMAND_QUEUE_HEAD_:
        call = GetCommandQueueHeadCall.FromString(payload.payload_data)
        reply = self._service.get_command_queue_head(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._ACK_COMMAND_QUEUE_HEAD_:
        call = AckCommandQueueHeadCall.FromString(payload.payload_data)
        reply = self._service.ack_command_queue_head(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._DELETE_ORGANIZATION_INVITATION_FOR_USER_:
        call = DeleteOrganizationInvitationForUserCall.FromString(payload.payload_data)
        reply = self._service.delete_organization_invitation_for_user(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SET_DEVICE_OSFAMILY_AND_NAME_:
        call = SetDeviceOSFamilyAndNameCall.FromString(payload.payload_data)
        reply = self._service.set_device_osfamily_and_name(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._GET_ACL_:
        call = GetACLCall.FromString(payload.payload_data)
        reply = self._service.get_acl(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._RECERTIFY_DEVICE_:
        call = RecertifyDeviceCall.FromString(payload.payload_data)
        reply = self._service.recertify_device(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._RECERTIFY_TEAM_SERVER_DEVICE_:
        call = RecertifyDeviceCall.FromString(payload.payload_data)
        reply = self._service.recertify_team_server_device(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._GET_ORGANIZATION_ID_:
        reply = self._service.get_organization_id()

      elif t == SPServiceReactor._METHOD_ENUMS_._CREDENTIAL_SIGN_IN_:
        call = SignInUserCall.FromString(payload.payload_data)
        reply = self._service.credential_sign_in(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._VALIDATE_CREDENTIAL_:
        call = SignInUserCall.FromString(payload.payload_data)
        reply = self._service.validate_credential(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SIGN_IN_USER_:
        call = SignInUserCall.FromString(payload.payload_data)
        reply = self._service.sign_in_user(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SIGN_IN_DEVICE_:
        call = SignInDeviceCall.FromString(payload.payload_data)
        reply = self._service.sign_in_device(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._EXT_AUTH_BEGIN_TRANSACTION_:
        reply = self._service.ext_auth_begin_transaction()

      elif t == SPServiceReactor._METHOD_ENUMS_._EXT_AUTH_GET_SESSION_ATTRIBUTES_:
        call = ExtAuthSessionQuery.FromString(payload.payload_data)
        reply = self._service.ext_auth_get_session_attributes(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._NOOP4_:
        reply = self._service.noop4()

      elif t == SPServiceReactor._METHOD_ENUMS_._AUTHORIZE_APICLIENT_:
        call = AuthorizeAPIClientCall.FromString(payload.payload_data)
        reply = self._service.authorize_apiclient(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._LIST_SHARED_FOLDERS_:
        call = ListSharedFoldersCall.FromString(payload.payload_data)
        reply = self._service.list_shared_folders(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._ADD_USER_TO_WHITELIST_:
        call = AddUserToWhitelistCall.FromString(payload.payload_data)
        reply = self._service.add_user_to_whitelist(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._REMOVE_USER_FROM_WHITELIST_:
        call = RemoveUserFromWhitelistCall.FromString(payload.payload_data)
        reply = self._service.remove_user_from_whitelist(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._LIST_WHITELISTED_USERS_:
        reply = self._service.list_whitelisted_users()

      elif t == SPServiceReactor._METHOD_ENUMS_._SET_SHARED_FOLDER_NAME_:
        call = SetSharedFolderNameCall.FromString(payload.payload_data)
        reply = self._service.set_shared_folder_name(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._CHECK_QUOTA_:
        call = CheckQuotaCall.FromString(payload.payload_data)
        reply = self._service.check_quota(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SET_QUOTA_:
        call = SetQuotaCall.FromString(payload.payload_data)
        reply = self._service.set_quota(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._REMOVE_QUOTA_:
        reply = self._service.remove_quota()

      elif t == SPServiceReactor._METHOD_ENUMS_._GET_QUOTA_:
        reply = self._service.get_quota()

      elif t == SPServiceReactor._METHOD_ENUMS_._CREATE_URL_:
        call = CreateUrlCall.FromString(payload.payload_data)
        reply = self._service.create_url(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._GET_URL_INFO_:
        call = GetUrlInfoCall.FromString(payload.payload_data)
        reply = self._service.get_url_info(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SET_URL_EXPIRES_:
        call = SetUrlExpiresCall.FromString(payload.payload_data)
        reply = self._service.set_url_expires(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._REMOVE_URL_EXPIRES_:
        call = RemoveUrlExpiresCall.FromString(payload.payload_data)
        reply = self._service.remove_url_expires(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._REMOVE_URL_:
        call = RemoveUrlCall.FromString(payload.payload_data)
        reply = self._service.remove_url(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SET_URL_PASSWORD_:
        call = SetUrlPasswordCall.FromString(payload.payload_data)
        reply = self._service.set_url_password(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._REMOVE_URL_PASSWORD_:
        call = RemoveUrlPasswordCall.FromString(payload.payload_data)
        reply = self._service.remove_url_password(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._VALIDATE_URL_PASSWORD_:
        call = ValidateUrlPasswordCall.FromString(payload.payload_data)
        reply = self._service.validate_url_password(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._DESTROY_SHARED_FOLDER_:
        call = DestroySharedFolderCall.FromString(payload.payload_data)
        reply = self._service.destroy_shared_folder(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SEND_PRIORITY_DEFECT_EMAIL_:
        call = SendPriorityDefectEmailCall.FromString(payload.payload_data)
        reply = self._service.send_priority_defect_email(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SETUP_TWO_FACTOR_:
        reply = self._service.setup_two_factor()

      elif t == SPServiceReactor._METHOD_ENUMS_._SET_TWO_FACTOR_ENFORCEMENT_:
        call = SetTwoFactorEnforcementCall.FromString(payload.payload_data)
        reply = self._service.set_two_factor_enforcement(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._LIST_URLS_FOR_STORE_:
        call = ListUrlsForStoreCall.FromString(payload.payload_data)
        reply = self._service.list_urls_for_store(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._PROVIDE_SECOND_FACTOR_:
        call = ProvideSecondFactorCall.FromString(payload.payload_data)
        reply = self._service.provide_second_factor(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._PROVIDE_BACKUP_CODE_:
        call = ProvideBackupCodeCall.FromString(payload.payload_data)
        reply = self._service.provide_backup_code(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._GET_BACKUP_CODES_:
        reply = self._service.get_backup_codes()

      elif t == SPServiceReactor._METHOD_ENUMS_._CREATE_GROUP_:
        call = CreateGroupCall.FromString(payload.payload_data)
        reply = self._service.create_group(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SET_GROUP_COMMON_NAME_:
        call = SetGroupCommonNameCall.FromString(payload.payload_data)
        reply = self._service.set_group_common_name(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._ADD_GROUP_MEMBERS_:
        call = AddGroupMembersCall.FromString(payload.payload_data)
        reply = self._service.add_group_members(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._REMOVE_GROUP_MEMBERS_:
        call = RemoveGroupMembersCall.FromString(payload.payload_data)
        reply = self._service.remove_group_members(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._DELETE_GROUP_:
        call = DeleteGroupCall.FromString(payload.payload_data)
        reply = self._service.delete_group(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._LIST_GROUPS_:
        call = ListGroupsCall.FromString(payload.payload_data)
        reply = self._service.list_groups(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._LIST_GROUP_MEMBERS_:
        call = ListGroupMembersCall.FromString(payload.payload_data)
        reply = self._service.list_group_members(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SET_TWO_FACTOR_SETUP_ENFORCEMENT_:
        call = SetTwoFactorSetupEnforcementCall.FromString(payload.payload_data)
        reply = self._service.set_two_factor_setup_enforcement(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._GET_TWO_FACTOR_SETUP_ENFORCEMENT_:
        reply = self._service.get_two_factor_setup_enforcement()

      elif t == SPServiceReactor._METHOD_ENUMS_._LIST_GROUP_STATUS_IN_SHARED_FOLDER_:
        call = ListGroupStatusInSharedFolderCall.FromString(payload.payload_data)
        reply = self._service.list_group_status_in_shared_folder(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SYNC_GROUPS_WITH_LDAP_ENDPOINT_:
        reply = self._service.sync_groups_with_ldap_endpoint()

      elif t == SPServiceReactor._METHOD_ENUMS_._GET_USER_SETTINGS_TOKEN_:
        reply = self._service.get_user_settings_token()

      elif t == SPServiceReactor._METHOD_ENUMS_._SET_USER_SETTINGS_TOKEN_:
        call = SetUserSettingsTokenCall.FromString(payload.payload_data)
        reply = self._service.set_user_settings_token(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._DELETE_USER_SETTINGS_TOKEN_:
        reply = self._service.delete_user_settings_token()

      elif t == SPServiceReactor._METHOD_ENUMS_._SEARCH_ORGANIZATION_USERS_:
        call = SearchOrganizationUsersCall.FromString(payload.payload_data)
        reply = self._service.search_organization_users(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._SET_URL_REQUIRE_LOGIN_:
        call = SetUrlRequireLoginCall.FromString(payload.payload_data)
        reply = self._service.set_url_require_login(call)

      elif t == SPServiceReactor._METHOD_ENUMS_._GET_ACCESS_CODE_FOR_MOBILE_:
        reply = self._service.get_access_code_for_mobile()

      elif t == SPServiceReactor._METHOD_ENUMS_._GET_ACCESS_CODE_:
        reply = self._service.get_access_code()

      elif t == SPServiceReactor._METHOD_ENUMS_._REGISTER_STORAGE_AGENT_:
        call = RegisterDeviceCall.FromString(payload.payload_data)
        reply = self._service.register_storage_agent(call)

      else:
        raise Exception("Invalid RPC call.")

    except Exception, msg:
      reply_payload.type = SPServiceReactor._METHOD_ENUMS_.___ERROR___
      reply = self._service.encode_error(msg)

    reply_payload.payload_data = reply.SerializeToString()
    return reply_payload.SerializeToString()

class SPServiceRpcStub(object):
  '''
  Auto-generated class that implements the method stubs
  of the service specified in the .proto file.
  '''

  class _METHOD_ENUMS_:
    ___ERROR___, _REQUEST_TO_SIGN_UP_, _SIGN_UP_WITH_CODE_, _RESOLVE_SIGN_UP_CODE_, _SEND_EMAIL_VERIFICATION_, _VERIFY_EMAIL_, _SIGN_OUT_, _REGISTER_DEVICE_, _INVITE_TO_ORGANIZATION_, _ACCEPT_ORGANIZATION_INVITATION_, _DELETE_ORGANIZATION_INVITATION_, _NOOP_, _SHARE_FOLDER_, _JOIN_SHARED_FOLDER_, _IGNORE_SHARED_FOLDER_INVITATION_, _LEAVE_SHARED_FOLDER_, _LIST_PENDING_FOLDER_INVITATIONS_, _EMAIL_USER_, _GET_USER_PREFERENCES_, _SET_USER_PREFERENCES_, _LIST_ORGANIZATION_MEMBERS_, _SEND_PASSWORD_RESET_EMAIL_, _RESET_PASSWORD_, _CHANGE_PASSWORD_, _SET_AUTHORIZATION_LEVEL_, _DEACTIVATE_USER_, _UPDATE_ACL_, _DELETE_ACL_, _NOOP2_, _NOOP3_, _UNLINK_DEVICE_, _GET_DEVICE_INFO_, _LIST_USER_DEVICES_, _LIST_ORGANIZATION_SHARED_FOLDERS_, _LIST_USER_JOINED_SHARED_FOLDERS_, _LIST_USER_LEFT_SHARED_FOLDERS_, _GET_ORGANIZATION_INVITATIONS_, _GET_ORG_PREFERENCES_, _SET_ORG_PREFERENCES_, _UNSUBSCRIBE_EMAIL_, _GET_AUTHORIZATION_LEVEL_, _GET_TEAM_SERVER_USER_ID_, _REGISTER_TEAM_SERVER_DEVICE_, _EXTEND_SESSION_, _LIST_ORGANIZATION_INVITED_USERS_, _GET_COMMAND_QUEUE_HEAD_, _ACK_COMMAND_QUEUE_HEAD_, _DELETE_ORGANIZATION_INVITATION_FOR_USER_, _SET_DEVICE_OSFAMILY_AND_NAME_, _GET_ACL_, _RECERTIFY_DEVICE_, _RECERTIFY_TEAM_SERVER_DEVICE_, _GET_ORGANIZATION_ID_, _CREDENTIAL_SIGN_IN_, _VALIDATE_CREDENTIAL_, _SIGN_IN_USER_, _SIGN_IN_DEVICE_, _EXT_AUTH_BEGIN_TRANSACTION_, _EXT_AUTH_GET_SESSION_ATTRIBUTES_, _NOOP4_, _AUTHORIZE_APICLIENT_, _LIST_SHARED_FOLDERS_, _ADD_USER_TO_WHITELIST_, _REMOVE_USER_FROM_WHITELIST_, _LIST_WHITELISTED_USERS_, _SET_SHARED_FOLDER_NAME_, _CHECK_QUOTA_, _SET_QUOTA_, _REMOVE_QUOTA_, _GET_QUOTA_, _CREATE_URL_, _GET_URL_INFO_, _SET_URL_EXPIRES_, _REMOVE_URL_EXPIRES_, _REMOVE_URL_, _SET_URL_PASSWORD_, _REMOVE_URL_PASSWORD_, _VALIDATE_URL_PASSWORD_, _DESTROY_SHARED_FOLDER_, _SEND_PRIORITY_DEFECT_EMAIL_, _SETUP_TWO_FACTOR_, _SET_TWO_FACTOR_ENFORCEMENT_, _LIST_URLS_FOR_STORE_, _PROVIDE_SECOND_FACTOR_, _PROVIDE_BACKUP_CODE_, _GET_BACKUP_CODES_, _CREATE_GROUP_, _SET_GROUP_COMMON_NAME_, _ADD_GROUP_MEMBERS_, _REMOVE_GROUP_MEMBERS_, _DELETE_GROUP_, _LIST_GROUPS_, _LIST_GROUP_MEMBERS_, _SET_TWO_FACTOR_SETUP_ENFORCEMENT_, _GET_TWO_FACTOR_SETUP_ENFORCEMENT_, _LIST_GROUP_STATUS_IN_SHARED_FOLDER_, _SYNC_GROUPS_WITH_LDAP_ENDPOINT_, _GET_USER_SETTINGS_TOKEN_, _SET_USER_SETTINGS_TOKEN_, _DELETE_USER_SETTINGS_TOKEN_, _SEARCH_ORGANIZATION_USERS_, _SET_URL_REQUIRE_LOGIN_, _GET_ACCESS_CODE_FOR_MOBILE_, _GET_ACCESS_CODE_, _REGISTER_STORAGE_AGENT_ = range(105)

  def __init__(self, connectionService):
    '''
    Takes an object that
    has the following method signatures:

      def do_rpc(self, bytes_to_send):
          return response_bytes

      def decode_error(self, errorProtobufMessage):
          return Exception

    bytes_to_send and response_bytes represent serialized
    Protobuf messages.
    '''
    self.connection = connectionService

  def _send_data(self, messageType, bytes):
    payload = rpc_service_pb2.Payload()
    payload.type = messageType
    payload.payload_data = bytes

    bytes_response = self.connection.do_rpc(payload.SerializeToString())
    reply = rpc_service_pb2.Payload.FromString(bytes_response)

    if reply.type == SPServiceRpcStub._METHOD_ENUMS_.___ERROR___:
      # Error
      error_message = common_pb2.PBException()
      error_message.ParseFromString(reply.payload_data)
      raise self.connection.decode_error(error_message)

    return reply.payload_data

  def request_to_sign_up(self, email_address):
    m = RequestToSignUpCall()
    
    m.email_address = email_address
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._REQUEST_TO_SIGN_UP_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def sign_up_with_code(self, signup_code, password, first_name, last_name):
    m = SignUpWithCodeCall()
    
    m.signup_code = signup_code
    m.password = password
    m.first_name = first_name
    m.last_name = last_name
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SIGN_UP_WITH_CODE_, m.SerializeToString())
    return SignUpWithCodeReply.FromString(d)

  def resolve_sign_up_code(self, code):
    m = ResolveSignUpCodeCall()
    
    m.code = code
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._RESOLVE_SIGN_UP_CODE_, m.SerializeToString())
    return ResolveSignUpCodeReply.FromString(d)

  def send_email_verification(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SEND_EMAIL_VERIFICATION_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def verify_email(self, verification_code):
    m = VerifyEmailCall()
    
    m.verification_code = verification_code
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._VERIFY_EMAIL_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def sign_out(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SIGN_OUT_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def register_device(self, device_id, csr, os_family, os_name, device_name, interfaces, token):
    m = RegisterDeviceCall()
    
    m.device_id = device_id
    m.csr = csr
    m.os_family = os_family
    m.os_name = os_name
    m.device_name = device_name
    m.interfaces.extend(interfaces)
    if token is not None: m.token = token
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._REGISTER_DEVICE_, m.SerializeToString())
    return RegisterDeviceReply.FromString(d)

  def invite_to_organization(self, email_address):
    m = InviteToOrganizationCall()
    
    m.email_address = email_address
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._INVITE_TO_ORGANIZATION_, m.SerializeToString())
    return InviteToOrganizationReply.FromString(d)

  def accept_organization_invitation(self, organization_id):
    m = AcceptOrganizationInvitationCall()
    
    m.organization_id = organization_id
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._ACCEPT_ORGANIZATION_INVITATION_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def delete_organization_invitation(self, organization_id):
    m = DeleteOrganizationInvitationCall()
    
    m.organization_id = organization_id
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._DELETE_ORGANIZATION_INVITATION_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def noop(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._NOOP_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def share_folder(self, folder_name, share_id, subject_permissions, note, external, suppress_sharing_rules_warnings):
    m = ShareFolderCall()
    
    m.folder_name = folder_name
    m.share_id = share_id
    m.subject_permissions.extend(subject_permissions)
    if note is not None: m.note = note
    if external is not None: m.external = external
    if suppress_sharing_rules_warnings is not None: m.suppress_sharing_rules_warnings = suppress_sharing_rules_warnings
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SHARE_FOLDER_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def join_shared_folder(self, shared_id, external):
    m = JoinSharedFolderCall()
    
    m.shared_id = shared_id
    if external is not None: m.external = external
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._JOIN_SHARED_FOLDER_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def ignore_shared_folder_invitation(self, shared_id):
    m = IgnoreSharedFolderCall()
    
    m.shared_id = shared_id
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._IGNORE_SHARED_FOLDER_INVITATION_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def leave_shared_folder(self, shared_id):
    m = LeaveSharedFolderCall()
    
    m.shared_id = shared_id
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._LEAVE_SHARED_FOLDER_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def list_pending_folder_invitations(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._LIST_PENDING_FOLDER_INVITATIONS_, m.SerializeToString())
    return ListPendingFolderInvitationsReply.FromString(d)

  def email_user(self, subject, body):
    m = EmailUserCall()
    
    m.subject = subject
    m.body = body
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._EMAIL_USER_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def get_user_preferences(self, device_id):
    m = GetUserPreferencesCall()
    
    if device_id is not None: m.device_id = device_id
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._GET_USER_PREFERENCES_, m.SerializeToString())
    return GetUserPreferencesReply.FromString(d)

  def set_user_preferences(self, user_id, first_name, last_name, device_id, device_name):
    m = SetUserPreferencesCall()
    
    m.user_id = user_id
    if first_name is not None: m.first_name = first_name
    if last_name is not None: m.last_name = last_name
    if device_id is not None: m.device_id = device_id
    if device_name is not None: m.device_name = device_name
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SET_USER_PREFERENCES_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def list_organization_members(self, max_results, offset, search_string):
    m = ListOrganizationMembersCall()
    
    m.max_results = max_results
    m.offset = offset
    if search_string is not None: m.search_string = search_string
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._LIST_ORGANIZATION_MEMBERS_, m.SerializeToString())
    return ListOrganizationMembersReply.FromString(d)

  def send_password_reset_email(self, user_email):
    m = SendPasswordResetEmailCall()
    
    m.user_email = user_email
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SEND_PASSWORD_RESET_EMAIL_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def reset_password(self, password_reset_token, new_credentials):
    m = ResetPasswordCall()
    
    m.password_reset_token = password_reset_token
    m.new_credentials = new_credentials
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._RESET_PASSWORD_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def change_password(self, old_credentials, new_credentials):
    m = ChangePasswordCall()
    
    m.old_credentials = old_credentials
    m.new_credentials = new_credentials
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._CHANGE_PASSWORD_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def set_authorization_level(self, user_email, auth_level):
    m = SetAuthorizationLevelCall()
    
    m.user_email = user_email
    m.auth_level = auth_level
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SET_AUTHORIZATION_LEVEL_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def deactivate_user(self, user_id, erase_devices):
    m = DeactivateUserCall()
    
    m.user_id = user_id
    m.erase_devices = erase_devices
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._DEACTIVATE_USER_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def update_acl(self, store_id, subject, permissions, suppress_sharing_rules_warnings):
    m = UpdateACLCall()
    
    m.store_id = store_id
    m.subject = subject
    m.permissions.CopyFrom(permissions)
    if suppress_sharing_rules_warnings is not None: m.suppress_sharing_rules_warnings = suppress_sharing_rules_warnings
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._UPDATE_ACL_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def delete_acl(self, store_id, subject):
    m = DeleteACLCall()
    
    m.store_id = store_id
    m.subject = subject
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._DELETE_ACL_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def noop2(self, crl_epoch):
    m = GetUserCRLCall()
    
    m.crl_epoch = crl_epoch
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._NOOP2_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def noop3(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._NOOP3_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def unlink_device(self, device_id, erase):
    m = UnlinkDeviceCall()
    
    m.device_id = device_id
    m.erase = erase
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._UNLINK_DEVICE_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def get_device_info(self, device_id):
    m = GetDeviceInfoCall()
    
    m.device_id.extend(device_id)
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._GET_DEVICE_INFO_, m.SerializeToString())
    return GetDeviceInfoReply.FromString(d)

  def list_user_devices(self, user_id):
    m = ListUserDevicesCall()
    
    m.user_id = user_id
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._LIST_USER_DEVICES_, m.SerializeToString())
    return ListUserDevicesReply.FromString(d)

  def list_organization_shared_folders(self, max_results, offset, search_string):
    m = ListOrganizationSharedFoldersCall()
    
    m.max_results = max_results
    m.offset = offset
    if search_string is not None: m.search_string = search_string
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._LIST_ORGANIZATION_SHARED_FOLDERS_, m.SerializeToString())
    return ListOrganizationSharedFoldersReply.FromString(d)

  def list_user_joined_shared_folders(self, user_id, max_results, offset, search_string):
    m = ListUserJoinedSharedFoldersCall()
    
    m.user_id = user_id
    m.max_results = max_results
    m.offset = offset
    if search_string is not None: m.search_string = search_string
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._LIST_USER_JOINED_SHARED_FOLDERS_, m.SerializeToString())
    return ListSharedFoldersReply.FromString(d)

  def list_user_left_shared_folders(self, user_id):
    m = ListUserLeftSharedFoldersCall()
    
    m.user_id = user_id
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._LIST_USER_LEFT_SHARED_FOLDERS_, m.SerializeToString())
    return ListSharedFoldersReply.FromString(d)

  def get_organization_invitations(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._GET_ORGANIZATION_INVITATIONS_, m.SerializeToString())
    return GetOrganizationInvitationsReply.FromString(d)

  def get_org_preferences(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._GET_ORG_PREFERENCES_, m.SerializeToString())
    return GetOrgPreferencesReply.FromString(d)

  def set_org_preferences(self, org_name, organization_contact_phone):
    m = SetOrgPreferencesCall()
    
    if org_name is not None: m.org_name = org_name
    if organization_contact_phone is not None: m.organization_contact_phone = organization_contact_phone
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SET_ORG_PREFERENCES_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def unsubscribe_email(self, unsubscribe_token):
    m = SetUnsubscribeEmailCall()
    
    m.unsubscribe_token = unsubscribe_token
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._UNSUBSCRIBE_EMAIL_, m.SerializeToString())
    return GetUnsubscribeEmailReply.FromString(d)

  def get_authorization_level(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._GET_AUTHORIZATION_LEVEL_, m.SerializeToString())
    return GetAuthorizationLevelReply.FromString(d)

  def get_team_server_user_id(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._GET_TEAM_SERVER_USER_ID_, m.SerializeToString())
    return GetTeamServerUserIDReply.FromString(d)

  def register_team_server_device(self, device_id, csr, os_family, os_name, device_name, interfaces, token):
    m = RegisterDeviceCall()
    
    m.device_id = device_id
    m.csr = csr
    m.os_family = os_family
    m.os_name = os_name
    m.device_name = device_name
    m.interfaces.extend(interfaces)
    if token is not None: m.token = token
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._REGISTER_TEAM_SERVER_DEVICE_, m.SerializeToString())
    return RegisterDeviceReply.FromString(d)

  def extend_session(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._EXTEND_SESSION_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def list_organization_invited_users(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._LIST_ORGANIZATION_INVITED_USERS_, m.SerializeToString())
    return ListOrganizationInvitedUsersReply.FromString(d)

  def get_command_queue_head(self, device_id):
    m = GetCommandQueueHeadCall()
    
    m.device_id = device_id
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._GET_COMMAND_QUEUE_HEAD_, m.SerializeToString())
    return GetCommandQueueHeadReply.FromString(d)

  def ack_command_queue_head(self, device_id, epoch, error):
    m = AckCommandQueueHeadCall()
    
    m.device_id = device_id
    m.epoch = epoch
    m.error = error
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._ACK_COMMAND_QUEUE_HEAD_, m.SerializeToString())
    return AckCommandQueueHeadReply.FromString(d)

  def delete_organization_invitation_for_user(self, user_id):
    m = DeleteOrganizationInvitationForUserCall()
    
    m.user_id = user_id
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._DELETE_ORGANIZATION_INVITATION_FOR_USER_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def set_device_osfamily_and_name(self, device_id, os_family, os_name):
    m = SetDeviceOSFamilyAndNameCall()
    
    m.device_id = device_id
    m.os_family = os_family
    m.os_name = os_name
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SET_DEVICE_OSFAMILY_AND_NAME_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def get_acl(self, epoch):
    m = GetACLCall()
    
    m.epoch = epoch
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._GET_ACL_, m.SerializeToString())
    return GetACLReply.FromString(d)

  def recertify_device(self, device_id, csr):
    m = RecertifyDeviceCall()
    
    m.device_id = device_id
    m.csr = csr
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._RECERTIFY_DEVICE_, m.SerializeToString())
    return RecertifyDeviceReply.FromString(d)

  def recertify_team_server_device(self, device_id, csr):
    m = RecertifyDeviceCall()
    
    m.device_id = device_id
    m.csr = csr
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._RECERTIFY_TEAM_SERVER_DEVICE_, m.SerializeToString())
    return RecertifyDeviceReply.FromString(d)

  def get_organization_id(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._GET_ORGANIZATION_ID_, m.SerializeToString())
    return GetOrganizationIDReply.FromString(d)

  def credential_sign_in(self, user_id, credential):
    m = SignInUserCall()
    
    m.user_id = user_id
    m.credential = credential
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._CREDENTIAL_SIGN_IN_, m.SerializeToString())
    return SignInUserReply.FromString(d)

  def validate_credential(self, user_id, credential):
    m = SignInUserCall()
    
    m.user_id = user_id
    m.credential = credential
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._VALIDATE_CREDENTIAL_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def sign_in_user(self, user_id, credential):
    m = SignInUserCall()
    
    m.user_id = user_id
    m.credential = credential
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SIGN_IN_USER_, m.SerializeToString())
    return SignInUserReply.FromString(d)

  def sign_in_device(self, user_id, did):
    m = SignInDeviceCall()
    
    m.user_id = user_id
    m.did = did
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SIGN_IN_DEVICE_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def ext_auth_begin_transaction(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._EXT_AUTH_BEGIN_TRANSACTION_, m.SerializeToString())
    return ExtAuthSessionNonces.FromString(d)

  def ext_auth_get_session_attributes(self, sessionNonce):
    m = ExtAuthSessionQuery()
    
    m.sessionNonce = sessionNonce
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._EXT_AUTH_GET_SESSION_ATTRIBUTES_, m.SerializeToString())
    return ExtAuthSessionAttributes.FromString(d)

  def noop4(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._NOOP4_, m.SerializeToString())
    return MobileAccessCode.FromString(d)

  def authorize_apiclient(self, accessCode, deviceName):
    m = AuthorizeAPIClientCall()
    
    if accessCode is not None: m.accessCode = accessCode
    if deviceName is not None: m.deviceName = deviceName
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._AUTHORIZE_APICLIENT_, m.SerializeToString())
    return AuthorizeAPIClientReply.FromString(d)

  def list_shared_folders(self, store_id):
    m = ListSharedFoldersCall()
    
    m.store_id.extend(store_id)
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._LIST_SHARED_FOLDERS_, m.SerializeToString())
    return ListSharedFoldersReply.FromString(d)

  def add_user_to_whitelist(self, user_email):
    m = AddUserToWhitelistCall()
    
    m.user_email = user_email
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._ADD_USER_TO_WHITELIST_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def remove_user_from_whitelist(self, user_email):
    m = RemoveUserFromWhitelistCall()
    
    m.user_email = user_email
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._REMOVE_USER_FROM_WHITELIST_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def list_whitelisted_users(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._LIST_WHITELISTED_USERS_, m.SerializeToString())
    return ListWhitelistedUsersReply.FromString(d)

  def set_shared_folder_name(self, share_id, folder_name):
    m = SetSharedFolderNameCall()
    
    m.share_id = share_id
    m.folder_name = folder_name
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SET_SHARED_FOLDER_NAME_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def check_quota(self, store):
    m = CheckQuotaCall()
    
    m.store.extend(store)
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._CHECK_QUOTA_, m.SerializeToString())
    return CheckQuotaReply.FromString(d)

  def set_quota(self, quota):
    m = SetQuotaCall()
    
    m.quota = quota
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SET_QUOTA_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def remove_quota(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._REMOVE_QUOTA_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def get_quota(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._GET_QUOTA_, m.SerializeToString())
    return GetQuotaReply.FromString(d)

  def create_url(self, soid):
    m = CreateUrlCall()
    
    m.soid = soid
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._CREATE_URL_, m.SerializeToString())
    return CreateUrlReply.FromString(d)

  def get_url_info(self, key, password):
    m = GetUrlInfoCall()
    
    m.key = key
    if password is not None: m.password = password
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._GET_URL_INFO_, m.SerializeToString())
    return GetUrlInfoReply.FromString(d)

  def set_url_expires(self, key, expires):
    m = SetUrlExpiresCall()
    
    m.key = key
    m.expires = expires
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SET_URL_EXPIRES_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def remove_url_expires(self, key):
    m = RemoveUrlExpiresCall()
    
    m.key = key
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._REMOVE_URL_EXPIRES_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def remove_url(self, key):
    m = RemoveUrlCall()
    
    m.key = key
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._REMOVE_URL_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def set_url_password(self, key, password):
    m = SetUrlPasswordCall()
    
    m.key = key
    m.password = password
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SET_URL_PASSWORD_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def remove_url_password(self, key):
    m = RemoveUrlPasswordCall()
    
    m.key = key
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._REMOVE_URL_PASSWORD_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def validate_url_password(self, key, password):
    m = ValidateUrlPasswordCall()
    
    m.key = key
    m.password = password
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._VALIDATE_URL_PASSWORD_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def destroy_shared_folder(self, shared_id):
    m = DestroySharedFolderCall()
    
    m.shared_id = shared_id
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._DESTROY_SHARED_FOLDER_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def send_priority_defect_email(self, defect_id, contact_email, subject, message):
    m = SendPriorityDefectEmailCall()
    
    m.defect_id = defect_id
    m.contact_email = contact_email
    m.subject = subject
    m.message = message
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SEND_PRIORITY_DEFECT_EMAIL_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def setup_two_factor(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SETUP_TWO_FACTOR_, m.SerializeToString())
    return SetupTwoFactorReply.FromString(d)

  def set_two_factor_enforcement(self, enforce, current_code, user_id):
    m = SetTwoFactorEnforcementCall()
    
    m.enforce = enforce
    if current_code is not None: m.current_code = current_code
    if user_id is not None: m.user_id = user_id
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SET_TWO_FACTOR_ENFORCEMENT_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def list_urls_for_store(self, shared_id):
    m = ListUrlsForStoreCall()
    
    m.shared_id = shared_id
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._LIST_URLS_FOR_STORE_, m.SerializeToString())
    return ListUrlsForStoreReply.FromString(d)

  def provide_second_factor(self, current_code):
    m = ProvideSecondFactorCall()
    
    m.current_code = current_code
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._PROVIDE_SECOND_FACTOR_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def provide_backup_code(self, backup_code):
    m = ProvideBackupCodeCall()
    
    m.backup_code = backup_code
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._PROVIDE_BACKUP_CODE_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def get_backup_codes(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._GET_BACKUP_CODES_, m.SerializeToString())
    return GetBackupCodesReply.FromString(d)

  def create_group(self, common_name):
    m = CreateGroupCall()
    
    m.common_name = common_name
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._CREATE_GROUP_, m.SerializeToString())
    return CreateGroupReply.FromString(d)

  def set_group_common_name(self, group_id, common_name):
    m = SetGroupCommonNameCall()
    
    m.group_id = group_id
    m.common_name = common_name
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SET_GROUP_COMMON_NAME_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def add_group_members(self, group_id, user_emails):
    m = AddGroupMembersCall()
    
    m.group_id = group_id
    m.user_emails.extend(user_emails)
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._ADD_GROUP_MEMBERS_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def remove_group_members(self, group_id, user_emails):
    m = RemoveGroupMembersCall()
    
    m.group_id = group_id
    m.user_emails.extend(user_emails)
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._REMOVE_GROUP_MEMBERS_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def delete_group(self, group_id):
    m = DeleteGroupCall()
    
    m.group_id = group_id
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._DELETE_GROUP_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def list_groups(self, max_results, offset, search_prefix):
    m = ListGroupsCall()
    
    m.max_results = max_results
    m.offset = offset
    if search_prefix is not None: m.search_prefix = search_prefix
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._LIST_GROUPS_, m.SerializeToString())
    return ListGroupsReply.FromString(d)

  def list_group_members(self, group_id):
    m = ListGroupMembersCall()
    
    m.group_id = group_id
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._LIST_GROUP_MEMBERS_, m.SerializeToString())
    return ListGroupMembersReply.FromString(d)

  def set_two_factor_setup_enforcement(self, level):
    m = SetTwoFactorSetupEnforcementCall()
    
    m.level = level
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SET_TWO_FACTOR_SETUP_ENFORCEMENT_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def get_two_factor_setup_enforcement(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._GET_TWO_FACTOR_SETUP_ENFORCEMENT_, m.SerializeToString())
    return GetTwoFactorSetupEnforcementReply.FromString(d)

  def list_group_status_in_shared_folder(self, group_id, share_id):
    m = ListGroupStatusInSharedFolderCall()
    
    m.group_id = group_id
    m.share_id = share_id
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._LIST_GROUP_STATUS_IN_SHARED_FOLDER_, m.SerializeToString())
    return ListGroupStatusInSharedFolderReply.FromString(d)

  def sync_groups_with_ldap_endpoint(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SYNC_GROUPS_WITH_LDAP_ENDPOINT_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def get_user_settings_token(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._GET_USER_SETTINGS_TOKEN_, m.SerializeToString())
    return GetUserSettingsTokenReply.FromString(d)

  def set_user_settings_token(self, token):
    m = SetUserSettingsTokenCall()
    
    m.token = token
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SET_USER_SETTINGS_TOKEN_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def delete_user_settings_token(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._DELETE_USER_SETTINGS_TOKEN_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def search_organization_users(self, max_results, offset, search_prefix):
    m = SearchOrganizationUsersCall()
    
    m.max_results = max_results
    m.offset = offset
    m.search_prefix = search_prefix
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SEARCH_ORGANIZATION_USERS_, m.SerializeToString())
    return SearchOrganizationUsersReply.FromString(d)

  def set_url_require_login(self, key, require_login):
    m = SetUrlRequireLoginCall()
    
    m.key = key
    m.require_login = require_login
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._SET_URL_REQUIRE_LOGIN_, m.SerializeToString())
    return common_pb2.Void.FromString(d)

  def get_access_code_for_mobile(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._GET_ACCESS_CODE_FOR_MOBILE_, m.SerializeToString())
    return MobileAccessCode.FromString(d)

  def get_access_code(self):
    m = common_pb2.Void()
    
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._GET_ACCESS_CODE_, m.SerializeToString())
    return MobileAccessCode.FromString(d)

  def register_storage_agent(self, device_id, csr, os_family, os_name, device_name, interfaces, token):
    m = RegisterDeviceCall()
    
    m.device_id = device_id
    m.csr = csr
    m.os_family = os_family
    m.os_name = os_name
    m.device_name = device_name
    m.interfaces.extend(interfaces)
    if token is not None: m.token = token
    d = self._send_data(SPServiceRpcStub._METHOD_ENUMS_._REGISTER_STORAGE_AGENT_, m.SerializeToString())
    return RegisterDeviceReply.FromString(d)

# @@protoc_insertion_point(module_scope)
