@import "includes/bootstrap/variables.less";
@import "includes/aerofs-variables.less";

@padding-unit: 6px;
@top-padding: @padding-unit * 4;
@navindex: 500;
@navheight: 50px;
@lightgray: #bbb;

h1 {
  padding-top: @top-padding;
  padding-bottom: @top-padding * 2;
}

.logo img {
  height: @navheight;
  padding: @padding-unit 0 0 0;
  display: block;
}

.btn {
  &:not(.btn-default) {
    color: white !important;
  }
}

/* killall Bootstrap rounded corners */
.btn, input, .form-control, .navbar {
  border-radius: 0;
}

.python {
  display: none;
}

#left-nav {
  height: 100%;
  padding: 0 @padding-unit;
  overflow-y: auto;
  top: 0;
  left: 0;
  z-index: @navindex;
  ul {
    list-style-type: none;
    padding: 0;
    li > a {
      padding: 0 0 @padding-unit 0;
    }
  }
  .nav-node {
    padding-top: @top-padding;
  }
  .nav-node + .nav-node {
    padding-top: @padding-unit * 2;
  }
  .nav-node:last-of-type {
    padding-bottom: @top-padding * 3;
  }

  ul li {
    font-weight: bold;
    a {
      color: white;
    }
  }

  ul li ul li {
    font-weight: normal;
    margin-left: @padding-unit * 2;

    a {
      color: @lightgray;
    }
  }
  ul .active {
    a {
      color: @brand-primary;
    }
    ul {
      a {
        color: @lightgray;
      }
      .active a {
        color: @brand-primary;
      }
    }
  }
}

.methods {
  padding-top: @top-padding;
}

.example, #left-nav {
    background: @gray-dark;
  }

.example {
  padding: @top-padding + @padding-unit * 2 @padding-unit * 2 @top-padding @top-padding;
}

.description {
  padding-right: @padding-unit * 2;
  padding-top: @top-padding;
}

.method::first-of-type, .method:first-of-type {
  padding-top: @top-padding;
}

pre {
  // reset Bootstrap's boarder and background for pre's
  padding: inherit;
  margin: inherit;
  background-color: inherit;
  border: none;
}

.example,
.example pre code {
  color: rgb(218, 228, 242);
  text-shadow: rgba(0, 0, 0, 0.701961) 0px 1px 0px;

}

// The block below is adapted from .dt-horizontal in bootstrap.css, to apply
// the .dt-horizontal style to all <dl>s without requiring the dt-horizontal class.
dl {
  *zoom: 1;
}
dl:before,
dl:after {
  display: table;
  content: "";
  line-height: 0;
}
dl:after {
  clear: both;
}
dl dt {
  float: left;
  width: 120px;
  clear: left;
  text-align: right;
  text-transform: uppercase;
  color: slategrey;
  font-weight: inherit;
  font-size: 12.7px;
}
dl dd {
  margin-left: 140px;
  margin-bottom: 15px;
}

// Keep sufficient top margin before <dt>s
dt:before, dt + dd:before {
  display: table;
  content: "";
  height: 10px;
}

.code_heading_style() {
  display: block;
  font-size: small;
  margin-top: 20px;
}

.ex_json:before {
  content: "EXAMPLE OBJECT";
  .code_heading_style();
}

.ex_request:before {
  content: "EXAMPLE REQUEST";
  .code_heading_style();
}

.ex_response:before {
  content: "EXAMPLE RESPONSE";
  .code_heading_style();
}

div.example p {
  margin-top: 10px;
  color: @gray-light;
}

.reset_em_style() {
  // In markdown we use "*attr*{: param}" to define parameters. font-style is to
  // reset the style of <em>
  font-style: normal;
}

em.param {
  .reset_em_style();
  font-weight: bold;
  margin-right: 6px;
}

em.status_code {
  .reset_em_style();
  // This entire block is adapted from bootstrap.css to mimic the <code> style
  color: @codeColor;
  border: 1px solid #e1e1e8;
  white-space: nowrap;
  font-family: Monaco, Menlo, Consolas, "Courier New", monospace;
  font-size: 9pt;

  padding: 2px 4px;
  background-color: #f7f7f9;
}
