=======================================
AeroFS Deployment Packaging and Scripts
=======================================

-----------------
Building Packages
-----------------

Build all packages (from parent directory):
    ant debian

Release packages that have been built to staging:
    make upload

Rebuild all packages and release to staging:
    make clean all upload

Rebuild a specific package and release to staging:
    make clean <package> upload

    where <package> does not include the aerofs prefix (examples include common,
    ca-tools, etc.)

To release debs to production, run in PUBLIC mode:
    make upload MODE=PUBLIC

etc...

-------------------
Directory Structure
-------------------

tools
    Tools, utilities, etc., used for building packages and executing unit tests.

<package>
    Debian style package directories. These directories hold static content and
    dpkg related information for their corresponding package. Each folder has a
    DEBIAN subdirectory, which contains standard scripts and control files used
    by dpkg. Everything else under aerofs-<package> will be installed on the
    target box at the root directory.

    For example, if we had a file aerofs-ca-tools/usr/ca-tools and you installed
    the aerofs-ca-tools package, a new file /usr/ca-tools would exist on the
    system.

debs
    The output folder where the output debian packages are stored. Ignored by
    git.

builders
    In some cases we don't want to or can't keep all package related content in
    the aerofs-<package> subdirectories (for example, we must dynamically create
    jars and must copy them from some other location). In this case, the user
    can create a "builder script" which "builds" the required aerofs-<package>
    subdirectories, i.e. copies over all the required files.

    The script must be named builder/aerofs-<package>.sh and will be executed
    automatically by the make scripts.
