#!/bin/bash

function valid_ip()
{
    local  ip=$1
    local  stat=1

    if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]
    then
        OIFS=$IFS
        IFS='.'
        ip=($ip)
        IFS=$OIFS
        [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
            && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
        stat=$?
    fi
    return $stat
}

CA_HOST="joan.aerofs.com"

if [ $# -ne 1 ] && [ $# -ne 2 ]
then
	echo "Usage: `basename $0` <server_name> [<ca_host>=$CA_HOST]"
	exit 1
fi

SERVER_NAME="$1"

if [ $# -eq 2 ]
then
    CA_HOST="$2"
fi

CA_URL="http://$CA_HOST:1029/prod"
echo ">>> Generating certificate for $SERVER_NAME via $CA_URL"

SERVER_OPENSSL_PCKS1_KEY_FILENAME="$SERVER_NAME"".openssl.key"
SERVER_CSR_FILENAME="$SERVER_NAME"".csr"
SERVER_PKCS8_KEY_FILENAME="$SERVER_NAME"".key"
SERVER_X509CERT_FILENAME="$SERVER_NAME"".crt"

echo ">>> Creating dir for server keys and certs"

SERVER_SSL_DIR="$SERVER_NAME""_ssl"

rm -rf $SERVER_SSL_DIR
mkdir $SERVER_SSL_DIR
cd $SERVER_SSL_DIR

echo ">>> Generating unsecured key pair"

openssl genrsa -out "$SERVER_OPENSSL_PCKS1_KEY_FILENAME" 2048
openssl pkcs8 -topk8 -inform PEM -outform PEM -nocrypt \
    -in "$SERVER_OPENSSL_PCKS1_KEY_FILENAME" \
    -out "$SERVER_PKCS8_KEY_FILENAME"

echo ">>> Generating CSR"

echo "[ req ]
distinguished_name = req_distinguished_name
x509_extensions = v3_req
prompt = no

[ req_distinguished_name ]
C = US
ST = CA
L = SF
O = aerofs.com
CN = $SERVER_NAME

[ v3_req ]" > openssl.cnf

if valid_ip $SERVER_NAME
then
    echo "subjectAltName = @alt_names

[ alt_names ]
IP.1 = $SERVER_NAME" >> openssl.cnf
fi

openssl req -new -reqexts v3_req \
    -key "$SERVER_PKCS8_KEY_FILENAME" \
    -out "$SERVER_CSR_FILENAME" \
    -config openssl.cnf

echo ">>> Submitting request to CA"

# IMPORTANT: use data-binary to preserve newlines
# IMPORTANT: use --trace-ascii - to dump output

curl --silent --show-error -X POST \
    --data-binary @"$SERVER_NAME"".csr" \
    --output "$SERVER_X509CERT_FILENAME" \
    "$CA_URL""?""$SERVER_NAME"

CERTIFICATE_STRING='-----BEGIN CERTIFICATE-----'

# IMPORTANT: use double dash prevent our repeated dashes from being interpreted
# as options.
if [ -f "$SERVER_X509CERT_FILENAME" ] && \
   grep -xq -- "$CERTIFICATE_STRING" "$SERVER_X509CERT_FILENAME"
then
	echo ">>> Certificate created successfully!"
else
	echo ">>> Certificate NOT created!"
    exit 2
fi
