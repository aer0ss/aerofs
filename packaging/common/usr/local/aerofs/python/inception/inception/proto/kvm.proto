package aerofs.inception.kvm;

service KvmService {
    rpc __error__(Void) returns(ErrorReply);

    // Get the name of the service running on the kvm.
    rpc GetServiceName(Void) returns(GetServiceNameReply);

    // Get the current status and IP address, etc for a given KVM.
    rpc GetStatus(Void) returns(GetStatusReply);

    // Configure KVM. Can configure:
    //  1. hostname.
    //  2. network settings.
    rpc ConfigureHostname(ConfigureHostnameCall) returns (ResultReply);
    rpc ConfigureNetwork(ConfigureNetworkCall) returns (ResultReply);
}

message Void {}

// Success/failure message.
message ResultReply {
     enum Result {
        SUCCESS = 0;
        FAILURE = 1;
    }

    required Result result = 1;
    optional string message = 2;
}

message ErrorReply {
    required string errorMessage = 1;
}

message GetServiceNameReply {
    required string serviceName = 1;
}

message GetStatusReply {
    enum KvmStatus {
        // All required KVM services are up, running and healthy.
        GOOD = 0;
        // KVM services might not be up or might be reporting errors.
        BAD = 1;
    }

    enum NetworkType {
        DHCP = 0;
        STATIC = 1;
    }

    required string hostname = 1;
    required KvmStatus status = 2;

    required NetworkType networkType = 3;

    // Optional fields are those that might not be configured yet.
    optional string address = 4;
    optional string netmask = 5;
    optional string network = 6;
    optional string broadcast = 7;
    optional string gateway = 8;

    optional string dns = 9;
}

message ConfigureHostnameCall {
    required string hostname = 1;
}

message ConfigureNetworkCall {
    enum NetworkType {
        DHCP = 0;
        STATIC = 1;
    }

    required NetworkType networkType = 1;

    optional string address = 2;
    optional string netmask = 3;
    optional string network = 4;
    optional string broadcast = 5;
    optional string gateway = 6;

    optional string dns = 7;
}
