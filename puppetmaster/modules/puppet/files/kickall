#!/usr/bin/ruby
require "yaml"

class KickAll

  def initialize(hosts)
    @hosts = hosts
  end

  def run
    kick_cmd = "puppet kick #{@hosts.join(" ")} --foreground --parallel 2"
    puts kick_cmd
    @output = `#{kick_cmd}`
  end

  def response_codes
    Hash[ finished_lines.map{ |l|
      [l.split.first, l.split.last.to_i]
    }]
  end

  def finished_lines
    @output.select{ |l|
      l.include? "finished"
    }
  end

  def unsuccessful_hosts
    response_codes.reject{ |k,v| v == 0 }.keys
  end

end

# find all nodes that will be kicked
nodes = YAML::load(File.open("/etc/puppet/nodes.yaml"))

do_not_kick_nodes = YAML::load(File.open("/etc/puppet/do_not_kick.yaml"))

# take difference of two arrays, unless do_not_kick_nodes is not an Array
if do_not_kick_nodes.kind_of?(Array)
    hosts_to_kick = nodes - do_not_kick_nodes
else
    hosts_to_kick = nodes
end

3.times do

  kick_all = KickAll.new(hosts_to_kick)
  kick_all.run

  hosts_to_kick = kick_all.unsuccessful_hosts
  break if hosts_to_kick.size == 0

  sleep 20

end

puts "FAILED: Unable to kick #{hosts_to_kick.join(" ")}" if hosts_to_kick.size > 0
exit hosts_to_kick.size == 0
